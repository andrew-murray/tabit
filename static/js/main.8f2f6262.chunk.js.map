{"version":3,"sources":["formatSettings.js","App.js","FileImport.js","h2.js","Part.js","PartWithTitle.js","Pattern.js","Audio.js","ToneBoard.js","serviceWorker.js","index.js","notation.js","instrumentation.js","instrumentConfig.js","track.js","utilities.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","camelToReadable","s","spacedString","replace","toUpperCase","slice","FormatSettings","props","classes","useTheme","tokenStateToItem","value","tokenItemToState","handleOptionChange","name","updatedState","settings","onChange","handleCheckedChange","event","target","checked","createOptionMenu","options","itemToState","stateToItem","idString","variant","className","key","id","labelId","e","map","op","lineLengths","resolution","beatResolution","pattern","length","push","includes","sort","beatResolutions","c","lineResolution","root","notation","FORMAT_CONFIG_STRINGS","reduce","prev","curr","FORMAT_CONFIG_BOOLS","control","label","style","backgroundColor","color","palette","background","default","v","toString","parseInt","b","r","container","item","xs","title","aria-label","DefaultSettings","DEFAULT_FORMAT_CONFIG","createMuiTheme","type","primary","main","secondary","ignoreEvent","App","state","instruments","instrumentIndex","instrumentMask","patterns","formatSettings","Object","assign","patternSettings","loadedFile","selectedPattern","settingsOpen","patternsOpen","progress","React","createRef","this","destFilename","fileParts","split","join","js","JSON","stringify","getExportState","blob","Blob","saveAs","Array","from","p","guessPerPatternSettings","instrumentTracks","file","h2","parseHydrogenPromise","content","then","h","assessedInstruments","figureInstruments","DEFAULT_INSTRUMENT_SYMBOLS","activeInstrumentation","setState","createInstrumentMask","figurePatternSettings","catch","error","alert","createTracks","patternData","replacedTracks","entries","trackData","track","rep","patternWithTracks","Promise","resolve","parse","prevState","patternIndex","resolvedSettings","Fragment","tracks","config","active","ref","onPatternTimeChange","time","current","k","createObjects","kuva","userAgent","navigator","vendor","window","opera","some","toMatchItem","match","trackLength","t","Math","max","min","optionalAlert","severity","onClick","loadExample","bind","onImport","handleFileImport","accept","position","bottom","href","iOS","mobile","handlePatternsClose","disableBackdropTransition","disableDiscovery","drawer","undefined","open","onOpen","onClose","drawerHeader","drawerContainer","index","button","selectPattern","patternConfig","handleDrawerClose","patternToRender","patternDetails","getTrackLength","anchor","paper","drawerPaper","existingPatternSettings","existingGlobalSettings","save","renderTitlePage","patternContent","renderPattern","process","browser","test","checkMobile","instrumentConfigColumns","display","width","edge","clsx","hide","flexGrow","renderPatternDrawer","renderSettingsDrawer","mainContent","renderMainContent","Component","FileImport","hiddenFileInput","fileObject","files","reader","FileReader","onload","loadEvent","result","readAsText","buttonProps","click","hidden","calculatePatternResolution","size","positions","notes","note","calculateResolution","parseHydrogenJs","instrumentElements","song","instrumentList","instrument","instrumentArray","element","instrumentComponent","inst","parseFloat","volume","isMuted","gain","drumkit","layer","filename","patternElements","patternList","patternArray","noteElements","noteList","patternSize","noteElement","filter","n","patternsWithTracks","relevantNotes","relevantHits","fromPositions","virtualPatternList","virtualPatternGroups","patternToRelated","virtualGroup","rootPatternName","relatedPatterns","virtual","Set","iteration","expandedObject","objectHasExpanded","related","expandedNodeSet","node","Error","relatedPatternSet","rootPattern","find","patternToMergeName","patternToMerge","merged","aggregate","copiedTrack","format","xmlString","a","parser","xml2js","Parser","parseStringPromise","Part","values","formatPatternString","restMark","patternResolution","patternLines","chunkArray","beatsPerLine","beatChunkSize","linesWithBeats","line","lineIndices","keys","formatLine","startBeat","beats","lineMark","beat","activeNote","showBeatMark","beatMark","numberLine","createNumberMarker","numberRestMark","beatChunks","showBeatNumbers","lineIndex","withStyles","whiteSpace","PartWithTitle","Title","headingLevel","defaultLevel","safeHeading","toLowerCase","getTitleType","instrumentName","Pattern","patternTime","instrumentIndices","floor","fontFamily","textAlign","Audio","AudioContext","webkitAudioContext","minResolution","empty","combined","peakValue","channel","numberOfChannels","combinedChannel","getChannelData","sample","abs","peakAmplitude","context","sounds","tempo","determineTrackLength","trackLengthSamples","totalSamples","samplesPerHydrogen","createBuffer","selected","audioBuffer","audioChannel","trackPoints","toPoints","sampleStart","normalizeAudioBuffer","buffer","source","createBufferSource","loop","playbackRate","connect","destination","DRUMKITS","ToneBoard","samplerCount","sequences","Tone","toDestination","bpm","drumkitName","expectedSamplerCount","mapping","selectedInstrument","relativeUrl","chooseAppropriateUrlForInstrument","samples","determineMinResolution","patternLength","tick","_part","mute","start","now","toSeconds","timeFromBarEnd","loopEnd","queueTransition","enableNewTrack","setLoopPoints","console","log","scheduleOnce","sampleCount","expectedSampleCount","indexFromStart","lastTickTime","trackLengthRes","samplesReady","schedule","notePosition","stop","populateSamples","createSequences","schedulePlaybackForNewTracks","prevProps","snapshot","Slider","defaultValue","step","valueLabelDisplay","IconButton","play","Grid","tempoControl","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message","formatConfig","propName","hasOwnProperty","str","chunkSize","RegExp","chunks","i","lineLength","beatCount","ceil","numberMarkerArray","asHTML","validateConfig","formatSymbol","symbol","numericPosition","formattedLine","charAt","lineWithBeats","chunkString","trackDict","defaultLineResolution","fill","charIndex","trackID","trackSymbol","trackInstance","resolveConfig","patternString","lineArray","formattedLineArray","formatLineWithMarkers","normalizeInstrumentsForFiguring","nInst","manageAccentOrGhost","accentSymbol","ghostSymbol","outputInstruments","t0","t1","zeroLouder","activeInstruments","nonTrivialInstruments","instrumentID","add","has","defaultSymbolForSingleInstrument","symbolConfig","lowerName","instrumentsRaw","output","concat","worthwhileInstruments","relevantTracks","trackIsClick","tomIndex","bassIndex","collated","candidate","clickTrack","hitTrack","instrumentIsTom","rawInstrumentName","lastTrack","figureClickyInstruments","djembeTracks","slapArray","toneArray","bassArray","djembeMapping","figureDjembes","figureSnares","figureShakers","instrumentUsed","ThinFormControlLabel","marginLeft","marginRight","FormControlLabel","InlinableIconButton","padding","CenterTableCell","TableCell","InstrumentConfig","useState","renamingInstrument","setRenamingInstrument","nameState","setNameState","createCell","x","y","align","oldInstrumentIndex","findIndex","dstInstrumentIndex","oldInstrument","replacedSrcInstrument","dstInstrument","replacedInstruments","handleChange","createMatchingRow","component","scope","fontSize","removeInstrument","editSymbol","setEditSymbol","editSymbolState","setEditSymbolState","aria-labelledby","autoFocus","fullWidth","trim","extraInstrument","updatedSymbol","table","currentSymbol","startEditingSymbol","baseInstrumentIndex","baseInstrumentId","targetInstrumentIndex","findHCF","count","other","_sumOverlapsOfArrays","hcf","formatResolution","pat","totalLength","points","representPoints","arrayIndex","resolutionToUse","implicitPositions","allNotesPass"],"mappings":"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","file":"static/js/main.8f2f6262.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport notation from \"./notation\";\nimport HelpIcon from '@material-ui/icons/HelpOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nfunction camelToReadable(s)\n{\n  const spacedString = s.replace(/([A-Z])/g, ' $1');\n  return spacedString[0].toUpperCase() + spacedString.slice(1);\n}\n\nfunction FormatSettings(props) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  // todo: change to multiple useState calls?\n\n  function tokenStateToItem(value)\n  {\n    return value === \" \" ? \"space\" : value;\n  }\n\n  function tokenItemToState(value)\n  {\n    return value === \"space\" ? \" \" : value;\n  }\n\n  const handleOptionChange = (name, value) => {\n    const updatedState = {...props.settings, [name]: value};\n    props.onChange(updatedState);\n  };\n\n  const handleCheckedChange = (event) => {\n    const updatedState = {...props.settings, [event.target.name]: event.target.checked};\n    props.onChange(updatedState);\n  };\n\n  function createOptionMenu(\n    name,\n    options,\n    itemToState = tokenItemToState,\n    stateToItem = tokenStateToItem\n  )\n  {\n    const idString = \"form-control-\" + name + \"-id\";\n    return (\n      <FormControl variant=\"filled\" className={classes.formControl} key={idString} id={idString}>\n        <InputLabel id=\"settings-option-{name}\">{name}</InputLabel>\n        <Select\n          labelId={\"settings-option-\" + name + \"-labelID\"}\n          id={\"settings-option-\" + name + \"-id\"}\n          value={stateToItem(props.settings[name])}\n          name={name}\n          onChange={(e) => handleOptionChange( e.target.name, itemToState(e.target.value))}\n        >\n          {options.map((op) => <MenuItem key={\"settings-menu-item-\" + name + \"-\" + op} value={stateToItem(op)}>{stateToItem(op)}</MenuItem>)}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  function createBoolControl(name)\n  {\n    return (\n      <FormControlLabel\n        control={<Switch checked={props.settings[name]} onChange={handleCheckedChange} name={name} />}\n        label={camelToReadable(name)}\n        key={\"switch-\"+name}\n      />\n    );\n  };\n\n  const resolutionToBeatString = (r) => ( r / props.settings.beatResolution ).toString();\n  const beatStringToResolution = (b) => props.settings.beatResolution * parseInt(b);\n  \n  const candidateLineLengths = [ 2, 3, 4, 5, 6, 7, 8, 14, 16, 32 ];\n  let lineLengths = [];\n  for( const c of candidateLineLengths )\n  {\n    const resolution = c * 48;\n    if( (resolution % props.settings.beatResolution) === 0\n      && (resolution <= props.pattern.length)\n     )\n    {\n      lineLengths.push( resolution );\n    }\n  }\n\n  if( !lineLengths.includes( props.pattern.length ) )\n  {\n    lineLengths.push( props.pattern.length );\n    lineLengths.sort();\n  }\n\n  const candidateBeatResolutions = [24, 36, 48, 72, 96];\n  let beatResolutions = [];\n  for( const c of candidateBeatResolutions )\n  {\n    if( (c % props.pattern.resolution) === 0 && ( props.settings.lineResolution % c ) === 0)\n    {\n      beatResolutions.push( c );\n    }\n  }\n  const beatLineHelp = \"Only options that produce lines made up of 'n' whole beats (no part-beats) are shown. \"\n  + \"If the options displayed for either lineResolution or beatResolution are too restrictive, try changing the other option.\"\n  + \"If lineResolution only results in one line, more options for beatResolution will be shown.\"\n  return (\n    <FormGroup className={classes.root}>\n      {notation.FORMAT_CONFIG_STRINGS.map( op => createOptionMenu( op[0], op[1] ) ).reduce((prev, curr) => [prev, curr])}\n      {notation.FORMAT_CONFIG_BOOLS.map( op => createBoolControl( op )).reduce((prev, curr) => [prev, curr]) }\n      <div style={{backgroundColor : \"white\", color : theme.palette.background.default}}><p> {props.pattern.name + \" Options\"} </p></div>\n      {\n        createOptionMenu(\n          \"beatResolution\",\n          beatResolutions,\n          (v) => v.toString(), // stateToItem\n          (v) => parseInt(v) // itemToState\n        )\n      }\n      {createOptionMenu(\n        \"lineResolution\",\n        lineLengths,\n        beatStringToResolution,\n        resolutionToBeatString\n      )}\n      <Grid container>\n        <Grid item xs={8}/>\n        <Grid item xs={4}>\n          <Tooltip title={beatLineHelp} aria-label=\"help\">\n            <Icon>\n              <HelpIcon />\n            </Icon>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </FormGroup>\n  );\n}\n\nconst DefaultSettings = notation.DEFAULT_FORMAT_CONFIG; \n\n\nexport { FormatSettings, DefaultSettings }\nexport default FormatSettings;","import React from 'react';\nimport clsx from 'clsx';\nimport FileImport from \"./FileImport\";\nimport Pattern from \"./Pattern\";\nimport h2 from './h2';\nimport './App.css';\n\nimport { Alert } from '@material-ui/lab';\n\n// define mui theme, including responsiveFont\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n// drawer\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Divider from \"@material-ui/core/Divider\";\n\n// notationSettings\n\nimport {FormatSettings, DefaultSettings} from \"./formatSettings\";\nimport {createInstrumentMask, InstrumentConfig} from \"./instrumentConfig\";\nimport { activeInstrumentation, figureInstruments, DEFAULT_INSTRUMENT_SYMBOLS } from \"./instrumentation\";\nimport notation from \"./notation\";\n\nimport Grid from '@material-ui/core/Grid';\n\n// load static data\nimport kuva from \"./kuva.json\";\nimport track from \"./track\";\n\nimport { saveAs } from 'file-saver';\n\nimport ToneBoard from \"./ToneBoard\";\n// mui theme config\nlet theme = createMuiTheme( { \n  palette: { \n    type: 'dark',\n    primary: { main: '#36d9be' },\n    secondary: { main: '#f50057' }\n   } \n} );\n\nconst ignoreEvent = (event) => {\n  return event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift');\n};\n\nclass App extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      // data\n      instruments : null,\n      instrumentIndex : null,\n      instrumentMask : null,\n      patterns : null,\n      formatSettings : Object.assign({}, DefaultSettings),\n      patternSettings : [],\n      // ui state\n      loadedFile : null,\n      selectedPattern : null,\n      settingsOpen : false,\n      patternsOpen : false,\n      progress : null\n    };\n    this.pattern = React.createRef();\n  }\n\n\n  getExportState()\n  {\n    return {\n      instruments : this.state.instruments,\n      instrumentIndex : this.state.instrumentIndex,\n      patterns : this.state.patterns,\n      formatSettings: this.state.formatSettings,\n      patternSettings : this.state.patternSettings\n    }\n  }\n\n  save()\n  {\n    let destFilename = \"download.tabit\";\n    if(this.state.loadedFile)\n    {\n      const fileParts = this.state.loadedFile.split(\".\");\n      if( fileParts.length === 1 )\n      {\n        destFilename = fileParts[0] + \".tabit\";\n      }\n      else\n      {\n        destFilename = fileParts.slice(0, fileParts.length - 1).join(\".\") + \".tabit\";\n      }\n    }\n\n    const js = JSON.stringify(this.getExportState(), null, 4);\n    const blob = new Blob([js], {type: \"application/json\"});\n    saveAs(blob, destFilename);\n  }\n\n  figurePatternSettings(patterns)\n  {\n    return Array.from(\n      patterns,\n      (p) => notation.guessPerPatternSettings( p.instrumentTracks )\n    );\n  }\n\n\n  handleFileImport(e)\n  {\n    if( e.file.name.includes(\"h2song\") )\n    {\n      // e = { file : , content : }\n      h2.parseHydrogenPromise(e.content).then(h => {\n        const assessedInstruments = figureInstruments(h.instruments, DEFAULT_INSTRUMENT_SYMBOLS, h.patterns);\n        const instrumentIndex = activeInstrumentation(h.instruments, h.patterns);\n        this.setState({\n          // data\n          instrumentIndex : instrumentIndex,\n          instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n          instruments : assessedInstruments,\n          patterns : h.patterns,\n          patternSettings : this.figurePatternSettings(h.patterns),\n          // general app state\n          loadedFile : e.file.name,\n          patternsOpen : true,\n          selectedPattern : h.patterns.length === 0 ? null : 0,\n        });\n      }).catch( (error)=>{ alert(\"Failed to load file \" + e.file.name  + \" with error \" + error); } );\n    }\n    else\n    {\n\n      const createTracks = (patternData) => \n      {\n        // the instruments currently work as simple objects\n        // we need to create tracks!\n        let patterns = [];\n        for( let pattern of patternData )\n        {\n          let replacedTracks = {};\n          // todo: find a more compact way of doing this\n          for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n          {\n            replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n          }\n          let patternWithTracks = Object.assign({}, pattern);\n          patternWithTracks.instrumentTracks = replacedTracks;\n          patterns.push(patternWithTracks);\n        }\n        return patterns;\n      }\n\n      // assume it's a tabit file!\n      Promise.resolve(e.content).then(JSON.parse).then( prevState => {\n        this.setState( {\n          instrumentIndex : prevState.instrumentIndex,\n          instrumentMask : createInstrumentMask(prevState.instrumentIndex, prevState.instruments),\n          instruments : prevState.instruments,\n          patterns : createTracks(prevState.patterns),\n          formatSettings : prevState.formatSettings,\n          patternSettings : prevState.patternSettings,\n          // general app state\n          loadedFile : e.file.name,\n          selectedPattern : prevState.patterns.length === 0 ? null : 0,\n          patternsOpen : prevState.patterns.length !== 0,\n        } );\n      }).catch( (error)=>{ alert(\"Failed to load file \" + e.file.name  + \" with error \" + error); } );\n    }\n  }\n\n  selectPattern(patternIndex)\n  {\n    this.setState( { selectedPattern: patternIndex } );\n  }\n\n  // todo: this is a separate component!\n  renderPattern(pattern, resolvedSettings)\n  {\n    return (\n      <React.Fragment>\n        <Pattern \n          instruments={this.state.instruments} \n          tracks={pattern.instrumentTracks}\n          config={resolvedSettings}\n          active={this.state.progress}\n          ref={this.pattern}\n        />\n        <ToneBoard \n          instruments={this.state.instruments} \n          instrumentIndex={this.state.instrumentIndex} \n          selectedPattern={pattern}\n          patterns={this.state.patterns}\n          onPatternTimeChange = {(time)=>{this.onPatternTimeChange(time);}}\n        />\n      </React.Fragment>\n    );\n  }\n\n  onPatternTimeChange(time)\n  {\n    this.pattern.current.onPatternTimeChange(time);\n  }\n\n  loadExample()\n  {\n    const createObjects = (state) => \n    {\n      // the instruments currently work as simple objects\n      // we need to create tracks!\n      for( let pattern of state.patterns )\n      {\n        let replacedTracks = {};\n        // todo: find a more compact way of doing this\n        for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n        {\n          replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n        }\n        pattern.instrumentTracks = replacedTracks;\n      }\n      return state;\n    }\n    const k = createObjects(kuva);\n    const assessedInstruments = figureInstruments(k.instruments, DEFAULT_INSTRUMENT_SYMBOLS, k.patterns);\n    const instrumentIndex = activeInstrumentation(k.instruments, k.patterns);\n    this.setState({\n      instrumentIndex : instrumentIndex,\n      instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n      instruments : assessedInstruments,\n      patterns : k.patterns,\n      selectedPattern : k.patterns.length === 0 ? null : 0,\n      loadedFile : \"kuva.example\",\n      patternsOpen : true,\n      patternSettings : this.figurePatternSettings(k.patterns)\n    });\n  }\n\n  checkMobile()\n  {\n    // the simple version from\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n    const toMatch = [\n        /Android/i,\n        /webOS/i,\n        /iPhone/i,\n        /iPad/i,\n        /iPod/i,\n        /BlackBerry/i,\n        /Windows Phone/i\n    ];\n\n    return toMatch.some((toMatchItem) => {\n        return userAgent.match(toMatchItem);\n    });\n  }\n\n\n  getTrackLength(pattern)\n  {\n    let trackLength = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        trackLength = Math.max( trackLength, t.length() );\n    }\n    return trackLength;\n  }\n\n  getResolution(pattern)\n  {\n    let resolution = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        resolution = Math.min( resolution, t.resolution );\n    }\n    return resolution;\n  }\n\n  renderTitlePage()\n  {\n    const showAlert = this.state.patterns != null && this.state.patterns.length === 0;\n    const optionalAlert = showAlert ? ( <Alert severity=\"error\">{this.state.loadedFile} contained no patterns! Try another.</Alert> )\n                                    : \"\";\n    return (\n      <React.Fragment>\n      <div>\n        <h2>tabit</h2>\n        <p>I read .h2songs and write tab</p>\n        <Button variant=\"contained\" onClick={this.loadExample.bind(this)} style={{margin: \"1em\"}}>Load example</Button>\n        <FileImport\n          style={{margin: \"1em\"}}\n          variant=\"contained\"\n          onImport={this.handleFileImport.bind(this)}\n          accept=\".tabit,.h2song\"\n          />\n          {optionalAlert}\n      </div>\n      <div style={{ position:\"absolute\", bottom:0 }} >\n        <p>tabit relies on publicly available sound libraries listed at <a href=\"https://github.com/andrew-murray/tabit\">https://github.com/andrew-murray/tabit</a></p>\n      </div>\n      </React.Fragment>\n    );\n  }\n\n  renderPatternDrawer(iOS, mobile)\n  {\n    const classes = this.props;\n    const handlePatternsClose = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( { patternsOpen : false } );\n    };\n    const handlePatternsOpen = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( { patternsOpen : true } );\n    };\n\n    return (\n      <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n      className={classes.drawer}\n      variant={ mobile ? undefined : \"persistent\" }\n      open={this.state.patternsOpen}\n      onOpen={handlePatternsOpen}\n      onClose={handlePatternsClose}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handlePatternsClose}>\n              <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>\n            {(this.state.patterns ?? []).map( (pattern, index) => (\n              <ListItem button key={\"drawer-pattern\" + index.toString()} onClick={() => this.selectPattern(index)}>\n                  <ListItemText primary={pattern.name} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </SwipeableDrawer>\n    );\n  }\n\n\n\n  renderSettingsDrawer(iOS, mobile, patternConfig)\n  {\n    const classes = this.props;\n    const settingsChangeCallback = (config) => {\n      let existingPatternSettings = Array.from( this.state.patternSettings );\n      let existingGlobalSettings = Object.assign( {}, this.state.formatSettings );\n      for( let [k,v] of Object.entries(config) )\n      {\n        if( k in existingPatternSettings[this.state.selectedPattern] )\n        {\n          existingPatternSettings[this.state.selectedPattern][k] = v;\n        }\n        else\n        {\n          existingGlobalSettings[k] = v;\n        }\n      }\n      this.setState( { formatSettings: existingGlobalSettings, patternSettings : existingPatternSettings } );\n    };\n\n    const handleDrawerOpen = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( {settingsOpen : true} );\n    };\n\n    const handleDrawerClose = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( {settingsOpen : false} );\n    };\n\n    const patternToRender = this.state.patterns[this.state.selectedPattern];\n\n    const patternDetails = {\n      name : patternToRender.name,\n      resolution : patternToRender.resolution,\n      \"length\" : this.getTrackLength(patternToRender)\n    };\n\n    return (\n      <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n        className={classes.drawer}\n        variant={ mobile ? undefined : \"persistent\" }\n        anchor=\"right\"\n        open={this.state.settingsOpen}\n        onOpen={handleDrawerOpen}\n        onClose={handleDrawerClose}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n              <ChevronRightIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <FormatSettings\n          onChange={settingsChangeCallback}\n          settings={patternConfig}\n          pattern={patternDetails}\n          />\n        <Button\n          style={{backgroundColor : \"white\", color : theme.palette.background.default}}\n          onClick={(e) => { this.save(); } }\n        >Download</Button>\n      </SwipeableDrawer>\n    );\n  }\n\n  renderMainContent()\n  {\n    if(this.state.patterns == null || this.state.patterns.length === 0)\n    {\n      return this.renderTitlePage();\n    }\n    else\n    {\n      const patternToRender = this.state.patterns[this.state.selectedPattern];\n      const patternConfig = Object.assign(\n        Object.assign({}, this.state.formatSettings), // global settings\n        this.state.patternSettings[this.state.selectedPattern] // then apply per-pattern settings\n      );\n      const patternContent = this.renderPattern(patternToRender, patternConfig);\n       \n\n      const changeInstrumentsCallback = (instruments) => {\n        this.setState( {\n          instruments : instruments,\n          instrumentMask : createInstrumentMask(this.state.instrumentIndex, instruments)\n        } );\n      }\n\n      const classes = this.props;\n      const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n      const mobile = this.checkMobile();\n\n      const instrumentConfigColumns = mobile ? 12 : 8;\n\n\n      return (\n        <React.Fragment>\n          <div style={{display:\"flex\", width: \"95%\"}}> \n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open pattern list\"\n              edge=\"start\"\n              onClick={(e)=>{ this.setState( {patternsOpen: true } )}}\n              className={clsx({\n                [classes.hide] : !this.state.patternsOpen\n              })}\n            >\n              <ChevronRightIcon />\n            </IconButton>\n            <div className=\"content-title\" style={{flexGrow:1}}>\n            </div>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open settings\"\n              edge=\"end\"\n              onClick={(e)=>{ this.setState( {settingsOpen: true } )}}\n              className={clsx(this.state.settingsOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n          {patternContent}\n          <Grid container>\n          <Grid item xs={(12 - instrumentConfigColumns ) / 2} />\n          <Grid item xs={instrumentConfigColumns}>\n            <InstrumentConfig\n              instruments={this.state.instruments}\n              instrumentIndex={this.state.instrumentIndex}\n              instrumentMask={this.state.instrumentMask}\n              onChange={changeInstrumentsCallback}\n            />\n          </Grid>\n          <Grid item xs={(12 - instrumentConfigColumns ) / 2} />\n          </Grid>\n          {this.renderPatternDrawer(iOS,mobile)}\n          {this.renderSettingsDrawer(iOS,mobile, patternConfig)}\n        </React.Fragment>\n      );\n    }\n  }\n\n  render() {\n    const mainContent = this.renderMainContent();\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          {mainContent}\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// FileUpload.react.js\n\n// inspired by https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n// and https://stackoverflow.com/questions/55830414/how-to-read-text-file-in-react\n\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\n\nclass FileImport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.hiddenFileInput = React.createRef();\n  }\n\n  onChange(e) {\n    const fileObject = e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = loadEvent => {\n      if( this.props.onImport )\n      {\n        this.props.onImport(\n          { file: fileObject, content : loadEvent.target.result}\n        );\n      }\n    }\n    reader.readAsText(fileObject);\n  }\n\n  render() {\n    const clickFile = (e) => {\n      this.hiddenFileInput.current.click();\n    }\n\n    const {onImport, accept, ...buttonProps} = {...this.props};\n    return (\n      <React.Fragment>\n        <Button onClick={clickFile} {...buttonProps}>Import File</Button>\n        <input\n          type=\"file\"\n          hidden\n          accept={accept}\n          onChange={(e) => this.onChange(e)} ref={this.hiddenFileInput}\n          />\n      </React.Fragment>\n   )\n  }\n}\n\nexport default FileImport;\n","// h2.js\n\nimport track from \"./track\";\nimport xml2js from \"xml2js\";\nimport { calculateResolution } from \"./utilities\";\n\n// TODO: This file was written with the hope that using xml2js would make things cleaner\n// it didn't, purely because xml2js is an okay library doing a difficult task\n// it ensures to produce a good json file but in doing so muddles the data a bit.\n// Should replace this with dom-parser and window.DOMParser\n\n// let's think about the data representation needed\n\nfunction calculatePatternResolution(pattern, size)\n{\n  const positions = Array.from(pattern.notes, note => note.position)\n  return calculateResolution(positions, size);\n}\n\nfunction parseHydrogenJs(result)\n{\n    // fixme:\n    // this parsing often assumes there's >=2 elements\n\n    // this \"zero\" here is presumably an artefact of xml --> json representation\n    const instrumentElements = result.song.instrumentList[0].instrument;\n\n    // instruments\n    // [  { id, name } ]\n    const instrumentArray = Array.from(\n      instrumentElements,\n      function(element){\n        const instrumentComponent = element.instrumentComponent[0];\n        let inst = {\n          \"id\" : parseInt(element.id), \n          \"name\" : element.name[0],\n           \"volume\" : parseFloat(element.volume), \n           \"muted\" : element.isMuted[0] === \"true\",\n           \"gain\" : parseFloat(element.gain),\n           \"drumkit\" : element.drumkit[0]\n        };\n        if( \"layer\" in instrumentComponent )\n        {\n          inst[\"filename\"] = instrumentComponent.layer[0].filename[0];\n        }\n        return inst;\n      }\n    );\n\n    const patternElements = result.song.patternList[0].pattern;\n    // patterns\n    // [  { name, size, notes } ]\n    const patternArray = Array.from(\n      patternElements,\n      function(element){\n        const noteElements = element.noteList[0].note;\n        const patternSize = parseInt(element.size);\n        let notes = [];\n        if( noteElements )\n        {\n          // notes \n          // [ {position, instrument(id}]\n          notes = Array.from(\n            noteElements,\n            function(noteElement){\n              return {\"position\" : parseInt(noteElement.position), \"instrument\" : parseInt(noteElement.instrument)};\n            }\n          );\n\n          // hydrogen permits you to have notes that reach past the pattern size, \n          // they then get revealed when you extend the pattern, \n          // here's an easy point to get rid of them, we don't want them to factor into any calculations\n          notes = notes.filter( n => n.position < patternSize );\n        }\n        return {\n          \"size\" : patternSize, \n          \"name\" : element.name[0],\n          \"notes\" : notes\n        };\n      }\n    );\n\n    // transform pattern to a managable data\n    const patternsWithTracks = Array.from(\n      patternArray,\n      function(pattern)\n      { \n        const resolution = calculatePatternResolution(pattern, pattern.size);\n        let instrumentTracks = {};\n        for( const instrument of instrumentArray )\n        {\n          const relevantNotes = pattern.notes.filter( \n            note => (note.instrument === instrument.id)\n          );\n          const relevantHits = Array.from(\n            relevantNotes,\n            note => note.position\n          );\n          instrumentTracks[ instrument.id.toString() ] = track.fromPositions( relevantHits, pattern.size, resolution);\n        }\n        pattern.resolution = resolution;\n        pattern.instrumentTracks = instrumentTracks;\n        return pattern;\n      }\n    );\n\n    // todo: refactor into (at least one) separate function\n    if(result.song.virtualPatternList)\n    {\n      // so unfortunately, virtualPatternGroup represents a directional graph and we have to build\n      // the tree of dependencies for each node, we implement this in a very simplistic way\n      // let's build a mapping( name -> [ names ] ) and continue to resolve it\n      // until we're done\n      const virtualPatternGroups = result.song.virtualPatternList[0].pattern;    \n      if( virtualPatternGroups )\n      {\n        // each element looks like\n        //\n        // <pattern>\n        // <name>p2-a-djembe</name>\n        // <virtual>p2-a-bass</virtual>\n        // <virtual>p2-snare</virtual>\n        // </pattern>\n\n        let patternToRelated = {};\n\n        // record initial relations\n        for( const virtualGroup of Array.from(virtualPatternGroups) )\n        {\n          const rootPatternName = virtualGroup.name[0];\n          const relatedPatterns = Array.from(virtualGroup.virtual);\n          patternToRelated[rootPatternName] = new Set(relatedPatterns);\n        }\n\n        // expand connections until our object stops changing, brute-force\n        // this is a relatively large limit but is better than the potential of an infinite loop\n        // I think 3 layers would be pushing this feature\n        const MAX_ITERATIONS = 20;\n        for(let iteration = 0; iteration < MAX_ITERATIONS; ++iteration)\n        {\n          let expandedObject = {};\n          // we could do a check at the end of each loop, but it's easier to track object equality this way\n          let objectHasExpanded = false;\n          for(const [root, related] of Object.entries(patternToRelated))\n          {\n            let expandedNodeSet = new Set(related);\n            for( const node of expandedNodeSet )\n            {\n              if( node in patternToRelated )\n              {\n                // set union\n                expandedNodeSet = new Set([...expandedNodeSet, ...patternToRelated[node]]);\n              }\n            }\n            objectHasExpanded = objectHasExpanded || ( expandedNodeSet.size !== related.size );\n            expandedObject[ root ] = expandedNodeSet;\n\n          }\n          // exit if no change\n          if(!objectHasExpanded)\n          {\n            break;\n          }\n          // throw if we've failed to resolve all the connections by now, morelikely something has gone wrong\n          if( iteration === MAX_ITERATIONS )\n          {\n            throw new Error(\"Reached max virtual_pattern recursion depth.\");\n          }\n          // otherwise update mapping and continue\n          patternToRelated = expandedObject;\n        }\n\n        for( const [rootPatternName, relatedPatternSet] of Object.entries(patternToRelated) )\n        {\n          // could do filter, and assert on length?\n          let rootPattern = patternsWithTracks.find(p => p.name === rootPatternName);\n          for( const patternToMergeName of relatedPatternSet )\n          {\n            const patternToMerge = patternsWithTracks.find(p => p.name === patternToMergeName );\n            for( const [id, t] of Object.entries(patternToMerge.instrumentTracks) )\n            {\n              if( id in rootPattern.instrumentTracks )\n              {\n                const merged = rootPattern.instrumentTracks[ id ].aggregate( t );\n                // we match hydrogen's implementation here and discard values past the length of the original track\n                merged.rep.length = rootPattern.size  / merged.resolution;\n                rootPattern.instrumentTracks[ id ] = merged; \n              }\n              else\n              {\n                // ensure track is the appropriate length & res\n                let copiedTrack = t.format(rootPattern.resolution);\n                copiedTrack.length = rootPattern.size  / rootPattern.resolution;\n                rootPattern.instrumentTracks[id] = copiedTrack;\n              }\n            }\n          }\n          // reassess resolution and apply to all tracks\n          // this may not be necessary but it's probably nice\n          const resolution = calculatePatternResolution(rootPattern, rootPattern.size);\n          rootPattern.resolution = resolution;\n          for( const [id, track] of Object.entries(rootPattern.instrumentTracks) )\n          {\n            // ensure that \n            rootPattern[id] = track.format( resolution );\n          }\n        }\n\n      }\n    }\n\n\n    return {\n      \"instruments\" : instrumentArray,\n      \"patterns\" : patternsWithTracks\n    }\n}\n\nasync function parseHydrogenPromise(xmlString)\n{\n  let parser = new xml2js.Parser();\n\n  return parser.parseStringPromise(xmlString).then(parseHydrogenJs);\n}\n\nexport default { parseHydrogenPromise };","import React from 'react';\nimport notation from \"./notation\"\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    whiteSpace:\"pre\"\n  },\n});\n\nclass Part extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const tracks = Object.values(this.props.tracks);\n    if(tracks.length === 0 )\n    {\n      return <React.Fragment />\n    }\n    const patternArray = notation.formatPatternString(\n      this.props.instrument,\n      this.props.tracks,\n      this.props.config.restMark\n    );\n    // don't support a multi-line pattern, that doesn't divide the beatResolution\n    // because it's a nightmare!\n    const patternResolution = tracks[0].resolution;\n    if( (this.props.config.lineResolution % this.props.config.beatResolution) !== 0\n        && ( patternArray.length * patternResolution > this.props.config.lineResolution ) )\n    {\n      throw new Error(\"This code only supports a beatResolution that divides the lineResolution\");\n    }\n    // this code has got very convoluted\n    const patternLines = notation.chunkArray(patternArray, this.props.config.lineResolution / patternResolution, 0);\n    const beatsPerLine = this.props.config.lineResolution / this.props.config.beatResolution;\n    const beatChunkSize = this.props.config.beatResolution / patternResolution;\n    const linesWithBeats = patternLines.map(\n      line => notation.chunkArray( line, beatChunkSize )\n    );\n    const lineIndices = [...patternLines.keys()];\n    const formatLine = (key, line, startBeat)=>{\n      const beats = [...line.keys()];\n      return (\n        <p key={\"pattern-line-\" + key}>\n          <span key={\"line-start-\" + key}>{this.props.config.lineMark}</span>\n          {\n            beats.map( beat => <React.Fragment key={\"fragment-beat-\"+ (beat + startBeat).toString()}>\n              <span key={\"span-beat-\" + (beat + startBeat).toString()} className={(beat + startBeat) === this.props.activeNote ? \"activeNote\" : \"\"}>{line[beat].join(\"\")}</span>\n              <span key={\"span-beat-marker-\" + (beat + startBeat).toString()}>{(this.props.config.showBeatMark && beat !== beats[beats.length-1]) ? this.props.config.beatMark : \"\"}</span>\n            </React.Fragment>\n            )\n          }\n          <span key={\"line-end-\" + key}>{this.props.config.lineMark}</span>\n        </p>\n      );\n    };\n\n    const numberLine = notation.createNumberMarker(\n      this.props.config.numberRestMark,\n      this.props.config.beatResolution,\n      patternResolution,\n      Math.min( this.props.config.lineResolution, patternLines[0].length * patternResolution )\n    );\n    const beatChunks = notation.chunkArray(\n      numberLine,\n      this.props.config.beatResolution / patternResolution\n    );\n    return (\n      <React.Fragment>\n        {this.props.config.showBeatNumbers ? formatLine(\"beat\", beatChunks, 0) : \"\" }\n        {lineIndices.map(lineIndex=>formatLine(lineIndex.toString(), linesWithBeats[lineIndex], beatsPerLine * lineIndex))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Part);","import React from 'react';\nimport Part from \"./Part\";\n\nfunction getTitleType(headingLevel, defaultLevel)\n{\n    const validHeadingLevels = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    const safeHeading = headingLevel ? headingLevel.toLowerCase() : '';\n    const Title = validHeadingLevels.includes(safeHeading) ? safeHeading : defaultLevel;\n    return Title;\n}\n\nclass PartWithTitle extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const Title = getTitleType(this.props.headingLevel, \"h4\");\n    return (\n      <article>\n        <Title>{this.props.instrumentName}</Title>\n        <Part \n          instrument={this.props.instrument}\n          tracks={this.props.tracks}\n          config={this.props.config}\n          activeNote={this.props.activeNote}\n        />\n      </article>\n    );\n  }\n}\n\nexport default PartWithTitle;","import React from 'react';\nimport PartWithTitle from \"./PartWithTitle\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    \"margin-bottom\": theme.spacing(2),\n    fontFamily: \"Roboto Mono\",\n    textAlign: \"left\",\n    whiteSpace:\"pre\",\n    \"& .activeNote\": {\n      color : theme.palette.primary.main\n    }\n  },\n});\n\nclass Pattern extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      patternTime : undefined\n    };\n  }\n\n  onPatternTimeChange(patternTime)\n  {\n    if( patternTime !== null && patternTime !== undefined )\n    {\n      this.setState({patternTime : patternTime});\n    }\n    else\n    {\n      this.setState({patternTime : undefined });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const instrumentIndices = [...this.props.instruments.keys()];\n    const beatResolution = this.props.config.beatResolution;\n    return (\n      <div className={classes.root} >\n        { instrumentIndices.map( \n            (instrumentIndex) => ( <PartWithTitle \n              key={\"part-\" + instrumentIndex.toString()}\n              instrumentName={this.props.instruments[instrumentIndex][0]}\n              instrument={this.props.instruments[instrumentIndex][1]}\n              tracks={this.props.tracks}\n              config={this.props.config}\n              activeNote={this.state.patternTime !== undefined ? Math.floor(this.state.patternTime / beatResolution) : undefined}\n            /> )\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Pattern);","class Audio\n{\n\n  // todo: we replace a valid audioContext with a blank object, so that we can run tests in node\n  //       this should probably be replaced by https://github.com/audiojs/web-audio-api \n  //       and a test-suite written\n  static createWebContext()\n  {\n    return new (window.AudioContext || window.webkitAudioContext || Object)();\n  }\n\n  static determineMinResolution(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let minResolution = 48; \n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty()\n        )\n        {\n          minResolution = Math.min( minResolution, t.resolution );\n        }\n      }\n      return minResolution;\n  }\n\n  static determineTrackLength(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let trackLength = 48;\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty() \n        )\n        {\n          trackLength = Math.max( trackLength, t.length() );\n        }\n      }\n      return trackLength;\n  }\n\n  static peakAmplitude(\n    combined\n  )\n  {\n    let peakValue = 0.0;\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for( let sample = 0; sample < combinedChannel.length; ++sample)\n      {\n        peakValue = Math.max( Math.abs(combinedChannel[sample]), peakValue );\n      }\n    }\n    return peakValue;\n  }\n\n  static normalizeAudioBuffer(\n    combined\n  )\n  {\n    const peakValue = Audio.peakAmplitude( combined );\n    if( peakValue > 1.0 )\n    {\n      for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n        let combinedChannel = combined.getChannelData(channel);\n        for( let sample = 0; sample < combinedChannel.length; ++sample)\n        {\n          combinedChannel[sample] = combinedChannel[sample] / peakValue;\n        }\n      }\n    }\n    return combined;\n  }\n\n  static createMasterTrack(\n    context,\n    tracks,\n    instrumentIndex,\n    sounds,\n    tempo\n  )\n  {\n    const trackLength = Audio.determineTrackLength( instrumentIndex, tracks );\n\n\n    const beatTime =  (60.0 / tempo) * 1000;\n    const timePerHydrogen = beatTime / 48.0;\n\n\n    // let's assume we can do some simple things\n\n    const sampleRate = 44100;\n    const channels = 2;\n    const trackLengthMs = trackLength * timePerHydrogen;\n    const trackLengthSamples = trackLengthMs * sampleRate / 1000.0;\n    const totalSamples = Math.floor(trackLengthSamples);\n    const samplesPerHydrogen = Math.floor( totalSamples / trackLength );\n    const combined = context.createBuffer(channels, totalSamples, sampleRate);\n\n    // populate blank buffer with sounds\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && selected[0].id in sounds\n          && !t.empty()\n        )\n        {\n          const audioBuffer = sounds[selected[0].id];\n          // fallback to copying the mono buffer across both channels\n          const audioChannel = audioBuffer.numberOfChannels === 2 ? audioBuffer.getChannelData(channel) : audioBuffer.getChannelData(0);\n          const trackPoints = t.toPoints();\n          for( const noteStart of trackPoints )\n          {\n            const sampleStart = noteStart * samplesPerHydrogen;\n            // console.log(\"inserting sample at \" + sampleStart * (trackLengthBeats/trackLengthSamples));\n            for( let sample = 0; sample < audioBuffer.length; ++sample )\n            {\n              // add sample to mega track\n              combinedChannel[sampleStart + sample] = combinedChannel[sampleStart + sample] + audioChannel[sample];\n            }\n          }\n        }\n      }\n    }\n\n    return Audio.normalizeAudioBuffer( combined );\n  }\n\n  static createAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=true;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n  static createOneShotAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=false;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n}\n\nexport default Audio;","import React from 'react';\nimport Audio from \"./Audio\"\n\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport * as Tone from \"tone\";\n\n// these are the hydrogen drumkits available by GPL/CC\n\nconst DRUMKITS = [\n  \"circAfrique v4\",\n  \"DeathMetal\",\n  \"The Black Pearl 1.0\",\n  \"GMRockKit\",\n  \"TR808EmulationKit\"\n];\n\n// TODO: This is very much not a react component, as it stands\n//   \n\nclass ToneBoard extends React.Component\n{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tempo: 100.0\n    };\n    this.samplerCount = 0;\n    this.sequences = {};\n    this.gain = new Tone.Gain();\n    this.gain.toDestination();\n    Tone.Transport.bpm.value = this.state.tempo;\n  }\n\n\n  chooseAppropriateUrlForInstrument(drumkitName, instrumentName)\n  {\n    const name = instrumentName.toLowerCase();\n    // this is currently very basic\n    if(name.includes(\"kick\"))\n    {\n        return \"The Black Pearl 1.0/PearlKick-Hard.wav\";\n    }\n    else if(name.includes(\"stick\"))\n    {\n        return \"DeathMetal/16297_ltibbits_sticks_low_pitch.wav\";\n    }\n    else if(name.includes(\"tom\"))\n    {\n        return \"TR808EmulationKit/808_Tom_Mid.wav\"\n    }\n    else if(name.includes(\"clap\"))\n    {\n        return \"TR808EmulationKit/808_Clap.wav\";\n    }\n    else if(name.includes(\"snare\"))\n    {\n      return \"GMRockKit/Snare-Soft.wav\";\n    }\n    else\n    {\n      // todo: snare, cymbals\n      return null;\n    }\n  }\n\n\n  populateSamples()\n  {\n    this.samplerCount = 0;\n    this.expectedSamplerCount = 0;\n    let mapping = {};\n    const tracks = this.props.selectedPattern.instrumentTracks;\n    for(const [id,] of Object.entries(tracks))\n    {\n      const selected = this.props.instrumentIndex.filter(inst => inst.id.toString() === id);\n      if( selected.length > 0)\n      {\n        const selectedInstrument = selected[0];\n        if(\n          \"drumkit\" in selectedInstrument && \n          \"filename\" in selectedInstrument &&\n          DRUMKITS.includes(selectedInstrument.drumkit) )\n        {\n          const filename = selectedInstrument.filename.replace(\".flac\", \".wav\");\n          mapping[selectedInstrument.id] = new Tone.Player( \n            process.env.PUBLIC_URL + \"/wav/\" + selectedInstrument.drumkit + \"/\" + filename, \n            () => { this.samplerCount++; } \n          );\n          mapping[selectedInstrument.id].connect(this.gain);\n          this.expectedSamplerCount++;\n        }\n        else if( \"drumkit\" in selectedInstrument )\n        {\n          const relativeUrl = this.chooseAppropriateUrlForInstrument( selectedInstrument.drumkit, selectedInstrument.name );\n          if(relativeUrl !== null)\n          {\n            mapping[selectedInstrument.id] = new Tone.Player( \n              process.env.PUBLIC_URL + \"/wav/\" + relativeUrl, \n              () => { this.samplerCount++; } \n            );\n            mapping[selectedInstrument.id].connect(this.gain);\n            this.expectedSamplerCount++;\n          }\n        }\n      }\n    }\n    this.samples = mapping;\n  }\n\n  createSequences()\n  {\n    const instrumentIndex = this.props.instrumentIndex;\n    let sequences = {};\n    for( let p of this.props.patterns )\n    {\n      const patternResolution = Audio.determineMinResolution(instrumentIndex, p.instrumentTracks);\n      const patternLength = Audio.determineTrackLength(instrumentIndex, p.instrumentTracks);\n      sequences[ p.name ] = new Tone.Sequence(\n        (time,index) => { this.tick(time, index); },\n        [...Array(patternLength / patternResolution).keys()],\n        Tone.Time(\"4n\") * ( patternResolution / 48.0 )\n      );\n      // start the sequence, but the ticks won't be triggered when muted\n      // note: setting mute on the sequence directly seems to have no effect\n      sequences[ p.name ]._part.mute = true;\n      sequences[ p.name ].start(0);\n    }\n    return sequences;\n  }\n\n  schedulePlaybackForNewTracks()\n  {\n    const instrumentIndex = this.props.instrumentIndex;\n    const tracks = this.props.selectedPattern.instrumentTracks;\n    let board = this;\n    // todo: precompute these numbers for smoother transitions?\n    const resolution = Audio.determineMinResolution(instrumentIndex, tracks );\n    const length = Audio.determineTrackLength(instrumentIndex, tracks );\n\n    // we have a little fudge in here... if we're transitioning from a 4 beat loop\n    // to an 8 beat pattern ... we probably really wanted to hit the start of that pattern,\n    // not to transition at 3.75 beats and play the latter half\n    const now = Tone.Transport.toSeconds(Tone.Transport.position);\n    const timeFromBarEnd = Tone.Transport.loopEnd  - now;\n    const queueTransition = Tone.Transport.state === \"started\" \n    && ( timeFromBarEnd > 0 && timeFromBarEnd < Tone.Time(\"8n\").toSeconds())\n    && ( length > this.state.length);\n    const enableNewTrack = () => {\n      // note: setting mute on the sequence directly seems to have no effect\n      this.sequences[this.props.selectedPattern.name]._part.mute = false;\n      Tone.Transport.loop = true;\n      Tone.Transport.setLoopPoints(0, Tone.Time(\"4n\") * (length / 48.0));\n    };\n    // react won't set state if these variables are equal\n    // this mostly illustrates this component probably shouldn't have two state philosophies\n    // note: we only trigger \"queueTransition\" when length > this.state.length so don't worry about that\n    if( resolution === this.state.resolution && length === this.state.length )\n    {\n      enableNewTrack();\n      return;\n    }\n    if( queueTransition )\n    {\n      // log this, there seems to be some bugginess with some of the tone stuff\n      // (my fault for not fully changing the code yet)\n      // and this is more of an experimental feature\n      console.log(\"queuing transition to pattern \" + this.props.selectedPattern.name);\n    }\n    board.setState( \n      { \n        resolution : resolution,\n        length : length\n      },\n      () => { \n        if( queueTransition ) { \n          Tone.Transport.scheduleOnce(\n            enableNewTrack,\n            Tone.Time(\"0\")\n          );\n        }\n        else\n        {\n          enableNewTrack();\n        }\n      }\n    );\n  }\n\n  samplesReady()\n  {\n    return this.sampleCount === this.expectedSampleCount;\n  }\n\n  tick(time,indexFromStart)\n  {\n    if( time === this.lastTickTime )\n    {\n      // this sometimes seems to happen\n      // and the samples complain\n      // \"start time must be strictly greater than previous start time\"\n      // this is a horrible temporary fix\n      return;\n    }\n    this.lastTickTime = time;\n    const trackLengthRes = ( this.state.length / this.state.resolution );\n    const index = indexFromStart % trackLengthRes;\n    if(!this.samplesReady())\n    {\n      return;\n    }\n    const tracks = this.props.selectedPattern.instrumentTracks;\n    for(const [id,t] of Object.entries(tracks))\n    {\n        if( t.rep[index] )\n        {\n          this.samples[id].start(time);\n        }\n    }\n    if( this.props.onPatternTimeChange )\n    {\n      Tone.Draw.schedule(\n        ()=>{\n          const notePosition = ( indexFromStart * this.state.resolution ) % this.state.length;\n          console.log(notePosition) \n          this.props.onPatternTimeChange( notePosition );\n        },\n        time\n      );\n    }\n  }\n\n  play()\n  {\n    // Tone.start is needed to be triggered from a user interaction\n    // (web-audio-context policy of not playing until a user interaction)\n    Tone.start().then(()=>{Tone.Transport.start();});\n  }\n\n  stop()\n  {\n    // it's slightly unclear what the synchronisation semantics of this Tone.Transport.stop() call are.\n    // If a tick is currently in flight on Tone.Transport we have to ensure that\n    // the reset of patternTime occurs *afterwards*. \n    // The below calls seem to work for this, but I couldn't tell you why.\n    if( Tone.Transport.state === \"started\")\n    {\n      Tone.Transport.stop();\n      if( this.props.onPatternTimeChange )\n      {\n        Tone.Draw.schedule(\n          ()=>{\n            this.props.onPatternTimeChange( null );\n          },\n          Tone.Transport.now()\n        );\n      }\n    }\n  }\n\n  componentDidMount()\n  {\n    this.populateSamples();\n    this.sequences = this.createSequences();\n    this.schedulePlaybackForNewTracks();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot)\n  {\n    // theoretically we should be evaluating a rougher equality on the tracks here\n    // but ... as is !== will never be wrong here, and our linter warns if we don't use it \n    const patternChange = prevProps.selectedPattern.name !== this.props.selectedPattern.name;\n    if( patternChange )\n    {\n      this.sequences[prevProps.selectedPattern.name]._part.mute = true;\n      this.schedulePlaybackForNewTracks();\n    }\n  }\n\n  tempoControl()\n  {\n    const onTempoChange = (event, tempo) => {\n      this.setState( { tempo : tempo } );\n      Tone.Transport.bpm.value = tempo;\n    };\n    return (\n      <Slider\n        defaultValue={100}\n        min={60}\n        step={1}\n        max={180}\n        onChange={onTempoChange}\n        valueLabelDisplay=\"auto\"\n      />\n    );\n\n  }\n\n  render() {\n    const tempoControlColumns = 4;\n\n    return (\n      <React.Fragment>\n        <div>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"play\"\n            onClick={(e)=>{this.play();}}\n          >\n            <PlayArrowIcon />\n          </IconButton>\n          <IconButton\n            color=\"secondary\"\n            aria-label=\"stop\"\n            onClick={(e)=>{this.stop();}}\n          >\n            <StopIcon />\n          </IconButton>\n        </div>\n\n        <Grid container>\n        <Grid item xs={(12 - tempoControlColumns) / 2} />\n        <Grid item xs={tempoControlColumns}>\n        {this.tempoControl()}\n        </Grid>\n        <Grid item xs={(12 - tempoControlColumns ) / 2} />\n        </Grid>\n\n      </React.Fragment>\n   );\n  }\n\n};\n\nexport default ToneBoard;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nclass notation\n{\n\n  static DEFAULT_FORMAT_CONFIG = {\n    \"restMark\" : \"-\",\n    \"beatMark\" : \"|\",\n    \"lineMark\" : \"|\",\n    \"numberRestMark\" : \"-\",\n    \"beatResolution\" : 48,\n    \"showBeatMark\" : true,\n    \"showBeatNumbers\" : true,\n    // lineResolution is typically determined on a per-pattern basis\n    // however it used to be in here, and some tests still rely on this\n    \"lineResolution\" : 48 * 8\n  };\n\n  static FORMAT_CONFIG_STRINGS = [\n    [\"restMark\",[\"-\", \".\", \" \"]],\n    [\"numberRestMark\",[\"-\", \".\", \" \"]]\n  ];\n\n  static FORMAT_CONFIG_BOOLS = [\n    \"showBeatMark\",\n    \"showBeatNumbers\"\n  ];\n\n  static validateConfig(config, patternResolution) {\n    if( patternResolution != null && ( config.beatResolution % patternResolution ) !== 0 )\n    {\n      throw new Error(\"patternResolution doesn't divide beatResolution\");\n    }\n    if( config.lineResolution <= 0 )\n    {\n      throw new Error(\"config.lineResolution must be greater than zero\");\n    }\n  }\n\n  static resolveConfig(formatConfig)\n  {\n    for( const propName of Object.keys(formatConfig))\n    {\n      if(!notation.DEFAULT_FORMAT_CONFIG.hasOwnProperty(propName))\n      {\n        throw new Error(\"passed unrecognised property \" + propName);\n      }\n    }\n\n    return Object.assign( Object.assign({}, notation.DEFAULT_FORMAT_CONFIG), formatConfig );\n  }\n\n  static chunkString(str, chunkSize) {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    return str.match(new RegExp('.{1,' + chunkSize + '}', 'g'));\n  }\n\n  static chunkArray(a, chunkSize)\n  {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    let chunks = [];\n    for( let i = 0; i < a.length; i += chunkSize )\n    {\n      chunks.push( a.slice(i, Math.min( i + chunkSize, a.length) ) );\n    }\n    return chunks;\n  }\n\n  static createNumberMarker(numberRestMark, beatResolution, patternResolution, lineLength)\n  {\n    if( lineLength <= 0 )\n    {\n      throw new Error(\"lineLength <= 0\");\n    }\n\n    if( ( beatResolution % patternResolution ) !== 0)\n    {\n      throw new Error(\"patternResolution \" + patternResolution.toString() + \" does not divide beatResolution \" + beatResolution.toString());\n    }\n\n    let beatCount = Math.ceil(lineLength / beatResolution);\n    let numberMarkerArray = Array.from( Array(lineLength / patternResolution), e => numberRestMark );\n\n    for( let beat = 0; beat < beatCount; beat++ )\n    {\n      numberMarkerArray[ beat * ( beatResolution / patternResolution ) ] = ( (beat+1) % 10 ).toString();\n    }\n    return numberMarkerArray;\n  }\n\n  static formatLineWithMarkers(config, line, patternResolution, asHTML)\n  {\n    notation.validateConfig(config);\n\n    const beatChunkSize = config.beatResolution / patternResolution;\n\n    const padZero = (n, width) => {\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    };\n    const formatSymbolAsSpans = (symbol, numericPosition) => {\n      return \"<span class='note-\" + padZero(numericPosition, 4) + \"'>\" +  symbol + \"</span>\";\n    };\n\n    const formatSymbol = asHTML ? formatSymbolAsSpans : (symbol, numericPosition) => symbol;\n\n    let formattedLine = \"\";\n    for( let index = 0; index < line.length; ++ index )\n    {\n      const numericPosition = patternResolution * index;\n      formattedLine += formatSymbol(line.charAt(index), numericPosition);\n    }\n\n\n    const lineWithBeats = config.showBeatMark ? notation.chunkString(formattedLine, beatChunkSize * formatSymbol(\"X\", 0).length).join(config.beatMark) : formattedLine;\n    // note: we choose to always show the lineMarker even if it doesn't match the line resolution\n    return config.lineMark + lineWithBeats + config.lineMark;\n  }\n\n  static defaultLineResolution(\n    trackDict,\n    beatResolution\n  )\n  {\n    const instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return 48 * 8;\n    }\n    const trackLength = instrumentTracks[0].length();\n    const beatCount = trackLength / beatResolution;\n    if( beatCount <= 12 )\n    {\n      return trackLength;\n    }\n    else if( beatCount > 32 )\n    {\n      return 48 * 16; // let's just be laazeee\n    }\n    else\n    {\n      // let's just apply a simple mapping, rather than think through logics\n      const mapping = [\n        trackLength, // 13 \n        trackLength / 2, // 14\n        trackLength / 3, // 15\n        trackLength / 2, // 16\n        trackLength, // 17\n        trackLength / 3, // 18\n        trackLength, // 19\n        trackLength / 4, // 20\n        trackLength / 3, // 21\n        trackLength / 2, // 22\n        trackLength, // 23\n        trackLength / 3, // 24\n        trackLength / 5, // 25\n        trackLength, // 26\n        trackLength / 3, // 27\n        trackLength / 4, // 28\n        trackLength, // 29\n        trackLength / 6, // 30\n        trackLength, // 31\n        trackLength / 4, // 32\n      ];\n      return mapping[ beatCount - 13 ];\n    }\n  }\n\n  static guessPerPatternSettings(\n    trackDict\n  )\n  {\n    return {\n      \"lineResolution\" : notation.defaultLineResolution(trackDict, 48), // beatResolution (default)\n      \"beatResolution\" : 48 // should cover all the cases hopefully\n    };\n  }\n\n  static formatPatternString(\n    instrument,\n    trackDict,\n    restMark\n  )\n  {\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    const patternSize = instrumentTracks[0].length();\n    const patternResolution = instrumentTracks[0].resolution;\n    const notationLength = patternSize / patternResolution;\n\n    let patternArray = Array(notationLength).fill(restMark);\n    for( let charIndex = 0; charIndex < patternArray.length; ++charIndex)\n    {\n      // todo: handle collisions\n      for( const [trackID, trackSymbol] of Object.entries(instrument) )\n      {\n        const trackInstance = trackDict[trackID];\n        if( trackInstance != null && trackInstance.rep[charIndex] === 1 )\n        {\n          patternArray[charIndex] = trackSymbol;\n        }\n      }\n    }\n    return patternArray;\n  }\n\n  static fromInstrumentAndTrack(\n    instrument,\n    trackDict,\n    asHTML,\n    formatConfig = {}\n  )\n  {\n    const config = notation.resolveConfig(formatConfig);\n\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    // turn the tracks, into one char string\n    const patternArray = notation.formatPatternString( instrument, trackDict, config.restMark );\n    const patternString = patternArray.join(\"\");\n    const patternResolution = instrumentTracks[0].resolution;\n    const patternSize = instrumentTracks[0].length();\n\n    // handle lines and beatMarkers\n    let lineArray = notation.chunkString( patternString, config.lineResolution / patternResolution );\n\n    let formattedLineArray = [];\n    // add numbers on the first line\n    if( config.showBeatNumbers )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( \n        config, \n        notation.createNumberMarker(config.numberRestMark, config.beatResolution, patternResolution, Math.min(config.lineResolution, patternSize)).join(\"\"),\n        patternResolution,\n        asHTML\n      ) );\n    }\n    for( let i = 0; i < lineArray.length; ++i )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( config, lineArray[i], patternResolution, asHTML ) );\n    }\n\n    return formattedLineArray.join(\"\\n\");\n  }\n};\n\nexport default notation;","const DEFAULT_INSTRUMENT_SYMBOLS = {\n  \"Djembe Slap\" : \"S\",\n  \"Djembe Tone\" : \"t\",\n  \"Djembe Bass\" : \"O\",\n  \"Snare Ghost\" : \"x\",\n  \"Snare Accent\" : \"X\",\n  \"Shaker Ghost\" : \"x\",\n  \"Shaker Accent\" : \"X\",\n  \"Click\" : \"X\",\n  \"Bass\" : \"O\",\n  \"Tom\" : \"O\",\n  \"Default\" : \"X\"\n};\n\nfunction normalizeInstrumentsForFiguring(instruments)\n{\n  let n = [];\n  for(const inst of instruments)\n  {\n    let nInst = Object.assign({}, inst);\n    // for some reason these instruments are one-size arrays, and one id ... the track id from hydrogen\n    // this should be fixed, this doesn't make sense\n    nInst.name = nInst.name.toLowerCase();\n    n.push( nInst );\n  }\n  return n;\n}\n\nfunction figureDjembes(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const djembeTracks = instruments.filter( (inst) => inst.name.includes(\"djembe\") );\n  if(djembeTracks.length === 0)\n  {\n    return [];\n  }\n  else if(djembeTracks.length <= 3)\n  {\n    // let's lazily assume we have a slap, tone, bass\n    const slapArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"slap\") );\n    const toneArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"tone\") );\n    const bassArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"bass\") );\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      let parityCheck = slapArray[i] + toneArray[i] + bassArray[i];\n      // failed to figure out how djembes work return empty array\n      if(parityCheck !== 1)\n      {\n        return [];\n      }\n    }\n    let djembeMapping = {};\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      if( slapArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Slap\"];\n      }\n      else if( toneArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Tone\"];\n      }\n      else if( bassArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Bass\"];\n      }\n    }\n    return [ [ \"Djembe\", djembeMapping ] ];\n  }\n  else\n  {\n    // TODO: support more than one djembe\n    return []\n  }\n}\n\n// used by snare/shaker\nfunction manageAccentOrGhost(instrumentTracks, instrumentName, accentSymbol, ghostSymbol)\n{\n  let outputInstruments = [];\n  if(instrumentTracks.length === 2)\n  {\n    const t0 = instrumentTracks[0];\n    const t1 = instrumentTracks[1];\n    // attempt to determine ghost/accent\n    const zeroLouder = t0.volume > t1.volume || (t0.volume === t1.volume && t0.gain > t1.gain);\n    let mapping = {};\n    mapping[ t0.id.toString() ] = zeroLouder ? accentSymbol : ghostSymbol;\n    mapping[ t1.id.toString() ] = zeroLouder ? ghostSymbol : accentSymbol;\n    outputInstruments.push([instrumentName, mapping] );  \n  }\n  else // if 1 it must be an accent, if >= 3 ... I don't want to try and assign ghosts/accents\n  {\n    // I don't want to support ghost/accent here right now\n    for( const track of instrumentTracks )\n    {\n      let mapping = {};\n      mapping[ track.id.toString() ] = accentSymbol;\n      outputInstruments.push([instrumentName, mapping] );  \n    }\n  }\n  return outputInstruments;\n\n}\n\nfunction figureShakers(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  // todo: support common alternative shakers? Tambourine?\n  const shakerTracks = instruments.filter( (inst) => ( inst.name.includes(\"shaker\") ) );\n  return manageAccentOrGhost( \n    shakerTracks, \n    \"Shaker\", \n    symbolConfig[\"Shaker Accent\"],\n    symbolConfig[\"Shaker Ghost\"]\n  );\n}\n\nfunction figureSnares(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const snareTracks = instruments.filter( (inst) => ( inst.name.includes(\"snare\") ) );\n  // todo: we currently assume 2 snares is accent/ghost ... but I think it's relatively\n  // common to be 2 snare parts too, I think the algorithm here is check patterns to\n  // see if they overlap ... if the \"ghosts\" overlap the \"hits\" sometimes, assume 2 parts\n  return manageAccentOrGhost( \n    snareTracks, \n    \"Snare\", \n    symbolConfig[\"Snare Accent\"],\n    symbolConfig[\"Snare Ghost\"]\n  );\n}\n\n\nfunction activeInstruments(patterns)\n{\n  let nonTrivialInstruments = new Set();\n  for( const p of patterns )\n  {\n    for(const [instrumentID, part] of Object.entries(p.instrumentTracks))\n    {\n      if( !part.empty() )\n      {\n        nonTrivialInstruments.add(parseInt(instrumentID));\n      }\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction activeInstrumentation(instrumentIndex, patterns)\n{\n  const active = activeInstruments(patterns);\n  let nonTrivialInstruments = [];\n  for( const inst of instrumentIndex)\n  {\n    if( active.has(inst.id) )\n    {\n      nonTrivialInstruments.push( inst );\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction figureClickyInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const worthwhileInstruments = activeInstruments(patterns);\n  const relevantTracks = instruments.filter( (inst) => ( worthwhileInstruments.has(inst.id) &&\n    !inst.name.includes(\"djembe\") &&\n    ( inst.name.includes(\"click\") || \n    inst.name.includes(\"stick\") || \n    inst.name.includes(\"tom\") || \n    inst.name.includes(\"bass\") ||\n    inst.name.includes(\"kick\") )\n  ) );\n\n  const trackIsClick = Array.from(\n    relevantTracks,\n    (t) => t.name.includes(\"click\") || t.name.includes(\"stick\")\n  );\n  // we prioritise the early tracks\n  // and hope for the best\n\n  let tomIndex = 1;\n  let bassIndex = 1;\n  let collated = [];\n  for( let candidate = 0; candidate < Math.floor(relevantTracks.length/2); ++candidate )\n  {\n    if( trackIsClick[candidate*2] !== trackIsClick[candidate*2+1] )\n    {\n      const clickTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2] : relevantTracks[candidate*2+1];\n      const hitTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2+1] : relevantTracks[candidate*2];\n      const instrumentIsTom = hitTrack.name.includes(\"tom\");\n      let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n      let instrumentName = \"\"\n      if( instrumentIsTom )\n      {\n        instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n        tomIndex = tomIndex + 1;\n      }\n      else\n      {\n        instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n        bassIndex = bassIndex + 1;\n      }\n      let mapping = {};\n      mapping[hitTrack.id.toString()] = symbolConfig[rawInstrumentName];\n      mapping[clickTrack.id.toString()] = symbolConfig[\"Click\"];\n      collated.push([instrumentName, mapping] );  \n    }\n  }\n\n  // If there's a remainder instrument and there's no click\n  if( ((relevantTracks.length % 2 ) !== 0) && !trackIsClick[ relevantTracks.length - 1 ] )\n  {\n    const lastTrack = relevantTracks[relevantTracks.length - 1];\n    const instrumentIsTom = lastTrack.name.includes(\"tom\");\n    let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n    let instrumentName = \"\"\n    if( instrumentIsTom )\n    {\n      instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n      tomIndex = tomIndex + 1;\n    }\n    else\n    {\n      instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n      bassIndex = bassIndex + 1;\n    }\n    let mapping = {};\n    mapping[lastTrack.id.toString()] = symbolConfig[rawInstrumentName];\n    collated.push([instrumentName, mapping] );  \n  }\n  return collated;\n}\n\nfunction defaultSymbolForSingleInstrument(symbolConfig, name)\n{\n  // we expect these keys\n  /*\n    \"Djembe Slap\" : \"S\",\n    \"Djembe Tone\" : \"t\",\n    \"Djembe Bass\" : \"O\",\n    \"Snare Ghost\" : \"-\",\n    \"Snare Accent\" : \"X\",\n    \"Shaker Ghost\" : \"x\",\n    \"Shaker Accent\" : \"X\",\n    \"Click\" : \"X\",\n    \"Bass\" : \"O\",\n    \"Tom\" : \"O\",\n    \"Default\" : \"X\"\n  */\n  const lowerName = name.toLowerCase();\n  if( lowerName.includes(\"click\") || lowerName.includes(\"stick\") )\n  {\n    return symbolConfig[\"Click\"];\n  }  \n  else if( lowerName.includes(\"bass\") || lowerName.includes(\"kick\") )\n  {\n    return symbolConfig[\"Bass\"]\n  }\n  else if( lowerName.includes(\"snare\") )\n  {\n    return symbolConfig[\"Snare Accent\"];\n  }\n  else if( lowerName.includes(\"shaker\") )\n  {\n    return symbolConfig[\"Shaker\"];\n  }\n  else if( lowerName.includes(\"tom\") )\n  {\n    return symbolConfig[\"Tom\"];\n  }\n  else if( lowerName.includes(\"djembe\") )\n  {\n    if( lowerName.includes(\"slap\") )\n    {\n      return symbolConfig[\"Djembe Slap\"];\n    }\n    else if( lowerName.includes(\"tone\") )\n    {\n      return symbolConfig[\"Djembe Tone\"];\n    }\n    else\n    {\n      return symbolConfig[\"Djembe Bass\"];\n    }\n  }\n  return symbolConfig[\"Default\"];\n}\n\nfunction figureInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  let output = [];\n  output = output.concat( figureClickyInstruments( instrumentsRaw, symbolConfig, patterns ) );\n  output = output.concat( figureDjembes( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureSnares( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureShakers( instrumentsRaw, symbolConfig ) );\n\n  // we ignore track used by multiple instruments\n\n  // but attempt to cover \"instrument not recognised anywhere\"\n\n  const worthwhileInstruments = activeInstruments(patterns);\n\n  for(const inst of instrumentsRaw)\n  {\n    if( !worthwhileInstruments.has(inst.id) )\n    {\n      continue;\n    }\n    let instrumentUsed = false;\n    for( const op of output)\n    {\n      if( inst.id.toString() in op[1] ) \n      {\n        instrumentUsed = true;\n      }\n    }\n    if(instrumentUsed === false)\n    {\n      let mapping = {};\n      mapping[ inst.id.toString() ] = defaultSymbolForSingleInstrument( symbolConfig, inst.name );\n      output.push( [inst.name, mapping] );\n    }\n  }\n  \n  return output; \n}\n\nexport { activeInstrumentation, DEFAULT_INSTRUMENT_SYMBOLS, figureClickyInstruments, figureDjembes, figureShakers, figureSnares, figureInstruments };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nconst ThinFormControlLabel = withStyles({\n  root: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n})(FormControlLabel);\n\nconst InlinableIconButton = withStyles({\n  root: {\n    padding: 2\n  }\n})(IconButton);\n\nconst CenterTableCell = withStyles({\n  root: {\n    textAlign: \"center\"\n  }\n})(TableCell);\n\nfunction InstrumentConfig(props) {\n  const classes = useStyles();\n\n  const handleChange = (x,y, event) => {\n    const instrumentID = props.instrumentIndex[x].id;\n    const oldInstrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const dstInstrumentIndex = y;\n    if( oldInstrumentIndex === dstInstrumentIndex )\n    {\n      return;\n    }\n    const oldInstrument = props.instruments[oldInstrumentIndex];\n    let replacedSrcInstrument = [\n      \"\",\n      {}\n    ];\n    if( oldInstrument != null )\n    {\n      replacedSrcInstrument[0] = oldInstrument[0];\n      for( const key of Object.keys(oldInstrument[1]) )\n      {\n        if( key !== instrumentID.toString() )\n        {\n          replacedSrcInstrument[1][key] = oldInstrument[1][key];\n        }\n      }\n    }\n    let dstInstrument = [\n      props.instruments[dstInstrumentIndex][0],\n      Object.assign({}, props.instruments[dstInstrumentIndex][1] )\n    ];\n    if(oldInstrument != null )\n    {\n      dstInstrument[1][instrumentID.toString()] = oldInstrument[1][instrumentID];\n    }\n    else\n    {\n      dstInstrument[1][instrumentID.toString()] = \"X\";\n    }\n\n    let replacedInstruments = [];\n\n    for(let instrumentIndex = 0; instrumentIndex < props.instruments.length; ++instrumentIndex)\n    {\n      if( instrumentIndex === oldInstrumentIndex )\n      {\n        replacedInstruments.push( replacedSrcInstrument );\n      }\n      else if( instrumentIndex === dstInstrumentIndex )\n      {\n        replacedInstruments.push( dstInstrument )\n      }\n      else\n      {\n        replacedInstruments.push( props.instruments[instrumentIndex] );\n      }\n    }\n    props.onChange(replacedInstruments);\n  };\n\n  const removeInstrument = (y) => \n  {\n    let replacedInstruments = props.instruments.slice(0,y).concat(props.instruments.slice(y+1));\n    props.onChange(replacedInstruments);\n  };\n\n  const [renamingInstrument, setRenamingInstrument] = React.useState(-1);\n  let [nameState, setNameState] = React.useState(\"\");\n\n  const createCell = (x,y) =>\n  {\n      return ( \n        <TableCell\n          align=\"center\"\n          key={\"instrumentPanel-cell-\" + y.toString() + \"-\" + x.toString()}\n        >\n        <ThinFormControlLabel\n          control={<Checkbox checked={props.instrumentMask[x] === y} onChange={(e) => handleChange(x,y,e)} name={x + \",\" + y.toString()} />}\n        />\n        </TableCell>\n      );\n  }\n\n  const createMatchingRow = (y) =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-\" + y.toString()}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-\" + y.toString() + \"-name\"}> \n          <Typography>{props.instruments[y][0]}</Typography>\n          <InlinableIconButton onClick={(e)=>setRenamingInstrument(y)}><EditIcon fontSize=\"small\"/></InlinableIconButton>\n          <InlinableIconButton onClick={(e)=>{removeInstrument(y);}}><ClearIcon fontSize=\"small\"/></InlinableIconButton>\n        </TableCell>\n        {[...Array(props.instrumentIndex.length).keys()].map(x=>createCell(x,y))}\n      </TableRow>\n    );\n  };\n\n  const createEditRow = () =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-edit\"}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-edit-cell\"}>\n          <IconButton onClick={(e)=>setRenamingInstrument(props.instruments.length)} aria-label=\"add\">\n            <AddBoxIcon/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  const renameInstrument = (e)  => \n  {\n    const instrumentName = nameState.trim();\n    if( instrumentName.length > 0 )\n    {\n      if( renamingInstrument === props.instruments.length )\n      {\n        const extraInstrument = [ instrumentName, {} ];\n        let replacedInstruments = Array.from( props.instruments );\n        replacedInstruments.push(extraInstrument);\n        props.onChange(replacedInstruments);\n      }\n      else\n      {\n        let replacedInstruments = Array.from( props.instruments );\n        replacedInstruments[renamingInstrument][0] = instrumentName;\n        props.onChange(replacedInstruments);\n      }\n    }\n    // we just ignore empty string\n    setRenamingInstrument(-1);\n    setNameState(\"\");\n  };\n\n  // todo: The text field is very slow\n  // that could be because the dialog and the table content are all one component\n  // I should try and fix that first\n  // otherwise, it's just that shoving react in the middle is too slow\n\n  const [editSymbol, setEditSymbol] = React.useState(-1);\n  let [editSymbolState, setEditSymbolState] = React.useState(\"\");\n\n  const startEditingSymbol = (x) =>\n  {\n    const instrumentID = props.instrumentIndex[x].id;\n    const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const currentSymbol = props.instruments[instrumentIndex][1][instrumentID];\n    setEditSymbolState(currentSymbol);\n    setEditSymbol(x);\n  };\n\n  const changeSymbol = (e) =>\n  {\n    const updatedSymbol = editSymbolState;\n    if(updatedSymbol.length===1)\n    {\n      const instrumentID = props.instrumentIndex[editSymbol].id;\n      const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n      let replacedInstruments = Array.from(props.instruments);\n      replacedInstruments[instrumentIndex][1][instrumentID] = editSymbolState;\n      props.onChange(replacedInstruments);\n    }\n    else\n    {\n      // todo: prettier error communication?\n      alert(\n        \"You selected an invalid symbol \\\"\" + updatedSymbol + \"\\\".\\n\" + \n        \"Symbols must be precisely 1 character.\"\n      );\n    }\n    setEditSymbol(-1);\n  };\n\n  return (\n    <React.Fragment>\n      <Dialog open={renamingInstrument >= 0} onClose={(e)=>setRenamingInstrument(-1)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter instrument name\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={nameState}\n            onChange={(e)=>setNameState(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e)=>setRenamingInstrument(-1)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={renameInstrument} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={editSymbol >= 0} onClose={(e)=>setEditSymbol(-1)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter notation symbol\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={editSymbolState}\n            onChange={(e)=>setEditSymbolState(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e)=>setEditSymbol(-1)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={changeSymbol} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow key={\"instrumentPanel-row-header\"}>\n              <TableCell key={\"instrumentPanel-row-instrument\"}> Instrument </TableCell>\n              {[...Array(props.instrumentIndex.length).keys()].map(x=><CenterTableCell key={\"instrumentPanel-row-header-cell-\" + x.toString()}><Typography>{props.instrumentIndex[x].name}</Typography><InlinableIconButton onClick={(e)=>startEditingSymbol(x)} ><EditIcon fontSize=\"small\"/></InlinableIconButton></CenterTableCell>)}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n\n            {[...Array(props.instruments.length).keys()].map(y=>createMatchingRow(y))}\n            {createEditRow()}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n\nfunction createInstrumentMask(instrumentIndex, instruments)\n{\n  let instrumentMask = Array(instrumentIndex.length);\n  for( let baseInstrumentIndex = 0; baseInstrumentIndex < instrumentIndex.length; ++baseInstrumentIndex )\n  {\n    const baseInstrumentId = instrumentIndex[baseInstrumentIndex].id;\n    for( let targetInstrumentIndex = 0; targetInstrumentIndex < instruments.length; ++targetInstrumentIndex)\n    {\n      const target = instruments[targetInstrumentIndex];\n      if(baseInstrumentId.toString() in target[1])\n      {\n        instrumentMask[baseInstrumentIndex] = targetInstrumentIndex;\n      }\n    }\n  }\n  return instrumentMask;\n}\n\nexport { createInstrumentMask, InstrumentConfig };","import { calculateResolution } from \"./utilities\"\n\n// stolen from https://studymaths.co.uk/topics/findingHCFWithJavaScript.php\nfunction findHCF(x, y) {\n\n   // If the input numbers are less than 1 return an error message.\n   if (x < 1 || y < 1) {\n    throw new Error(\"x<1 || y<1\");\n      // return \"Please enter values greater than zero.\";\n   }\n\n   // Now apply Euclid's algorithm to the two numbers.\n   while (Math.max(x, y) % Math.min(x, y) !== 0) {\n      if (x > y) {\n         x %= y;\n      }\n      else {\n         y %= x;\n      }\n   }\n   \n   // When the while loop finishes the minimum of x and y is the HCF.\n   return Math.min(x, y);\n}\n\nclass track\n{\n  \n  constructor(patternArray, resolution)\n  {\n    if(patternArray.length === 0)\n    {\n      throw new Error(\"patternArray must not be zero length\");\n    }\n    this.rep = patternArray;\n    this.resolution = resolution;\n  }\n\n  length()\n  {\n    return this.rep.length * this.resolution;\n  }\n\n  empty()\n  {\n    return this.rep.reduce( (a,b) => ( a + b ) ) === 0;\n  }\n\n  _sumOverlapsOfArrays(a,b)\n  {\n    let count = 0;\n    for( let i = 0; i < a.length; ++i)\n    {\n      if(a[i] && b[i])\n      {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  countOverlaps(other)\n  {\n    if( this.resolution === other.resolution )\n    {\n      return this._sumOverlapsOfArrays( this.rep, other.rep );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return this._sumOverlapsOfArrays( a.rep, b.rep );\n    }\n  }\n\n  aggregate(other)\n  {\n\n    if( this.resolution === other.resolution )\n    {\n      // when we aggregate, we specifically\n      const length = Math.max( this.rep.length, other.rep.length );\n      const pat = new Array(length).fill(0);\n      for(let index = 0; index < pat.length; ++index)\n      {\n        pat[index] = ( ( index < this.rep.length ) ? this.rep[index] : 0 )\n                  || ( ( index < other.rep.length ) ? other.rep[index] : 0 );\n      }\n      return new track( pat, this.resolution );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return a.aggregate(b);\n    }\n  }\n\n  static representPoints(points, resolution, size)\n  {\n    if( size <= 0 )\n    {\n      throw new Error(\"size must be greater than zero\");\n    }\n    if( size < resolution || (size % resolution) !== 0)\n    {\n      throw new Error(\"resolution must be less than size and divide it evenly\");\n    }\n    let s = new Array(size / resolution).fill(0);\n    for( const p of points )\n    {\n      if( (p % resolution) !== 0)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" at resolution \" + resolution.toString());\n      }\n      if (p >= size)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" for invalid specified size \" + size.toString());\n      }\n      const arrayIndex = p / resolution;\n      s[arrayIndex] = 1;\n    }\n    return s;\n  }\n\n  format(formatResolution)\n  {\n    // formatResolution must cleanly divide for every hit & the length of the pattern\n\n    const totalLength = (this.resolution * this.rep.length);\n    const points = this.toPoints();\n    const rep = track.representPoints(points, formatResolution, totalLength);\n    if(!rep)\n    {\n      return null;\n    }\n    return new track(\n      rep,\n      formatResolution\n    );\n  }\n\n  toPoints()\n  {\n    let points = [];\n    for( const arrayIndex of Array(this.rep.length).keys() )\n    {\n      const indicator = this.rep[arrayIndex];\n      if(indicator)\n      {\n        points.push( this.resolution * arrayIndex )\n      }\n    }\n    return points;\n  }\n\n  static fromPositions(positions, size, resolution = null)\n  {\n    const resolutionToUse = resolution ?? calculateResolution( positions, size );\n    return new track( \n      track.representPoints(positions, resolutionToUse, size), \n      resolutionToUse\n    );\n  }\n}\n\nexport default track;","// utilities.js\n\nfunction calculateResolution(positions, size)\n{\n  // hydrogen treats 48 as a beat\n  const basesToTry = [\n    48, // beat\n    24, // 1/2 beat\n    16, // 1/3 beat\n    12, // 1/4\n    8, // 1/6 \n    6, // 1/8\n    4, // 1/12\n    3, // 1/16\n    2, // 1/24\n    1 // 1/48\n  ];\n\n  // note that, fundamentally the size of the pattern is a \"keypoint\"\n  // that needs to be properly recorded by the resolution\n  const implicitPositions = positions.concat( [size] );\n\n  for( const b of basesToTry )\n  {\n    let allNotesPass = true;\n    for( const p of implicitPositions )\n    {\n      if( (p % b) !== 0 )\n      {\n        allNotesPass = false;\n        break;\n      }\n    }\n    if(allNotesPass)\n    {\n      return b;\n    }\n  }\n  throw new Error(\"Failed to predict base\");\n}\n\nexport { calculateResolution };"],"sourceRoot":""}
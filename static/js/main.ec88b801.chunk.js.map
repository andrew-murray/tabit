{"version":3,"sources":["track.js","utilities.js","Mobile.js","Audio.js","ToneBoard.js","App.js","formatSettings.js","FileImport.js","h2.js","PlaybackControls.js","History.js","Part.js","PartWithTitle.js","Pattern.js","Routes.js","serviceWorker.js","index.js","notation.js","instrumentation.js","instrumentConfig.js"],"names":["findHCF","x","y","Error","Math","max","min","track","patternArray","resolution","length","this","rep","reduce","a","b","count","i","other","_sumOverlapsOfArrays","hcf","formatResolution","pat","Array","fill","index","aggregate","totalLength","points","toPoints","representPoints","keys","arrayIndex","push","size","s","p","toString","positions","resolutionToUse","calculateResolution","implicitPositions","concat","allNotesPass","isMobile","userAgent","navigator","vendor","window","opera","some","toMatchItem","match","Audio","AudioContext","webkitAudioContext","Object","instrumentIndex","tracks","minResolution","id","t","filter","inst","empty","entries","trackLength","combined","peakValue","channel","numberOfChannels","combinedChannel","getChannelData","sample","abs","peakAmplitude","context","sounds","tempo","determineTrackLength","trackLengthSamples","totalSamples","floor","samplesPerHydrogen","createBuffer","selected","audioBuffer","audioChannel","trackPoints","sampleStart","normalizeAudioBuffer","buffer","source","createBufferSource","loop","playbackRate","value","connect","destination","DRUMKITS","convertNormalToAudible","pow","createSequenceCallback","pattern","sampleSource","samplesReady","time","indexFromStart","sampleData","samples","undefined","player","start","onPatternTimeChange","Tone","schedule","notePosition","ToneController","patterns","onTimeChange","sequences","currentPattern","gain","toDestination","bpm","sampleCount","expectedSampleCount","patternDetails","failures","name","determineMinResolution","instrumentTracks","populateSamples","createSequences","currentPatternName","message","sortedFailures","drumkit","noMatch","otherDrumkit","otherName","sort","createSortedUnique","join","alert","selectedInstrument","clampedVolume","volume","includes","filename","replace","process","mute","muted","relativeUrl","drumkitName","instrumentName","toLowerCase","chooseAppropriateUrlForInstrument","patternResolution","patternLength","callback","_part","patternName","oldPatternName","oldLength","timeFromBarEnd","loopEnd","toSeconds","position","enableNewTrack","setLoopPoints","state","scheduleOnce","then","stop","now","instrumentID","set","theme","responsiveFontSizes","createMuiTheme","palette","type","primary","main","secondary","ignoreEvent","event","key","getJsonStorageUrl","slug","getJsonDestinationUrl","licenseBannerStyles","bottom","zIndex","drawer","modalStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","background","border","boxShadow","shadows","padding","spacing","App","props","previousHistory","localStorage","getItem","instruments","instrumentMask","formatSettings","assign","DefaultSettings","patternSettings","loadedFile","selectedPattern","settingsOpen","patternsOpen","progress","showSharingDialog","showTitleOptions","params","song","songName","permanentUrl","history","JSON","parse","date","React","createRef","document","app","exportState","getExportState","stateToShare","encodeState","stateHash","hash","from","relevantHistory","Date","historyEntry","content","restrictedHistory","slice","setState","setItem","stringify","songID","songTitle","fetch","response","json","js","decodedState","decodeState","handleJson","catch","e","inputSong","Promise","resolve","err","fetchSong","version","destFilename","fileParts","split","blob","Blob","saveAs","zlib","deflateSync","binaryBuffer","Buffer","decompressedString","inflateSync","uploadUrl","metadata","method","headers","body","origin","notation","guessPerPatternSettings","title","prevState","createInstrumentMask","patternData","replacedTracks","trackData","patternWithTracks","createTracks","songNameFromFile","audio","ToneBoard","setActivePattern","recordSongVisited","file","h2","parseHydrogenPromise","h","assessedInstruments","figureInstruments","DEFAULT_INSTRUMENT_SYMBOLS","activeInstrumentation","figurePatternSettings","error","k","createObjects","kuva","patternIndex","resolvedSettings","Fragment","config","active","ref","onPlay","play","onStop","onTempoChange","setTempo","current","optionalAlert","severity","controls","variant","onClick","loadExample","bind","style","margin","onImport","handleFileImport","accept","waitingMessage","data","piece","loadLocalSong","href","iOS","mobile","classes","handlePatternsClose","disableBackdropTransition","disableDiscovery","className","open","onOpen","onClose","drawerHeader","drawerContainer","map","button","selectPattern","patternConfig","handleDrawerClose","patternToRender","getTrackLength","anchor","drawerPaper","onChange","existingPatternSettings","existingGlobalSettings","v","settings","color","default","save","share","aria-labelledby","aria-describedby","copy","renderTitlePage","patternContent","renderPattern","browser","test","instrumentConfigColumns","renderSharingDialog","width","aria-label","edge","clsx","hide","flexGrow","container","item","xs","onVolumeEvent","instrument","setVolumeForInstrument","setMutedForInstrument","renderPatternDrawer","renderSettingsDrawer","mainContent","renderMainContent","Component","withStyles","withRouter","useStyles","makeStyles","formControl","minWidth","camelToReadable","spacedString","toUpperCase","FormatSettings","useTheme","tokenStateToItem","tokenItemToState","handleOptionChange","updatedState","handleCheckedChange","target","checked","createOptionMenu","options","itemToState","stateToItem","idString","labelId","op","lineLengths","beatResolution","beatResolutions","c","lineResolution","root","FORMAT_CONFIG_STRINGS","prev","curr","FORMAT_CONFIG_BOOLS","control","label","parseInt","r","DEFAULT_FORMAT_CONFIG","FileImport","hiddenFileInput","fileObject","files","reader","FileReader","onload","loadEvent","result","readAsText","buttonProps","click","hidden","calculatePatternResolution","notes","note","parseHydrogenJs","instrumentElements","instrumentList","instrumentArray","element","instrumentComponent","parseFloat","isMuted","layer","patternElements","patternList","noteElements","noteList","patternSize","noteElement","n","patternsWithTracks","relevantNotes","relevantHits","fromPositions","virtualPatternList","virtualPatternGroups","patternToRelated","virtualGroup","rootPatternName","relatedPatterns","virtual","Set","iteration","expandedObject","objectHasExpanded","related","expandedNodeSet","node","relatedPatternSet","rootPattern","find","patternToMergeName","patternToMerge","merged","copiedTrack","format","xmlString","parser","xml2js","Parser","parseStringPromise","moduleExports","PlaybackControls","defaultValue","step","valueLabelDisplay","height","maxWidth","demoData","History","items","maxHeight","overflow","toLocaleDateString","renderRow","styles","whiteSpace","fontFamily","fontSize","PreTypography","Typography","Part","values","formatPatternString","restMark","patternLines","chunkArray","beatsPerLine","beatChunkSize","linesWithBeats","line","lineIndices","formatLine","startBeat","beats","component","lineMark","beat","activeNote","showBeatMark","beatMark","numberLine","createNumberMarker","numberRestMark","beatChunks","showBeatNumbers","lineIndex","PartWithTitle","Title","headingLevel","defaultLevel","safeHeading","getTitleType","Pattern","patternTime","instrumentIndices","textAlign","Routes","basename","path","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","console","formatConfig","propName","hasOwnProperty","str","chunkSize","RegExp","chunks","lineLength","beatCount","ceil","numberMarkerArray","asHTML","validateConfig","formatSymbol","symbol","numericPosition","formattedLine","charAt","lineWithBeats","chunkString","trackDict","defaultLineResolution","charIndex","trackID","trackSymbol","trackInstance","resolveConfig","patternString","lineArray","formattedLineArray","formatLineWithMarkers","normalizeInstrumentsForFiguring","nInst","manageAccentOrGhost","accentSymbol","ghostSymbol","outputInstruments","t0","t1","zeroLouder","mapping","activeInstruments","nonTrivialInstruments","add","has","defaultSymbolForSingleInstrument","symbolConfig","lowerName","instrumentsRaw","output","worthwhileInstruments","relevantTracks","trackIsClick","tomIndex","bassIndex","collated","candidate","clickTrack","hitTrack","instrumentIsTom","rawInstrumentName","lastTrack","figureClickyInstruments","djembeTracks","slapArray","toneArray","bassArray","djembeMapping","figureDjembes","figureSnares","figureShakers","instrumentUsed","ThinFormControlLabel","marginLeft","marginRight","FormControlLabel","InlinableIconButton","IconButton","NoDividerCenterTableCell","borderBottom","paddingBottom","TableCell","CenterTableCell","VolumeWidget","useState","setActive","sliderValue","setSliderValue","setMuted","sliderRef","useRef","FixedHeightStylings","top","SliderStyles","paddingLeft","IconStyles","onClickNHold","dispatchEvent","nativeEvent","onEnd","disableRipple","disableFocusRipple","onMuteEvent","orientation","setVolume","RawInstrumentEditDialog","currentSymbol","cancel","onCancel","confirm","autoFocus","fullWidth","onKeyDown","keyCode","preventDefault","InstrumentRenameDialog","currentName","trim","InstrumentTable","createCell","align","oldInstrumentIndex","findIndex","dstInstrumentIndex","oldInstrument","replacedSrcInstrument","dstInstrument","replacedInstruments","handleChange","createMatchingRow","scope","onEditRow","editRow","onRemoveRow","removeRow","table","onEditColumn","editColumn","onAddRow","InstrumentConfig","editingSymbol","setEditingSymbol","renamingInstrument","setRenamingInstrument","endEditingSymbol","resolvedSymbol","extraInstrument","renameInstrument","getSymbol","removeInstrument","baseInstrumentIndex","baseInstrumentId","targetInstrumentIndex"],"mappings":"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","file":"static/js/main.ec88b801.chunk.js","sourcesContent":["import { calculateResolution } from \"./utilities\"\n\n// stolen from https://studymaths.co.uk/topics/findingHCFWithJavaScript.php\nfunction findHCF(x, y) {\n\n   // If the input numbers are less than 1 return an error message.\n   if (x < 1 || y < 1) {\n    throw new Error(\"x<1 || y<1\");\n      // return \"Please enter values greater than zero.\";\n   }\n\n   // Now apply Euclid's algorithm to the two numbers.\n   while (Math.max(x, y) % Math.min(x, y) !== 0) {\n      if (x > y) {\n         x %= y;\n      }\n      else {\n         y %= x;\n      }\n   }\n   \n   // When the while loop finishes the minimum of x and y is the HCF.\n   return Math.min(x, y);\n}\n\nclass track\n{\n  \n  constructor(patternArray, resolution)\n  {\n    if(patternArray.length === 0)\n    {\n      throw new Error(\"patternArray must not be zero length\");\n    }\n    this.rep = patternArray;\n    this.resolution = resolution;\n  }\n\n  length()\n  {\n    return this.rep.length * this.resolution;\n  }\n\n  empty()\n  {\n    return this.rep.reduce( (a,b) => ( a + b ) ) === 0;\n  }\n\n  _sumOverlapsOfArrays(a,b)\n  {\n    let count = 0;\n    for( let i = 0; i < a.length; ++i)\n    {\n      if(a[i] && b[i])\n      {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  countOverlaps(other)\n  {\n    if( this.resolution === other.resolution )\n    {\n      return this._sumOverlapsOfArrays( this.rep, other.rep );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return this._sumOverlapsOfArrays( a.rep, b.rep );\n    }\n  }\n\n  aggregate(other)\n  {\n\n    if( this.resolution === other.resolution )\n    {\n      // when we aggregate, we specifically\n      const length = Math.max( this.rep.length, other.rep.length );\n      const pat = new Array(length).fill(0);\n      for(let index = 0; index < pat.length; ++index)\n      {\n        pat[index] = ( ( index < this.rep.length ) ? this.rep[index] : 0 )\n                  || ( ( index < other.rep.length ) ? other.rep[index] : 0 );\n      }\n      return new track( pat, this.resolution );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return a.aggregate(b);\n    }\n  }\n\n  static representPoints(points, resolution, size)\n  {\n    if( size <= 0 )\n    {\n      throw new Error(\"size must be greater than zero\");\n    }\n    if( size < resolution || (size % resolution) !== 0)\n    {\n      throw new Error(\"resolution must be less than size and divide it evenly\");\n    }\n    let s = new Array(size / resolution).fill(0);\n    for( const p of points )\n    {\n      if( (p % resolution) !== 0)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" at resolution \" + resolution.toString());\n      }\n      if (p >= size)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" for invalid specified size \" + size.toString());\n      }\n      const arrayIndex = p / resolution;\n      s[arrayIndex] = 1;\n    }\n    return s;\n  }\n\n  format(formatResolution)\n  {\n    // formatResolution must cleanly divide for every hit & the length of the pattern\n\n    const totalLength = (this.resolution * this.rep.length);\n    const points = this.toPoints();\n    const rep = track.representPoints(points, formatResolution, totalLength);\n    if(!rep)\n    {\n      return null;\n    }\n    return new track(\n      rep,\n      formatResolution\n    );\n  }\n\n  toPoints()\n  {\n    let points = [];\n    for( const arrayIndex of Array(this.rep.length).keys() )\n    {\n      const indicator = this.rep[arrayIndex];\n      if(indicator)\n      {\n        points.push( this.resolution * arrayIndex )\n      }\n    }\n    return points;\n  }\n\n  static fromPositions(positions, size, resolution = null)\n  {\n    const resolutionToUse = resolution ?? calculateResolution( positions, size );\n    return new track( \n      track.representPoints(positions, resolutionToUse, size), \n      resolutionToUse\n    );\n  }\n}\n\nexport default track;","// utilities.js\n\nfunction calculateResolution(positions, size)\n{\n  // hydrogen treats 48 as a beat\n  const basesToTry = [\n    48, // beat\n    24, // 1/2 beat\n    16, // 1/3 beat\n    12, // 1/4\n    8, // 1/6 \n    6, // 1/8\n    4, // 1/12\n    3, // 1/16\n    2, // 1/24\n    1 // 1/48\n  ];\n\n  // note that, fundamentally the size of the pattern is a \"keypoint\"\n  // that needs to be properly recorded by the resolution\n  const implicitPositions = positions.concat( [size] );\n\n  for( const b of basesToTry )\n  {\n    let allNotesPass = true;\n    for( const p of implicitPositions )\n    {\n      if( (p % b) !== 0 )\n      {\n        allNotesPass = false;\n        break;\n      }\n    }\n    if(allNotesPass)\n    {\n      return b;\n    }\n  }\n  throw new Error(\"Failed to predict base\");\n}\n\nexport { calculateResolution };","// Mobile.js\n\nfunction  isMobile()\n{\n  // the simple version from\n  // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n  const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n  const toMatch = [\n      /Android/i,\n      /webOS/i,\n      /iPhone/i,\n      /iPad/i,\n      /iPod/i,\n      /BlackBerry/i,\n      /Windows Phone/i\n  ];\n\n  return toMatch.some((toMatchItem) => {\n      return userAgent.match(toMatchItem);\n  });\n}\n\nexport { isMobile };","class Audio\n{\n\n  // todo: we replace a valid audioContext with a blank object, so that we can run tests in node\n  //       this should probably be replaced by https://github.com/audiojs/web-audio-api \n  //       and a test-suite written\n  static createWebContext()\n  {\n    return new (window.AudioContext || window.webkitAudioContext || Object)();\n  }\n\n  static determineMinResolution(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let minResolution = 48; \n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty()\n        )\n        {\n          minResolution = Math.min( minResolution, t.resolution );\n        }\n      }\n      return minResolution;\n  }\n\n  static determineTrackLength(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let trackLength = 48;\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty() \n        )\n        {\n          trackLength = Math.max( trackLength, t.length() );\n        }\n      }\n      return trackLength;\n  }\n\n  static peakAmplitude(\n    combined\n  )\n  {\n    let peakValue = 0.0;\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for( let sample = 0; sample < combinedChannel.length; ++sample)\n      {\n        peakValue = Math.max( Math.abs(combinedChannel[sample]), peakValue );\n      }\n    }\n    return peakValue;\n  }\n\n  static normalizeAudioBuffer(\n    combined\n  )\n  {\n    const peakValue = Audio.peakAmplitude( combined );\n    if( peakValue > 1.0 )\n    {\n      for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n        let combinedChannel = combined.getChannelData(channel);\n        for( let sample = 0; sample < combinedChannel.length; ++sample)\n        {\n          combinedChannel[sample] = combinedChannel[sample] / peakValue;\n        }\n      }\n    }\n    return combined;\n  }\n\n  static createMasterTrack(\n    context,\n    tracks,\n    instrumentIndex,\n    sounds,\n    tempo\n  )\n  {\n    const trackLength = Audio.determineTrackLength( instrumentIndex, tracks );\n\n\n    const beatTime =  (60.0 / tempo) * 1000;\n    const timePerHydrogen = beatTime / 48.0;\n\n\n    // let's assume we can do some simple things\n\n    const sampleRate = 44100;\n    const channels = 2;\n    const trackLengthMs = trackLength * timePerHydrogen;\n    const trackLengthSamples = trackLengthMs * sampleRate / 1000.0;\n    const totalSamples = Math.floor(trackLengthSamples);\n    const samplesPerHydrogen = Math.floor( totalSamples / trackLength );\n    const combined = context.createBuffer(channels, totalSamples, sampleRate);\n\n    // populate blank buffer with sounds\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && selected[0].id in sounds\n          && !t.empty()\n        )\n        {\n          const audioBuffer = sounds[selected[0].id];\n          // fallback to copying the mono buffer across both channels\n          const audioChannel = audioBuffer.numberOfChannels === 2 ? audioBuffer.getChannelData(channel) : audioBuffer.getChannelData(0);\n          const trackPoints = t.toPoints();\n          for( const noteStart of trackPoints )\n          {\n            const sampleStart = noteStart * samplesPerHydrogen;\n            for( let sample = 0; sample < audioBuffer.length; ++sample )\n            {\n              // add sample to mega track\n              combinedChannel[sampleStart + sample] = combinedChannel[sampleStart + sample] + audioChannel[sample];\n            }\n          }\n        }\n      }\n    }\n\n    return Audio.normalizeAudioBuffer( combined );\n  }\n\n  static createAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=true;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n  static createOneShotAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=false;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n}\n\nexport default Audio;","\nimport Audio from \"./Audio\"\nimport * as Tone from \"tone\";\n\n// these are the hydrogen drumkits available by GPL/CC\n\nconst DRUMKITS = [\n  \"circAfrique v4\",\n  \"DeathMetal\",\n  \"The Black Pearl 1.0\",\n  \"GMRockKit\",\n  \"TR808EmulationKit\"\n];\n\nconst convertNormalToAudible = (value) => {\n  // add an intuitive feel to gain values, perception of sound is non-linear\n  // https://www.dr-lex.be/info-stuff/volumecontrols.html\n  // note: I tried x^4 and I tried using tone's DB directly but neither felt very good.\n  return Math.pow(value, 2.5);\n};\n\nconst chooseAppropriateUrlForInstrument = (drumkitName, instrumentName) =>\n{\n  const name = instrumentName.toLowerCase();\n  // this is currently very basic\n  if(name.includes(\"kick\"))\n  {\n      return \"The Black Pearl 1.0/PearlKick-Hard.wav\";\n  }\n  else if(name.includes(\"stick\"))\n  {\n      return \"DeathMetal/16297_ltibbits_sticks_low_pitch.wav\";\n  }\n  else if(name.includes(\"tom\"))\n  {\n      return \"TR808EmulationKit/808_Tom_Mid.wav\"\n  }\n  else if(name.includes(\"clap\"))\n  {\n      return \"TR808EmulationKit/808_Clap.wav\";\n  }\n  else if(name.includes(\"snare\"))\n  {\n    return \"GMRockKit/Snare-Soft.wav\";\n  }\n  else if(name.includes(\"cowbell\"))\n  {\n    return \"GMRockKit/Cowbell-Softest.wav\";\n  }\n  else\n  {\n    // todo: snare, cymbals\n    return null;\n  }\n}\n\nconst createSequenceCallback = (pattern, sampleSource) =>\n{\n  let samplesReady = sampleSource.samplesReady();\n  const sequenceCallback = (time, indexFromStart) =>\n  {\n    // if we don't know samples are ready,\n    if(!samplesReady)\n    {\n      // update our knowledge, and early out if needed\n      samplesReady = sampleSource.samplesReady();\n      if(!samplesReady){ return; }\n    }\n    const trackLengthRes = ( pattern.length / pattern.resolution );\n    const index = indexFromStart % trackLengthRes;\n    for(const [id,t] of Object.entries(pattern.tracks))\n    {\n        if( t.rep[index] )\n        {\n          const sampleData = sampleSource.samples[id];\n          if( sampleData !== undefined )\n          {\n            sampleData.player.start(time);\n          }\n        }\n    }\n    if(sampleSource.onPatternTimeChange)\n    {\n      Tone.Draw.schedule(\n        ()=>{\n          const notePosition = (index * pattern.resolution) % pattern.length;\n          sampleSource.onPatternTimeChange(notePosition);\n        },\n        time\n      );\n    }\n  };\n  return sequenceCallback;\n};\n\nconst createSortedUnique = (failures) =>\n{\n  let sortedFailures = [];\n  for( const [drumkit, name] of failures )\n  {\n    let noMatch = true;\n    for( const [otherDrumkit, otherName] of sortedFailures )\n    {\n      if( drumkit === otherDrumkit && name === otherName )\n      {\n        noMatch = false;\n        break;\n      }\n    }\n    if( noMatch )\n    {\n      sortedFailures.push( [drumkit, name] );\n    }\n  }\n  sortedFailures.sort();\n  return sortedFailures;\n}\n\nclass ToneController\n{\n  constructor(instrumentIndex, patterns, tempo, onTimeChange)\n  {\n    // this thing has a lot of state, eh?\n    // would love if this state was a bit more structured\n    this.samples = {};\n    this.sequences = {};\n    this.currentPattern = null;\n    this.gain = new Tone.Gain();\n    this.gain.toDestination();\n    this.onPatternTimeChange = onTimeChange;\n    Tone.Transport.bpm.value = tempo;\n    Tone.Transport.loop = true;\n\n    this.sampleCount = 0;\n    this.expectedSampleCount = 0;\n    this.patternDetails = {};\n    let failures = []\n    for( let p of patterns )\n    {\n      this.patternDetails[p.name] = {\n        resolution: Audio.determineMinResolution(instrumentIndex, p.instrumentTracks ),\n        length : Audio.determineTrackLength(instrumentIndex, p.instrumentTracks ),\n        name: p.name,\n        tracks: p.instrumentTracks\n      };\n      this.populateSamples(instrumentIndex, p.instrumentTracks, failures);\n    }\n    this.sequences = this.createSequences(instrumentIndex, patterns);\n    this.currentPatternName = null;\n\n    if(failures.length > 0)\n    {\n      let message = \"Failed to load samples for instruments:\\n\";\n      let sortedFailures = createSortedUnique(failures);\n      for( const [drumkit, name] of sortedFailures )\n      {\n        message += \"    -\" + name;\n        if( drumkit !== \"\" ){ message += \" (\" + drumkit + \")\"; }\n        message += \"\\n\";\n      }\n      message += \"This is typically because they belong to commercial sound libraries. \" +\n       \"tabit's supported drumkits are\\n\" + DRUMKITS.join( \", \" ) + \".\";\n\n      alert(message);\n    }\n  }\n\n  samplesReady()\n  {\n    return this.sampleCount === this.expectedSampleCount;\n  }\n\n  populateSamples(instrumentIndex, tracks, failures)\n  {\n    this.sampleCount = 0;\n    for(const [id,] of Object.entries(tracks))\n    {\n      const selected = instrumentIndex.filter(inst => inst.id.toString() === id);\n      if( selected.length > 0)\n      {\n        const selectedInstrument = selected[0];\n        const clampedVolume = convertNormalToAudible( Math.min( Math.max( 0.0 , selectedInstrument.volume ), 1.0 ) );\n        if( selectedInstrument.id in this.samples )\n        {\n          continue;\n        }\n        if(\n          \"drumkit\" in selectedInstrument && \n          \"filename\" in selectedInstrument &&\n          DRUMKITS.includes(selectedInstrument.drumkit) )\n        {\n          const filename = selectedInstrument.filename.replace(\".flac\", \".wav\");\n          let player = new Tone.Player(\n            process.env.PUBLIC_URL + \"/wav/\" + selectedInstrument.drumkit + \"/\" + filename, \n            () => { this.sampleCount++; }\n          );\n          player.mute = selectedInstrument.muted;\n          const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n          player.connect(gain)\n          gain.connect(this.gain);\n          this.samples[selectedInstrument.id] = { player : player, gain : gain }\n          this.expectedSampleCount++;\n        }\n        else if( \"drumkit\" in selectedInstrument )\n        {\n          const relativeUrl = chooseAppropriateUrlForInstrument( selectedInstrument.drumkit, selectedInstrument.name );\n          if(relativeUrl !== null)\n          {\n            let player = new Tone.Player(\n              process.env.PUBLIC_URL + \"/wav/\" + relativeUrl, \n              () => { this.sampleCount++; }\n            );\n            player.mute = selectedInstrument.muted;\n            const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n            player.connect(gain)\n            gain.connect(this.gain);\n            this.samples[selectedInstrument.id] = { player : player, gain : gain }\n            this.expectedSampleCount++;\n          }\n          else\n          {\n            failures.push( [selectedInstrument.drumkit, selectedInstrument.name] );\n          }\n        }\n        else\n        {\n            failures.push( [\"\", selectedInstrument.name] );\n        }\n      }\n    }\n  }\n\n  createSequences(instrumentIndex, patterns)\n  {\n    let sequences = {};\n    for( let p of patterns )\n    {\n      const patternResolution = Audio.determineMinResolution(instrumentIndex, p.instrumentTracks);\n      const patternLength = Audio.determineTrackLength(instrumentIndex, p.instrumentTracks);\n      const callback = createSequenceCallback(\n        this.patternDetails[p.name],\n        this\n      );\n      sequences[ p.name ] = new Tone.Sequence(\n        callback,\n        [...Array(patternLength / patternResolution).keys()],\n        Tone.Time(\"4n\") * ( patternResolution / 48.0 )\n      );\n      // start the sequence, but the ticks won't be triggered when muted\n      // note: setting mute on the sequence directly seems to have no effect\n      sequences[ p.name ]._part.mute = true;\n      sequences[ p.name ].start(0);\n    }\n    return sequences;\n  }\n\n  setActivePattern( patternName )\n  {\n    const oldPatternName = this.currentPatternName !== null ? this.currentPatternName : null;\n    const length = this.patternDetails[patternName].length;\n    const oldLength = oldPatternName !== null ? this.patternDetails[oldPatternName] : null\n\n    // we have a little fudge in here... if we're transitioning from a 4 beat loop\n    // to an 8 beat pattern ... we probably really wanted to hit the start of that pattern,\n    // not to transition at 3.75 beats and play the latter half\n    const timeFromBarEnd = Tone.Transport.loopEnd -  Tone.Transport.toSeconds(Tone.Transport.position);\n    const queueTransition = oldPatternName !== null\n    && Tone.Transport.state === \"started\"\n    && ( timeFromBarEnd > 0 && timeFromBarEnd < Tone.Transport.toSeconds(Tone.Time(\"8n\")));\n\n    const enableNewTrack = (time) => {\n      if(oldPatternName !== null)\n      {\n        // note: setting mute on the sequence directly seems to have no effect\n        this.sequences[oldPatternName]._part.mute = true;\n      }\n      if(oldPatternName === null || oldLength !== length )\n      {\n\n        Tone.Transport.setLoopPoints(0, Tone.Time(\"4n\") * (length / 48.0));\n      }\n      this.sequences[patternName]._part.mute = false;\n      this.currentPatternName = patternName;\n    };\n\n    if( queueTransition ) {\n      Tone.Transport.scheduleOnce(\n        enableNewTrack,\n        Tone.Time(\"0\")\n      );\n    }\n    else\n    {\n      enableNewTrack();\n    }\n  }\n\n  play()\n  {\n    // Tone.start is needed to be triggered from a user interaction\n    // (web-audio-context policy of not playing until a user interaction)\n    Tone.start().then(()=>{Tone.Transport.start();});\n  }\n\n  stop()\n  {\n    // it's slightly unclear what the synchronisation semantics of this Tone.Transport.stop() call are.\n    // If a tick is currently in flight on Tone.Transport we have to ensure that\n    // the reset of patternTime occurs *afterwards*. \n    // The below calls seem to work for this, but I couldn't tell you why.\n    if( Tone.Transport.state === \"started\")\n    {\n      Tone.Transport.stop();\n      if( this.onPatternTimeChange )\n      {\n        Tone.Draw.schedule(\n          ()=>{\n            this.onPatternTimeChange( null );\n          },\n          Tone.Transport.now()\n        );\n      }\n    }\n  }\n\n  setMutedForInstrument(instrumentID, muted)\n  {\n    this.samples[instrumentID].player.mute = muted;\n  }\n\n  setVolumeForInstrument(instrumentID, volume)\n  {\n    this.samples[instrumentID].gain.set( {gain : convertNormalToAudible(volume) } );\n  }\n\n  setTempo(tempo)\n  {\n    Tone.Transport.bpm.value = tempo;\n  }\n};\n\n\n\nexport default ToneController;","import React from 'react';\nimport clsx from 'clsx';\nimport FileImport from \"./FileImport\";\nimport Pattern from \"./Pattern\";\nimport h2 from './h2';\nimport './App.css';\n\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// define mui theme, including responsiveFont\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\n\n// drawer\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { withStyles } from '@material-ui/core/styles';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n// notationSettings\n\nimport {FormatSettings, DefaultSettings} from \"./formatSettings\";\nimport {createInstrumentMask, InstrumentConfig} from \"./instrumentConfig\";\nimport { activeInstrumentation, figureInstruments, DEFAULT_INSTRUMENT_SYMBOLS } from \"./instrumentation\";\nimport notation from \"./notation\";\n\nimport Grid from '@material-ui/core/Grid';\n\n// load static data\nimport kuva from \"./kuva.json\";\nimport track from \"./track\";\n\nimport { saveAs } from 'file-saver';\n\nimport ToneBoard from \"./ToneBoard\";\nimport PlaybackControls from \"./PlaybackControls\";\nimport { withRouter } from \"react-router-dom\";\n\nimport hash from \"object-hash\";\nimport zlib from \"zlib\";\nimport copy from \"copy-to-clipboard\";\n\nimport { isMobile } from \"./Mobile\";\n\nimport History from \"./History\";\n\n// mui theme config\nlet theme = responsiveFontSizes( createMuiTheme( {\n  palette: { \n    type: 'dark',\n    primary: { main: '#36d9be' },\n    secondary: { main: '#f50057' }\n   } \n} ) );\n\nconst ignoreEvent = (event) => {\n  return event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift');\n};\n\nconst getJsonDestinationUrl = (slug) => {\n  const jsonbase_url = \"https://jsonbase.com/tabit-song/\" + slug;\n  return jsonbase_url;\n}\n\nconst getJsonStorageUrl = (slug) => {\n  // jsonbase doesn't give cross-origin headers, \n  // so we use cors-anywhere to add them\n\n  // this is obviously a hack, but it enables us to use jsonbase\n  // as a transitive (semi-permanent) database, on a static site!\n  const cors_url = \"https://cors-anywhere.herokuapp.com/\";\n  return cors_url + getJsonDestinationUrl(slug);\n}\n\nconst licenseBannerStyles = {\n  position:\"absolute\",\n  bottom:0,\n  \"width\": \"95%\",\n  \"textAlign\": \"center\",\n  \"backgroundColor\" : \"#282c34\", // same background color as app\n  \"zIndex\" : theme.zIndex.drawer\n};\n\nconst modalStyles = {\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n};\n\nclass App extends React.Component\n{\n  constructor(props) {\n    super(props);\n    const previousHistory = localStorage.getItem(\"tabit-history\");\n    this.state = {\n      // data\n      instruments : null,\n      instrumentIndex : null,\n      instrumentMask : null,\n      patterns : null,\n      formatSettings : Object.assign({}, DefaultSettings),\n      patternSettings : [],\n      // ui state\n      loadedFile : null,\n      selectedPattern : null,\n      settingsOpen : false,\n      patternsOpen : false,\n      progress : null,\n      showSharingDialog : false,\n      showTitleOptions : this.props.match.params.song === undefined,\n      songName: null,\n      permanentUrl : \"\",\n      history: previousHistory ? JSON.parse(previousHistory).sort( (a,b) =>(b.date - a.date) ) : []\n    };\n    this.pattern = React.createRef();\n    document.app = this;\n  }\n\n  recordSongVisited()\n  {\n    // require { id, name, content?? }\n    const exportState = this.getExportState();\n    const stateToShare = this.encodeState(exportState);\n    const stateHash = hash(stateToShare);\n\n    const history = Array.from(this.state.history);\n    const relevantHistory = history.filter( song => ( song.id === stateHash && song.name === exportState.songName ) );\n    if( relevantHistory.length !== 0 )\n    {\n\n      // found at least one history entry that matches our constraints ... let's update the most recent one\n      relevantHistory[0].date = Date.now();\n    }\n    else\n    {\n      // add history entry\n      const historyEntry = {\n        name: exportState.songName,\n        id: stateHash,\n        date: Date.now(),\n        content: stateToShare\n      };    \n      history.push(historyEntry);\n    }\n    // cap how many files we remember\n    const restrictedHistory = history.sort( (a,b) =>(b.date - a.date)  ).slice(0, 10);\n    this.setState(\n      { history : restrictedHistory },\n      () => {\n        localStorage.setItem(\"tabit-history\", JSON.stringify(restrictedHistory));\n      }\n    );\n  }\n\n  fetchSong(songID, songTitle)\n  {\n    fetch(getJsonStorageUrl(songID))\n    .then( response => { return response.json(); } )\n    .then( js => {\n      const decodedState = this.decodeState(js);\n      const stateHash = hash(js);\n      if( stateHash !== songID )\n      {\n        throw new Error(\"Hash did not match\");\n      }\n      this.handleJson(songTitle, decodedState);\n    }).catch( (e) => {\n      this.setState({showTitleOptions : true});\n      alert(\"Song \" + (songTitle ?? songID) + \" could not be found.\" );\n    } );\n  }\n\n  loadLocalSong(inputSong)\n  {\n    const resolveSong = (song) => {\n      const decodedState = this.decodeState(song.content);\n      const stateHash = hash(song.content);\n      if( stateHash !== song.id )\n      {\n        throw new Error(\"Hash did not match\");\n      }\n      this.handleJson(song.name, decodedState);\n    };\n\n    const displayError = (err) => {\n      this.setState({showTitleOptions : true});\n      alert(\"Failed to load song \" + inputSong.name + \". Encountered error \" + err.toString() );\n    };\n\n    this.setState(\n      {showTitleOptions : false }\n    );\n    Promise.resolve(inputSong)\n      .then(resolveSong)\n      .catch( displayError );\n  }\n\n  componentDidMount()\n  {\n    if( this.props.match.params.song )\n    {\n      this.fetchSong(this.props.match.params.song);\n    }\n  }\n\n  getExportState()\n  {\n    return {\n      instruments : this.state.instruments,\n      instrumentIndex : this.state.instrumentIndex,\n      patterns : this.state.patterns,\n      formatSettings: this.state.formatSettings,\n      patternSettings : this.state.patternSettings,\n      songName: this.state.songName,\n      version: \"1.1.0\"\n    }\n  }\n\n  save()\n  {\n    let destFilename = \"download.tabit\";\n    if(this.state.loadedFile)\n    {\n      const fileParts = this.state.loadedFile.split(\".\");\n      if( fileParts.length === 1 )\n      {\n        destFilename = fileParts[0] + \".tabit\";\n      }\n      else\n      {\n        destFilename = fileParts.slice(0, fileParts.length - 1).join(\".\") + \".tabit\";\n      }\n    }\n\n    const js = JSON.stringify(this.getExportState(), null, 4);\n    const blob = new Blob([js], {type: \"application/json\"});\n    saveAs(blob, destFilename);\n  }\n\n  encodeState(state)\n  {\n    // json\n    const js = JSON.stringify(this.getExportState());\n    // compress\n    const compressedState = zlib.deflateSync(js).toString(\"base64\");\n    return { state : compressedState };\n  }\n\n  decodeState(state)\n  {\n    const binaryBuffer = new Buffer(state.state, \"base64\");\n    const decompressedString = zlib.inflateSync(binaryBuffer);\n    return JSON.parse(decompressedString);\n  }\n\n  share()\n  {\n    const stateToShare = this.encodeState(this.getExportState());\n    const stateHash = hash(stateToShare);\n    const uploadUrl = getJsonStorageUrl(stateHash);\n\n    const metadata = {\n      method: \"PUT\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(stateToShare)\n    };\n\n    const permanentUrl = window.origin + process.env.PUBLIC_URL + \"/song/\" + stateHash;\n    fetch(uploadUrl, metadata).then(\n      e => {\n        this.setState({permanentUrl : permanentUrl, showSharingDialog: true})\n      }\n    ).catch(err => { alert(\"Couldn't upload song at this time. Sorry for any inconvenience.\"); });\n  }\n\n  figurePatternSettings(patterns)\n  {\n    return Array.from(\n      patterns,\n      (p) => notation.guessPerPatternSettings( p.instrumentTracks )\n    );\n  }\n\n  songNameFromFile(filename)\n  {\n    if(filename === null || filename === undefined)\n    {\n      return null;\n    }\n    if( filename.includes(\".\") )\n    {\n      const songTitle = filename.split('.').slice(0, -1).join('.');\n      return songTitle;\n    }\n    else\n    {\n      return filename;\n    }\n  }\n\n  handleJson(title, prevState)\n  {\n    const createTracks = (patternData) =>\n    {\n      // the instruments currently work as simple objects\n      // we need to create tracks!\n      let patterns = [];\n      for( let pattern of patternData )\n      {\n        let replacedTracks = {};\n        // todo: find a more compact way of doing this\n        for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n        {\n          replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n        }\n        let patternWithTracks = Object.assign({}, pattern);\n        patternWithTracks.instrumentTracks = replacedTracks;\n        patterns.push(patternWithTracks);\n      }\n      return patterns;\n    }\n\n    this.setState(\n      {\n        instrumentIndex : prevState.instrumentIndex,\n        instrumentMask : createInstrumentMask(prevState.instrumentIndex, prevState.instruments),\n        instruments : prevState.instruments,\n        patterns : createTracks(prevState.patterns),\n        formatSettings : prevState.formatSettings,\n        patternSettings : prevState.patternSettings,\n        // general app state\n        loadedFile : title ?? prevState.loadedFile,\n        selectedPattern : prevState.patterns.length === 0 ? null : 0,\n        patternsOpen : prevState.patterns.length !== 0,\n        songName: title ?? ( prevState.songName ?? ( prevState.loadedFile ? this.songNameFromFile(prevState.loadedFile) : \"untitled\" ) )\n      },\n      () => {\n        // always default tempo to 100bpm for now\n        this.audio = new ToneBoard( this.state.instrumentIndex, this.state.patterns, 100.0, (time)=>{this.onPatternTimeChange(time);});\n        this.audio.setActivePattern( this.state.patterns[this.state.selectedPattern].name );\n        this.recordSongVisited();\n      }\n    );\n  }\n\n  handleFileImport(e)\n  {\n    if( e.file.name.includes(\"h2song\") )\n    {\n      // e = { file : , content : }\n      h2.parseHydrogenPromise(e.content).then(h => {\n        const assessedInstruments = figureInstruments(h.instruments, DEFAULT_INSTRUMENT_SYMBOLS, h.patterns);\n        const instrumentIndex = activeInstrumentation(h.instruments, h.patterns);\n\n        // fixme: convert hydrogen volume/gain to normal values, somewhere\n        for( let instrument of instrumentIndex )\n        {\n          instrument.volume = 0.5;\n        }\n\n        this.setState(\n          {\n            // data\n            instrumentIndex : instrumentIndex,\n            instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n            instruments : assessedInstruments,\n            patterns : h.patterns,\n            patternSettings : this.figurePatternSettings(h.patterns),\n            // general app state\n            loadedFile : e.file.name,\n            patternsOpen : true,\n            selectedPattern : h.patterns.length === 0 ? null : 0,\n            songName: this.songNameFromFile(e.file.name)\n          },\n          ()=>{\n            // always default tempo to 100bpm for now\n            this.audio = new ToneBoard( this.state.instrumentIndex, this.state.patterns, 100.0, (time)=>{this.onPatternTimeChange(time);});\n            this.audio.setActivePattern( this.state.patterns[this.state.selectedPattern].name );\n            this.recordSongVisited();\n          }\n        );\n      }).catch( (error)=>{ alert(\"Failed to load file \" + e.file.name  + \" with error \" + error); } );\n    }\n    else\n    {\n\n      // assume it's a tabit file!\n      Promise.resolve(e.content)\n        .then(JSON.parse)\n        .then( prevState => { this.handleJson(this.songNameFromFile(e.file.name),prevState); } )\n        .catch( (error)=>{ alert(\"Failed to load file \" + e.file.name  + \" with error \" + error); } );\n    }\n  }\n\n  loadExample()\n  {\n    const createObjects = (state) => \n    {\n      // the instruments currently work as simple objects\n      // we need to create tracks!\n      for( let pattern of state.patterns )\n      {\n        let replacedTracks = {};\n        // todo: find a more compact way of doing this\n        for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n        {\n          replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n        }\n        pattern.instrumentTracks = replacedTracks;\n      }\n      return state;\n    }\n    const k = createObjects(kuva);\n    const assessedInstruments = figureInstruments(k.instruments, DEFAULT_INSTRUMENT_SYMBOLS, k.patterns);\n    const instrumentIndex = activeInstrumentation(k.instruments, k.patterns);\n\n    // fixme: convert hydrogen volume/gain to normal values, somewhere\n    for( let instrument of instrumentIndex )\n    {\n      instrument.volume = 0.5;\n    }\n\n    this.setState(\n      {\n        instrumentIndex : instrumentIndex,\n        instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n        instruments : assessedInstruments,\n        patterns : k.patterns,\n        selectedPattern : k.patterns.length === 0 ? null : 0,\n        loadedFile : \"kuva.example\",\n        patternsOpen : true,\n        patternSettings : this.figurePatternSettings(k.patterns),\n        songName : \"kuva\"\n      },\n      () => {\n        // always default tempo to 100bpm for now\n        this.audio = new ToneBoard( this.state.instrumentIndex, this.state.patterns, 100.0, (time)=>{this.onPatternTimeChange(time);});\n        this.audio.setActivePattern( this.state.patterns[this.state.selectedPattern].name );\n        // no need to record the example, it's embedded into the website anyway\n        // this.recordSongVisited();\n      }\n    );\n  }\n\n  selectPattern(patternIndex)\n  {\n    // it's important to do this before we re-render components\n    this.audio.setActivePattern(\n      this.state.patterns[patternIndex].name\n    );\n\n    this.setState(\n      { selectedPattern: patternIndex }\n    );\n  }\n\n  // todo: this is a separate component!\n  renderPattern(pattern, resolvedSettings)\n  {\n    return (\n      <React.Fragment>\n        <Pattern\n          instruments={this.state.instruments}\n          tracks={pattern.instrumentTracks}\n          config={resolvedSettings}\n          active={this.state.progress}\n          ref={this.pattern}\n        />\n        <PlaybackControls\n          onPlay={()=>{if(this.audio){this.audio.play();}}}\n          onStop={()=>{if(this.audio){this.audio.stop();}}}\n          onTempoChange={(tempo)=>{if(this.audio){this.audio.setTempo(tempo);}}}\n        />\n      </React.Fragment>\n    );\n  }\n\n  onPatternTimeChange(time)\n  {\n    this.pattern.current.onPatternTimeChange(time);\n  }\n\n  getTrackLength(pattern)\n  {\n    let trackLength = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        trackLength = Math.max( trackLength, t.length() );\n    }\n    return trackLength;\n  }\n\n  getResolution(pattern)\n  {\n    let resolution = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        resolution = Math.min( resolution, t.resolution );\n    }\n    return resolution;\n  }\n\n  renderTitlePage()\n  {\n    const showAlert = this.state.patterns != null && this.state.patterns.length === 0;\n    const optionalAlert = showAlert ? ( <Alert severity=\"error\">{this.state.loadedFile} contained no patterns! Try another.</Alert> )\n                                    : \"\";\n    // if a load of a song is in flight don't show file open buttons\n    const controls = (\n      <React.Fragment>\n        <Button variant=\"contained\" onClick={this.loadExample.bind(this)} style={{margin: \"1em\"}}>Load example</Button>\n        <FileImport\n          style={{margin: \"1em\"}}\n          variant=\"contained\"\n          onImport={this.handleFileImport.bind(this)}\n          accept=\".tabit,.h2song\"\n          />\n          {optionalAlert}\n      </React.Fragment>\n    );\n    const waitingMessage = (<React.Fragment>\n        <p> Loading song... </p>\n        <CircularProgress />\n      </React.Fragment>\n    );\n    return (\n      <React.Fragment>\n      <div>\n        <h2>tabit</h2>\n        <p>I read .h2songs and write tab</p>\n        {this.state.showTitleOptions ? controls : waitingMessage}\n      </div>\n      <div style={{\"marginLeft\" : \"auto\", \"marginRight\": \"auto\"}}>\n      { this.state.history.length > 0 ? <History data={this.state.history} onClick={(piece)=>{this.loadLocalSong(piece);}}/> : \"\" }\n      </div>\n      <div style={licenseBannerStyles} >\n        <p>tabit relies on publicly available sound libraries listed at <a href=\"https://github.com/andrew-murray/tabit\">https://github.com/andrew-murray/tabit</a></p>\n      </div>\n      </React.Fragment>\n    );\n  }\n\n  renderPatternDrawer(iOS, mobile)\n  {\n    const classes = this.props;\n    const handlePatternsClose = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( { patternsOpen : false } );\n    };\n    const handlePatternsOpen = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( { patternsOpen : true } );\n    };\n\n    return (\n      <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n      className={classes.drawer}\n      variant={ mobile ? undefined : \"persistent\" }\n      open={this.state.patternsOpen}\n      onOpen={handlePatternsOpen}\n      onClose={handlePatternsClose}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handlePatternsClose}>\n              <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>\n            {(this.state.patterns ?? []).map( (pattern, index) => (\n              <ListItem button key={\"drawer-pattern\" + index.toString()} onClick={() => this.selectPattern(index)}>\n                  <ListItemText primary={pattern.name} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </SwipeableDrawer>\n    );\n  }\n\n\n\n  renderSettingsDrawer(iOS, mobile, patternConfig)\n  {\n    const classes = this.props;\n    const settingsChangeCallback = (config) => {\n      let existingPatternSettings = Array.from( this.state.patternSettings );\n      let existingGlobalSettings = Object.assign( {}, this.state.formatSettings );\n      for( let [k,v] of Object.entries(config) )\n      {\n        if( k in existingPatternSettings[this.state.selectedPattern] )\n        {\n          existingPatternSettings[this.state.selectedPattern][k] = v;\n        }\n        else\n        {\n          existingGlobalSettings[k] = v;\n        }\n      }\n      this.setState( { formatSettings: existingGlobalSettings, patternSettings : existingPatternSettings } );\n    };\n\n    const handleDrawerOpen = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( {settingsOpen : true} );\n    };\n\n    const handleDrawerClose = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( {settingsOpen : false} );\n    };\n\n    const patternToRender = this.state.patterns[this.state.selectedPattern];\n\n    const patternDetails = {\n      name : patternToRender.name,\n      resolution : patternToRender.resolution,\n      \"length\" : this.getTrackLength(patternToRender)\n    };\n\n    return (\n      <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n        className={classes.drawer}\n        variant={ mobile ? undefined : \"persistent\" }\n        anchor=\"right\"\n        open={this.state.settingsOpen}\n        onOpen={handleDrawerOpen}\n        onClose={handleDrawerClose}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n              <ChevronRightIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <FormatSettings\n          onChange={settingsChangeCallback}\n          settings={patternConfig}\n          pattern={patternDetails}\n          />\n        <Button\n          style={{backgroundColor : \"white\", color : theme.palette.background.default}}\n          onClick={(e) => { this.save(); } }\n        >Download</Button>\n        <Divider />\n        <Button\n          style={{backgroundColor : \"white\", color : theme.palette.background.default}}\n          onClick={(e) => { this.share(); } }\n        >Share</Button>\n      </SwipeableDrawer>\n    );\n  }\n\n  renderSharingDialog()\n  {\n    return (\n      <Dialog\n        open={this.state.showSharingDialog}\n        onClose={(e)=>{this.setState({showSharingDialog: false});}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n          Your song is available at\n          </DialogContentText>\n          <DialogContentText>\n          {this.state.permanentUrl}\n          <IconButton onClick={(e)=>{ copy(this.state.permanentUrl); }}>\n            <FileCopyIcon />\n          </IconButton>\n          </DialogContentText>\n          <DialogActions>\n            <Button onClick={(e)=>{this.setState({showSharingDialog: false})}}>\n              Close\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  renderMainContent()\n  {\n    if(this.state.patterns == null || this.state.patterns.length === 0)\n    {\n      return this.renderTitlePage();\n    }\n    else\n    {\n      const patternToRender = this.state.patterns[this.state.selectedPattern];\n      const patternConfig = Object.assign(\n        Object.assign({}, this.state.formatSettings), // global settings\n        this.state.patternSettings[this.state.selectedPattern] // then apply per-pattern settings\n      );\n      const patternContent = this.renderPattern(patternToRender, patternConfig);\n       \n\n      const changeInstrumentsCallback = (instruments) => {\n        this.setState( {\n          instruments : instruments,\n          instrumentMask : createInstrumentMask(this.state.instrumentIndex, instruments)\n        } );\n      }\n\n      const classes = this.props;\n      const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n      const mobile = isMobile();\n\n      const instrumentConfigColumns = mobile ? 12 : 8;\n\n      const sendVolumeEvent = (event) =>\n      {\n        if(\"volume\" in event)\n        {\n          const instrumentID = this.state.instrumentIndex[ event.instrument ].id;\n          this.audio.setVolumeForInstrument( instrumentID, event.volume );\n        }\n        else if(\"muted\" in event)\n        {\n          const instrumentID = this.state.instrumentIndex[ event.instrument ].id;\n          this.audio.setMutedForInstrument( instrumentID, event.muted );\n        }\n      };\n\n      return (\n        <React.Fragment>\n          {this.renderSharingDialog()}\n          <div style={{display:\"flex\", width: \"95%\"}}> \n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open pattern list\"\n              edge=\"start\"\n              onClick={(e)=>{ this.setState( {patternsOpen: true } )}}\n              className={clsx({\n                [classes.hide] : !this.state.patternsOpen\n              })}\n            >\n              <ChevronRightIcon />\n            </IconButton>\n            <div className=\"content-title\" style={{flexGrow:1}}>\n            </div>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open settings\"\n              edge=\"end\"\n              onClick={(e)=>{ this.setState( {settingsOpen: true } )}}\n              className={clsx(this.state.settingsOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n          {patternContent}\n          <Grid container>\n          <Grid item xs={(12 - instrumentConfigColumns) / 2} />\n          <Grid item xs={instrumentConfigColumns}>\n          <InstrumentConfig\n              instruments={this.state.instruments}\n              instrumentIndex={this.state.instrumentIndex}\n              instrumentMask={this.state.instrumentMask}\n              onChange={changeInstrumentsCallback}\n              onVolumeEvent={sendVolumeEvent}\n            />\n          </Grid>\n          <Grid item xs={(12 - instrumentConfigColumns) / 2} />\n          </Grid>\n          {this.renderPatternDrawer(iOS,mobile)}\n          {this.renderSettingsDrawer(iOS,mobile, patternConfig)}\n        </React.Fragment>\n      );\n    }\n  }\n\n  render() {\n    const mainContent = this.renderMainContent();\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          {mainContent}\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(modalStyles)(withRouter(App));\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport notation from \"./notation\";\nimport HelpIcon from '@material-ui/icons/HelpOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nfunction camelToReadable(s)\n{\n  const spacedString = s.replace(/([A-Z])/g, ' $1');\n  return spacedString[0].toUpperCase() + spacedString.slice(1);\n}\n\nfunction FormatSettings(props) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  // todo: change to multiple useState calls?\n\n  function tokenStateToItem(value)\n  {\n    return value === \" \" ? \"space\" : value;\n  }\n\n  function tokenItemToState(value)\n  {\n    return value === \"space\" ? \" \" : value;\n  }\n\n  const handleOptionChange = (name, value) => {\n    const updatedState = {...props.settings, [name]: value};\n    props.onChange(updatedState);\n  };\n\n  const handleCheckedChange = (event) => {\n    const updatedState = {...props.settings, [event.target.name]: event.target.checked};\n    props.onChange(updatedState);\n  };\n\n  function createOptionMenu(\n    name,\n    options,\n    itemToState = tokenItemToState,\n    stateToItem = tokenStateToItem\n  )\n  {\n    const idString = \"form-control-\" + name + \"-id\";\n    return (\n      <FormControl variant=\"filled\" className={classes.formControl} key={idString} id={idString}>\n        <InputLabel id=\"settings-option-{name}\">{name}</InputLabel>\n        <Select\n          labelId={\"settings-option-\" + name + \"-labelID\"}\n          id={\"settings-option-\" + name + \"-id\"}\n          value={stateToItem(props.settings[name])}\n          name={name}\n          onChange={(e) => handleOptionChange( e.target.name, itemToState(e.target.value))}\n        >\n          {options.map((op) => <MenuItem key={\"settings-menu-item-\" + name + \"-\" + op} value={stateToItem(op)}>{stateToItem(op)}</MenuItem>)}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  function createBoolControl(name)\n  {\n    return (\n      <FormControlLabel\n        control={<Switch checked={props.settings[name]} onChange={handleCheckedChange} name={name} />}\n        label={camelToReadable(name)}\n        key={\"switch-\"+name}\n      />\n    );\n  };\n\n  const resolutionToBeatString = (r) => ( r / props.settings.beatResolution ).toString();\n  const beatStringToResolution = (b) => props.settings.beatResolution * parseInt(b);\n  \n  const candidateLineLengths = [ 2, 3, 4, 5, 6, 7, 8, 14, 16, 32 ];\n  let lineLengths = [];\n  for( const c of candidateLineLengths )\n  {\n    const resolution = c * 48;\n    if( (resolution % props.settings.beatResolution) === 0\n      && (resolution <= props.pattern.length)\n     )\n    {\n      lineLengths.push( resolution );\n    }\n  }\n\n  if( !lineLengths.includes( props.pattern.length ) )\n  {\n    lineLengths.push( props.pattern.length );\n    lineLengths.sort();\n  }\n\n  const candidateBeatResolutions = [24, 36, 48, 72, 96];\n  let beatResolutions = [];\n  for( const c of candidateBeatResolutions )\n  {\n    if( (c % props.pattern.resolution) === 0 && ( props.settings.lineResolution % c ) === 0)\n    {\n      beatResolutions.push( c );\n    }\n  }\n  const beatLineHelp = \"Only options that produce lines made up of 'n' whole beats (no part-beats) are shown. \"\n  + \"If the options displayed for either lineResolution or beatResolution are too restrictive, try changing the other option. \"\n  + \"If lineResolution only results in one line, more options for beatResolution will be shown.\"\n  return (\n    <FormGroup className={classes.root}>\n      {notation.FORMAT_CONFIG_STRINGS.map( op => createOptionMenu( op[0], op[1] ) ).reduce((prev, curr) => [prev, curr])}\n      {notation.FORMAT_CONFIG_BOOLS.map( op => createBoolControl( op )).reduce((prev, curr) => [prev, curr]) }\n      <div style={{backgroundColor : \"white\", color : theme.palette.background.default}}><p> {props.pattern.name + \" Options\"} </p></div>\n      {\n        createOptionMenu(\n          \"beatResolution\",\n          beatResolutions,\n          (v) => v.toString(), // stateToItem\n          (v) => parseInt(v) // itemToState\n        )\n      }\n      {createOptionMenu(\n        \"lineResolution\",\n        lineLengths,\n        beatStringToResolution,\n        resolutionToBeatString\n      )}\n      <Grid container>\n        <Grid item xs={8}/>\n        <Grid item xs={4}>\n          <Tooltip title={beatLineHelp} aria-label=\"help\">\n            <Icon>\n              <HelpIcon />\n            </Icon>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </FormGroup>\n  );\n}\n\nconst DefaultSettings = notation.DEFAULT_FORMAT_CONFIG; \n\n\nexport { FormatSettings, DefaultSettings }\nexport default FormatSettings;","// FileUpload.react.js\n\n// inspired by https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n// and https://stackoverflow.com/questions/55830414/how-to-read-text-file-in-react\n\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\n\nclass FileImport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.hiddenFileInput = React.createRef();\n  }\n\n  onChange(e) {\n    const fileObject = e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = loadEvent => {\n      if( this.props.onImport )\n      {\n        this.props.onImport(\n          { file: fileObject, content : loadEvent.target.result}\n        );\n      }\n    }\n    reader.readAsText(fileObject);\n  }\n\n  render() {\n    const clickFile = (e) => {\n      this.hiddenFileInput.current.click();\n    }\n\n    const {onImport, accept, ...buttonProps} = {...this.props};\n    return (\n      <React.Fragment>\n        <Button onClick={clickFile} {...buttonProps}>Import File</Button>\n        <input\n          type=\"file\"\n          hidden\n          accept={accept}\n          onChange={(e) => this.onChange(e)} ref={this.hiddenFileInput}\n          />\n      </React.Fragment>\n   )\n  }\n}\n\nexport default FileImport;\n","// h2.js\n\nimport track from \"./track\";\nimport xml2js from \"xml2js\";\nimport { calculateResolution } from \"./utilities\";\n\n// TODO: This file was written with the hope that using xml2js would make things cleaner\n// it didn't, purely because xml2js is an okay library doing a difficult task\n// it ensures to produce a good json file but in doing so muddles the data a bit.\n// Should replace this with dom-parser and window.DOMParser\n\n// let's think about the data representation needed\n\nfunction calculatePatternResolution(pattern, size)\n{\n  const positions = Array.from(pattern.notes, note => note.position)\n  return calculateResolution(positions, size);\n}\n\nfunction parseHydrogenJs(result)\n{\n    // fixme:\n    // this parsing often assumes there's >=2 elements\n\n    // this \"zero\" here is presumably an artefact of xml --> json representation\n    const instrumentElements = result.song.instrumentList[0].instrument;\n\n    // instruments\n    // [  { id, name } ]\n    const instrumentArray = Array.from(\n      instrumentElements,\n      function(element){\n        const instrumentComponent = element.instrumentComponent[0];\n        let inst = {\n          \"id\" : parseInt(element.id), \n          \"name\" : element.name[0],\n           \"volume\" : parseFloat(element.volume), \n           \"muted\" : element.isMuted[0] === \"true\",\n           \"gain\" : parseFloat(element.gain),\n           \"drumkit\" : element.drumkit[0]\n        };\n        if( \"layer\" in instrumentComponent )\n        {\n          inst[\"filename\"] = instrumentComponent.layer[0].filename[0];\n        }\n        return inst;\n      }\n    );\n\n    const patternElements = result.song.patternList[0].pattern;\n    // patterns\n    // [  { name, size, notes } ]\n    const patternArray = Array.from(\n      patternElements,\n      function(element){\n        const noteElements = element.noteList[0].note;\n        const patternSize = parseInt(element.size);\n        let notes = [];\n        if( noteElements )\n        {\n          // notes \n          // [ {position, instrument(id}]\n          notes = Array.from(\n            noteElements,\n            function(noteElement){\n              return {\"position\" : parseInt(noteElement.position), \"instrument\" : parseInt(noteElement.instrument)};\n            }\n          );\n\n          // hydrogen permits you to have notes that reach past the pattern size, \n          // they then get revealed when you extend the pattern, \n          // here's an easy point to get rid of them, we don't want them to factor into any calculations\n          notes = notes.filter( n => n.position < patternSize );\n        }\n        return {\n          \"size\" : patternSize, \n          \"name\" : element.name[0],\n          \"notes\" : notes\n        };\n      }\n    );\n\n    // transform pattern to a managable data\n    const patternsWithTracks = Array.from(\n      patternArray,\n      function(pattern)\n      { \n        const resolution = calculatePatternResolution(pattern, pattern.size);\n        let instrumentTracks = {};\n        for( const instrument of instrumentArray )\n        {\n          const relevantNotes = pattern.notes.filter( \n            note => (note.instrument === instrument.id)\n          );\n          const relevantHits = Array.from(\n            relevantNotes,\n            note => note.position\n          );\n          instrumentTracks[ instrument.id.toString() ] = track.fromPositions( relevantHits, pattern.size, resolution);\n        }\n        pattern.resolution = resolution;\n        pattern.instrumentTracks = instrumentTracks;\n        return pattern;\n      }\n    );\n\n    // todo: refactor into (at least one) separate function\n    if(result.song.virtualPatternList)\n    {\n      // so unfortunately, virtualPatternGroup represents a directional graph and we have to build\n      // the tree of dependencies for each node, we implement this in a very simplistic way\n      // let's build a mapping( name -> [ names ] ) and continue to resolve it\n      // until we're done\n      const virtualPatternGroups = result.song.virtualPatternList[0].pattern;    \n      if( virtualPatternGroups )\n      {\n        // each element looks like\n        //\n        // <pattern>\n        // <name>p2-a-djembe</name>\n        // <virtual>p2-a-bass</virtual>\n        // <virtual>p2-snare</virtual>\n        // </pattern>\n\n        let patternToRelated = {};\n\n        // record initial relations\n        for( const virtualGroup of Array.from(virtualPatternGroups) )\n        {\n          const rootPatternName = virtualGroup.name[0];\n          const relatedPatterns = Array.from(virtualGroup.virtual);\n          patternToRelated[rootPatternName] = new Set(relatedPatterns);\n        }\n\n        // expand connections until our object stops changing, brute-force\n        // this is a relatively large limit but is better than the potential of an infinite loop\n        // I think 3 layers would be pushing this feature\n        const MAX_ITERATIONS = 20;\n        for(let iteration = 0; iteration < MAX_ITERATIONS; ++iteration)\n        {\n          let expandedObject = {};\n          // we could do a check at the end of each loop, but it's easier to track object equality this way\n          let objectHasExpanded = false;\n          for(const [root, related] of Object.entries(patternToRelated))\n          {\n            let expandedNodeSet = new Set(related);\n            for( const node of expandedNodeSet )\n            {\n              if( node in patternToRelated )\n              {\n                // set union\n                expandedNodeSet = new Set([...expandedNodeSet, ...patternToRelated[node]]);\n              }\n            }\n            objectHasExpanded = objectHasExpanded || ( expandedNodeSet.size !== related.size );\n            expandedObject[ root ] = expandedNodeSet;\n\n          }\n          // exit if no change\n          if(!objectHasExpanded)\n          {\n            break;\n          }\n          // throw if we've failed to resolve all the connections by now, morelikely something has gone wrong\n          if( iteration === MAX_ITERATIONS )\n          {\n            throw new Error(\"Reached max virtual_pattern recursion depth.\");\n          }\n          // otherwise update mapping and continue\n          patternToRelated = expandedObject;\n        }\n\n        for( const [rootPatternName, relatedPatternSet] of Object.entries(patternToRelated) )\n        {\n          // could do filter, and assert on length?\n          let rootPattern = patternsWithTracks.find(p => p.name === rootPatternName);\n          for( const patternToMergeName of relatedPatternSet )\n          {\n            const patternToMerge = patternsWithTracks.find(p => p.name === patternToMergeName );\n            for( const [id, t] of Object.entries(patternToMerge.instrumentTracks) )\n            {\n              if( id in rootPattern.instrumentTracks )\n              {\n                const merged = rootPattern.instrumentTracks[ id ].aggregate( t );\n                // we match hydrogen's implementation here and discard values past the length of the original track\n                merged.rep.length = rootPattern.size  / merged.resolution;\n                rootPattern.instrumentTracks[ id ] = merged; \n              }\n              else\n              {\n                // ensure track is the appropriate length & res\n                let copiedTrack = t.format(rootPattern.resolution);\n                copiedTrack.length = rootPattern.size  / rootPattern.resolution;\n                rootPattern.instrumentTracks[id] = copiedTrack;\n              }\n            }\n          }\n          // reassess resolution and apply to all tracks\n          // this may not be necessary but it's probably nice\n          const resolution = calculatePatternResolution(rootPattern, rootPattern.size);\n          rootPattern.resolution = resolution;\n          for( const [id, track] of Object.entries(rootPattern.instrumentTracks) )\n          {\n            // ensure that \n            rootPattern[id] = track.format( resolution );\n          }\n        }\n\n      }\n    }\n\n\n    return {\n      \"instruments\" : instrumentArray,\n      \"patterns\" : patternsWithTracks\n    }\n}\n\nasync function parseHydrogenPromise(xmlString)\n{\n  let parser = new xml2js.Parser();\n\n  return parser.parseStringPromise(xmlString).then(parseHydrogenJs);\n}\n\nconst moduleExports = { parseHydrogenPromise };\n\nexport default moduleExports;","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\n\nfunction PlaybackControls(props)\n{\n  const tempoControlColumns = 4;\n\n  const onPlay = ()=>{ if(props.onPlay){ props.onPlay(); }; };\n  const onStop = ()=>{ if(props.onStop){ props.onStop(); }; };\n  const onSetTempo = (event, tempo)=>{ if(props.onTempoChange){ props.onTempoChange(tempo); } };\n\n  return (\n      <React.Fragment>\n        <div>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"play\"\n            onClick={onPlay}\n          >\n            <PlayArrowIcon />\n          </IconButton>\n          <IconButton\n            color=\"secondary\"\n            aria-label=\"stop\"\n            onClick={onStop}\n          >\n            <StopIcon />\n          </IconButton>\n        </div>\n\n        <Grid container>\n        <Grid item xs={(12 - tempoControlColumns) / 2} />\n        <Grid item xs={tempoControlColumns}>\n        <Slider\n          defaultValue={100}\n          min={60}\n          step={1}\n          max={180}\n          onChange={onSetTempo}\n          valueLabelDisplay=\"auto\"\n        />\n        </Grid>\n        <Grid item xs={(12 - tempoControlColumns ) / 2} />\n        </Grid>\n\n      </React.Fragment>\n   );\n};\n\nexport default PlaybackControls;","// History.js\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 300,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n\nfunction renderRow(props) {\n  return (\n    <ListItem button style={props.style} key={props.index} onClick={props.onClick}>\n      <ListItemText primary={props.name} secondary={new Date(props.date).toLocaleDateString()}/>\n    </ListItem>\n  );\n}\n\nconst demoData = [\n  {name: \"roudesann\", id: \"3b415c320894e531f4daa93711949e78c0aef281\", \"date\": Date.now()},\n  {name: \"groovy\", id: \"f23c52481af0c08f5037d820a0cf33e886061ffc\", \"date\": Date.now()},\n  {name: \"too_much\", id: \"e7db6989c558e201bceff225d796f0d6073047a9\", \"date\": Date.now()}\n];\n\nfunction History(props)\n{\n  const classes = useStyles();\n  const items = props.data ?? demoData;\n  return (\n    <div style={{maxHeight: 200, overflow: 'auto'}} className={classes.root}>\n      <div>Recently viewed</div>\n      <List>\n            {[...items.keys()].map ( x => renderRow({ \n              index : x, \n              name: items[x].name, \n              id: items[x].id, \n              date: items[x].date,\n              onClick: ()=>{if(props.onClick){props.onClick(items[x]);}}\n            }))}\n      </List>\n    </div>\n  );\n};\n\nexport default History;\n","import React from 'react';\nimport notation from \"./notation\"\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme)=>({\n  root: {\n    whiteSpace: \"pre\",\n    fontFamily: \"Roboto Mono\",\n    fontSize: '0.8rem',\n    '@media (min-width:800px)': {\n      fontSize: '1rem',\n    },\n  }\n});\nconst PreTypography = withStyles(styles)(Typography);\n\nclass Part extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const tracks = Object.values(this.props.tracks);\n    if(tracks.length === 0 )\n    {\n      return <React.Fragment />\n    }\n    const patternArray = notation.formatPatternString(\n      this.props.instrument,\n      this.props.tracks,\n      this.props.config.restMark\n    );\n    // don't support a multi-line pattern, that doesn't divide the beatResolution\n    // because it's a nightmare!\n    const patternResolution = tracks[0].resolution;\n    if( (this.props.config.lineResolution % this.props.config.beatResolution) !== 0\n        && ( patternArray.length * patternResolution > this.props.config.lineResolution ) )\n    {\n      throw new Error(\"This code only supports a beatResolution that divides the lineResolution\");\n    }\n    // this code has got very convoluted\n    const patternLines = notation.chunkArray(patternArray, this.props.config.lineResolution / patternResolution, 0);\n    const beatsPerLine = this.props.config.lineResolution / this.props.config.beatResolution;\n    const beatChunkSize = this.props.config.beatResolution / patternResolution;\n    const linesWithBeats = patternLines.map(\n      line => notation.chunkArray( line, beatChunkSize )\n    );\n    const lineIndices = [...patternLines.keys()];\n    const formatLine = (key, line, startBeat)=>{\n      const beats = [...line.keys()];\n      return (\n        <PreTypography key={\"pattern-line-\" + key}>\n          <PreTypography variant=\"subtitle1\" component=\"span\" key={\"line-start-\" + key}>{this.props.config.lineMark}</PreTypography>\n          {\n            beats.map( beat => <React.Fragment key={\"fragment-beat-\"+ (beat + startBeat).toString()}>\n              <PreTypography variant=\"subtitle1\" component=\"span\" key={\"span-beat-\" + (beat + startBeat).toString()} className={(beat + startBeat) === this.props.activeNote ? \"activeNote\" : \"\"}>{line[beat].join(\"\")}</PreTypography>\n              <PreTypography variant=\"subtitle1\" component=\"span\" key={\"span-beat-marker-\" + (beat + startBeat).toString()}>{(this.props.config.showBeatMark && beat !== beats[beats.length-1]) ? this.props.config.beatMark : \"\"}</PreTypography>\n            </React.Fragment>\n            )\n          }\n          <PreTypography variant=\"subtitle1\" component=\"span\" key={\"line-end-\" + key}>{this.props.config.lineMark}</PreTypography>\n        </PreTypography>\n      );\n    };\n\n    const numberLine = notation.createNumberMarker(\n      this.props.config.numberRestMark,\n      this.props.config.beatResolution,\n      patternResolution,\n      Math.min( this.props.config.lineResolution, patternLines[0].length * patternResolution )\n    );\n    const beatChunks = notation.chunkArray(\n      numberLine,\n      this.props.config.beatResolution / patternResolution\n    );\n    return (\n      <React.Fragment>\n        {this.props.config.showBeatNumbers ? formatLine(\"beat\", beatChunks, 0) : \"\" }\n        {lineIndices.map(lineIndex=>formatLine(lineIndex.toString(), linesWithBeats[lineIndex], beatsPerLine * lineIndex))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(Part);","import React from 'react';\nimport Part from \"./Part\";\n\nfunction getTitleType(headingLevel, defaultLevel)\n{\n    const validHeadingLevels = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    const safeHeading = headingLevel ? headingLevel.toLowerCase() : '';\n    const Title = validHeadingLevels.includes(safeHeading) ? safeHeading : defaultLevel;\n    return Title;\n}\n\nclass PartWithTitle extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const Title = getTitleType(this.props.headingLevel, \"h4\");\n    return (\n      <article>\n        <Title>{this.props.instrumentName}</Title>\n        <Part \n          instrument={this.props.instrument}\n          tracks={this.props.tracks}\n          config={this.props.config}\n          activeNote={this.props.activeNote}\n        />\n      </article>\n    );\n  }\n}\n\nexport default PartWithTitle;","import React from 'react';\nimport PartWithTitle from \"./PartWithTitle\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    \"margin-bottom\": theme.spacing(2),\n    fontFamily: \"Roboto Mono\",\n    textAlign: \"left\",\n    whiteSpace:\"pre\",\n    \"& .activeNote\": {\n      color : theme.palette.primary.main\n    },\n    \"margin\": \"auto\"\n  },\n});\n\nclass Pattern extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      patternTime : undefined\n    };\n  }\n\n  onPatternTimeChange(patternTime)\n  {\n    if( patternTime !== null && patternTime !== undefined )\n    {\n      this.setState({patternTime : patternTime});\n    }\n    else\n    {\n      this.setState({patternTime : undefined });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const instrumentIndices = [...this.props.instruments.keys()];\n    const beatResolution = this.props.config.beatResolution;\n    return (\n      <div className={classes.root} >\n        <div style={{\"margin\": \"auto\"}}>\n        { instrumentIndices.map( \n            (instrumentIndex) => ( <PartWithTitle \n              key={\"part-\" + instrumentIndex.toString()}\n              instrumentName={this.props.instruments[instrumentIndex][0]}\n              instrument={this.props.instruments[instrumentIndex][1]}\n              tracks={this.props.tracks}\n              config={this.props.config}\n              activeNote={this.state.patternTime !== undefined ? Math.floor(this.state.patternTime / beatResolution) : undefined}\n            /> )\n          )\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Pattern);","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport App from \"./App\";\n\n\nexport default function Routes() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/song/:song\">\n            <App/>\n          </Route>\n          <Route path=\"/\">\n            <App/>\n          </Route>\n        </Switch>\n    </Router>\n  )\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nclass notation\n{\n\n  static DEFAULT_FORMAT_CONFIG = {\n    \"restMark\" : \"-\",\n    \"beatMark\" : \"|\",\n    \"lineMark\" : \"|\",\n    \"numberRestMark\" : \"-\",\n    \"beatResolution\" : 48,\n    \"showBeatMark\" : true,\n    \"showBeatNumbers\" : true,\n    // lineResolution is typically determined on a per-pattern basis\n    // however it used to be in here, and some tests still rely on this\n    \"lineResolution\" : 48 * 8\n  };\n\n  static FORMAT_CONFIG_STRINGS = [\n    [\"restMark\",[\"-\", \".\", \" \"]],\n    [\"numberRestMark\",[\"-\", \".\", \" \"]]\n  ];\n\n  static FORMAT_CONFIG_BOOLS = [\n    \"showBeatMark\",\n    \"showBeatNumbers\"\n  ];\n\n  static validateConfig(config, patternResolution) {\n    if( patternResolution != null && ( config.beatResolution % patternResolution ) !== 0 )\n    {\n      throw new Error(\"patternResolution doesn't divide beatResolution\");\n    }\n    if( config.lineResolution <= 0 )\n    {\n      throw new Error(\"config.lineResolution must be greater than zero\");\n    }\n  }\n\n  static resolveConfig(formatConfig)\n  {\n    for( const propName of Object.keys(formatConfig))\n    {\n      if(!notation.DEFAULT_FORMAT_CONFIG.hasOwnProperty(propName))\n      {\n        throw new Error(\"passed unrecognised property \" + propName);\n      }\n    }\n\n    return Object.assign( Object.assign({}, notation.DEFAULT_FORMAT_CONFIG), formatConfig );\n  }\n\n  static chunkString(str, chunkSize) {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    return str.match(new RegExp('.{1,' + chunkSize + '}', 'g'));\n  }\n\n  static chunkArray(a, chunkSize)\n  {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    let chunks = [];\n    for( let i = 0; i < a.length; i += chunkSize )\n    {\n      chunks.push( a.slice(i, Math.min( i + chunkSize, a.length) ) );\n    }\n    return chunks;\n  }\n\n  static createNumberMarker(numberRestMark, beatResolution, patternResolution, lineLength)\n  {\n    if( lineLength <= 0 )\n    {\n      throw new Error(\"lineLength <= 0\");\n    }\n\n    if( ( beatResolution % patternResolution ) !== 0)\n    {\n      throw new Error(\"patternResolution \" + patternResolution.toString() + \" does not divide beatResolution \" + beatResolution.toString());\n    }\n\n    let beatCount = Math.ceil(lineLength / beatResolution);\n    let numberMarkerArray = Array.from( Array(lineLength / patternResolution), e => numberRestMark );\n\n    for( let beat = 0; beat < beatCount; beat++ )\n    {\n      numberMarkerArray[ beat * ( beatResolution / patternResolution ) ] = ( (beat+1) % 10 ).toString();\n    }\n    return numberMarkerArray;\n  }\n\n  static formatLineWithMarkers(config, line, patternResolution, asHTML)\n  {\n    notation.validateConfig(config);\n\n    const beatChunkSize = config.beatResolution / patternResolution;\n\n    const padZero = (n, width) => {\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    };\n    const formatSymbolAsSpans = (symbol, numericPosition) => {\n      return \"<span class='note-\" + padZero(numericPosition, 4) + \"'>\" +  symbol + \"</span>\";\n    };\n\n    const formatSymbol = asHTML ? formatSymbolAsSpans : (symbol, numericPosition) => symbol;\n\n    let formattedLine = \"\";\n    for( let index = 0; index < line.length; ++ index )\n    {\n      const numericPosition = patternResolution * index;\n      formattedLine += formatSymbol(line.charAt(index), numericPosition);\n    }\n\n\n    const lineWithBeats = config.showBeatMark ? notation.chunkString(formattedLine, beatChunkSize * formatSymbol(\"X\", 0).length).join(config.beatMark) : formattedLine;\n    // note: we choose to always show the lineMarker even if it doesn't match the line resolution\n    return config.lineMark + lineWithBeats + config.lineMark;\n  }\n\n  static defaultLineResolution(\n    trackDict,\n    beatResolution\n  )\n  {\n    const instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return 48 * 8;\n    }\n    const trackLength = instrumentTracks[0].length();\n    const beatCount = trackLength / beatResolution;\n    if( beatCount <= 12 )\n    {\n      return trackLength;\n    }\n    else if( beatCount > 32 )\n    {\n      return 48 * 16; // let's just be laazeee\n    }\n    else\n    {\n      // let's just apply a simple mapping, rather than think through logics\n      const mapping = [\n        trackLength, // 13 \n        trackLength / 2, // 14\n        trackLength / 3, // 15\n        trackLength / 2, // 16\n        trackLength, // 17\n        trackLength / 3, // 18\n        trackLength, // 19\n        trackLength / 4, // 20\n        trackLength / 3, // 21\n        trackLength / 2, // 22\n        trackLength, // 23\n        trackLength / 3, // 24\n        trackLength / 5, // 25\n        trackLength, // 26\n        trackLength / 3, // 27\n        trackLength / 4, // 28\n        trackLength, // 29\n        trackLength / 6, // 30\n        trackLength, // 31\n        trackLength / 4, // 32\n      ];\n      return mapping[ beatCount - 13 ];\n    }\n  }\n\n  static guessPerPatternSettings(\n    trackDict\n  )\n  {\n    return {\n      \"lineResolution\" : notation.defaultLineResolution(trackDict, 48), // beatResolution (default)\n      \"beatResolution\" : 48 // should cover all the cases hopefully\n    };\n  }\n\n  static formatPatternString(\n    instrument,\n    trackDict,\n    restMark\n  )\n  {\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    const patternSize = instrumentTracks[0].length();\n    const patternResolution = instrumentTracks[0].resolution;\n    const notationLength = patternSize / patternResolution;\n\n    let patternArray = Array(notationLength).fill(restMark);\n    for( let charIndex = 0; charIndex < patternArray.length; ++charIndex)\n    {\n      // todo: handle collisions\n      for( const [trackID, trackSymbol] of Object.entries(instrument) )\n      {\n        const trackInstance = trackDict[trackID];\n        if( trackInstance != null && trackInstance.rep[charIndex] === 1 )\n        {\n          patternArray[charIndex] = trackSymbol;\n        }\n      }\n    }\n    return patternArray;\n  }\n\n  static fromInstrumentAndTrack(\n    instrument,\n    trackDict,\n    asHTML,\n    formatConfig = {}\n  )\n  {\n    const config = notation.resolveConfig(formatConfig);\n\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    // turn the tracks, into one char string\n    const patternArray = notation.formatPatternString( instrument, trackDict, config.restMark );\n    const patternString = patternArray.join(\"\");\n    const patternResolution = instrumentTracks[0].resolution;\n    const patternSize = instrumentTracks[0].length();\n\n    // handle lines and beatMarkers\n    let lineArray = notation.chunkString( patternString, config.lineResolution / patternResolution );\n\n    let formattedLineArray = [];\n    // add numbers on the first line\n    if( config.showBeatNumbers )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( \n        config, \n        notation.createNumberMarker(config.numberRestMark, config.beatResolution, patternResolution, Math.min(config.lineResolution, patternSize)).join(\"\"),\n        patternResolution,\n        asHTML\n      ) );\n    }\n    for( let i = 0; i < lineArray.length; ++i )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( config, lineArray[i], patternResolution, asHTML ) );\n    }\n\n    return formattedLineArray.join(\"\\n\");\n  }\n};\n\nexport default notation;","const DEFAULT_INSTRUMENT_SYMBOLS = {\n  \"Djembe Slap\" : \"S\",\n  \"Djembe Tone\" : \"t\",\n  \"Djembe Bass\" : \"O\",\n  \"Snare Ghost\" : \"x\",\n  \"Snare Accent\" : \"X\",\n  \"Shaker Ghost\" : \"x\",\n  \"Shaker Accent\" : \"X\",\n  \"Click\" : \"X\",\n  \"Bass\" : \"O\",\n  \"Tom\" : \"O\",\n  \"Default\" : \"X\"\n};\n\nfunction normalizeInstrumentsForFiguring(instruments)\n{\n  let n = [];\n  for(const inst of instruments)\n  {\n    let nInst = Object.assign({}, inst);\n    // for some reason these instruments are one-size arrays, and one id ... the track id from hydrogen\n    // this should be fixed, this doesn't make sense\n    nInst.name = nInst.name.toLowerCase();\n    n.push( nInst );\n  }\n  return n;\n}\n\nfunction figureDjembes(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const djembeTracks = instruments.filter( (inst) => inst.name.includes(\"djembe\") );\n  if(djembeTracks.length === 0)\n  {\n    return [];\n  }\n  else if(djembeTracks.length <= 3)\n  {\n    // let's lazily assume we have a slap, tone, bass\n    const slapArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"slap\") );\n    const toneArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"tone\") );\n    const bassArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"bass\") );\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      let parityCheck = slapArray[i] + toneArray[i] + bassArray[i];\n      // failed to figure out how djembes work return empty array\n      if(parityCheck !== 1)\n      {\n        return [];\n      }\n    }\n    let djembeMapping = {};\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      if( slapArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Slap\"];\n      }\n      else if( toneArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Tone\"];\n      }\n      else if( bassArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Bass\"];\n      }\n    }\n    return [ [ \"Djembe\", djembeMapping ] ];\n  }\n  else\n  {\n    // TODO: support more than one djembe\n    return []\n  }\n}\n\n// used by snare/shaker\nfunction manageAccentOrGhost(instrumentTracks, instrumentName, accentSymbol, ghostSymbol)\n{\n  let outputInstruments = [];\n  if(instrumentTracks.length === 2)\n  {\n    const t0 = instrumentTracks[0];\n    const t1 = instrumentTracks[1];\n    // attempt to determine ghost/accent\n    const zeroLouder = t0.volume > t1.volume || (t0.volume === t1.volume && t0.gain > t1.gain);\n    let mapping = {};\n    mapping[ t0.id.toString() ] = zeroLouder ? accentSymbol : ghostSymbol;\n    mapping[ t1.id.toString() ] = zeroLouder ? ghostSymbol : accentSymbol;\n    outputInstruments.push([instrumentName, mapping] );  \n  }\n  else // if 1 it must be an accent, if >= 3 ... I don't want to try and assign ghosts/accents\n  {\n    // I don't want to support ghost/accent here right now\n    for( const track of instrumentTracks )\n    {\n      let mapping = {};\n      mapping[ track.id.toString() ] = accentSymbol;\n      outputInstruments.push([instrumentName, mapping] );  \n    }\n  }\n  return outputInstruments;\n\n}\n\nfunction figureShakers(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  // todo: support common alternative shakers? Tambourine?\n  const shakerTracks = instruments.filter( (inst) => ( inst.name.includes(\"shaker\") ) );\n  return manageAccentOrGhost( \n    shakerTracks, \n    \"Shaker\", \n    symbolConfig[\"Shaker Accent\"],\n    symbolConfig[\"Shaker Ghost\"]\n  );\n}\n\nfunction figureSnares(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const snareTracks = instruments.filter( (inst) => ( inst.name.includes(\"snare\") ) );\n  // todo: we currently assume 2 snares is accent/ghost ... but I think it's relatively\n  // common to be 2 snare parts too, I think the algorithm here is check patterns to\n  // see if they overlap ... if the \"ghosts\" overlap the \"hits\" sometimes, assume 2 parts\n  return manageAccentOrGhost( \n    snareTracks, \n    \"Snare\", \n    symbolConfig[\"Snare Accent\"],\n    symbolConfig[\"Snare Ghost\"]\n  );\n}\n\n\nfunction activeInstruments(patterns)\n{\n  let nonTrivialInstruments = new Set();\n  for( const p of patterns )\n  {\n    for(const [instrumentID, part] of Object.entries(p.instrumentTracks))\n    {\n      if( !part.empty() )\n      {\n        nonTrivialInstruments.add(parseInt(instrumentID));\n      }\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction activeInstrumentation(instrumentIndex, patterns)\n{\n  const active = activeInstruments(patterns);\n  let nonTrivialInstruments = [];\n  for( const inst of instrumentIndex)\n  {\n    if( active.has(inst.id) )\n    {\n      nonTrivialInstruments.push( inst );\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction figureClickyInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const worthwhileInstruments = activeInstruments(patterns);\n  const relevantTracks = instruments.filter( (inst) => ( worthwhileInstruments.has(inst.id) &&\n    !inst.name.includes(\"djembe\") &&\n    ( inst.name.includes(\"click\") || \n    inst.name.includes(\"stick\") || \n    inst.name.includes(\"tom\") || \n    inst.name.includes(\"bass\") ||\n    inst.name.includes(\"kick\") )\n  ) );\n\n  const trackIsClick = Array.from(\n    relevantTracks,\n    (t) => t.name.includes(\"click\") || t.name.includes(\"stick\")\n  );\n  // we prioritise the early tracks\n  // and hope for the best\n\n  let tomIndex = 1;\n  let bassIndex = 1;\n  let collated = [];\n  for( let candidate = 0; candidate < Math.floor(relevantTracks.length/2); ++candidate )\n  {\n    if( trackIsClick[candidate*2] !== trackIsClick[candidate*2+1] )\n    {\n      const clickTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2] : relevantTracks[candidate*2+1];\n      const hitTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2+1] : relevantTracks[candidate*2];\n      const instrumentIsTom = hitTrack.name.includes(\"tom\");\n      let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n      let instrumentName = \"\"\n      if( instrumentIsTom )\n      {\n        instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n        tomIndex = tomIndex + 1;\n      }\n      else\n      {\n        instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n        bassIndex = bassIndex + 1;\n      }\n      let mapping = {};\n      mapping[hitTrack.id.toString()] = symbolConfig[rawInstrumentName];\n      mapping[clickTrack.id.toString()] = symbolConfig[\"Click\"];\n      collated.push([instrumentName, mapping] );  \n    }\n  }\n\n  // If there's a remainder instrument and there's no click\n  if( ((relevantTracks.length % 2 ) !== 0) && !trackIsClick[ relevantTracks.length - 1 ] )\n  {\n    const lastTrack = relevantTracks[relevantTracks.length - 1];\n    const instrumentIsTom = lastTrack.name.includes(\"tom\");\n    let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n    let instrumentName = \"\"\n    if( instrumentIsTom )\n    {\n      instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n      tomIndex = tomIndex + 1;\n    }\n    else\n    {\n      instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n      bassIndex = bassIndex + 1;\n    }\n    let mapping = {};\n    mapping[lastTrack.id.toString()] = symbolConfig[rawInstrumentName];\n    collated.push([instrumentName, mapping] );  \n  }\n  return collated;\n}\n\nfunction defaultSymbolForSingleInstrument(symbolConfig, name)\n{\n  // we expect these keys\n  /*\n    \"Djembe Slap\" : \"S\",\n    \"Djembe Tone\" : \"t\",\n    \"Djembe Bass\" : \"O\",\n    \"Snare Ghost\" : \"-\",\n    \"Snare Accent\" : \"X\",\n    \"Shaker Ghost\" : \"x\",\n    \"Shaker Accent\" : \"X\",\n    \"Click\" : \"X\",\n    \"Bass\" : \"O\",\n    \"Tom\" : \"O\",\n    \"Default\" : \"X\"\n  */\n  const lowerName = name.toLowerCase();\n  if( lowerName.includes(\"click\") || lowerName.includes(\"stick\") )\n  {\n    return symbolConfig[\"Click\"];\n  }  \n  else if( lowerName.includes(\"bass\") || lowerName.includes(\"kick\") )\n  {\n    return symbolConfig[\"Bass\"]\n  }\n  else if( lowerName.includes(\"snare\") )\n  {\n    return symbolConfig[\"Snare Accent\"];\n  }\n  else if( lowerName.includes(\"shaker\") )\n  {\n    return symbolConfig[\"Shaker\"];\n  }\n  else if( lowerName.includes(\"tom\") )\n  {\n    return symbolConfig[\"Tom\"];\n  }\n  else if( lowerName.includes(\"djembe\") )\n  {\n    if( lowerName.includes(\"slap\") )\n    {\n      return symbolConfig[\"Djembe Slap\"];\n    }\n    else if( lowerName.includes(\"tone\") )\n    {\n      return symbolConfig[\"Djembe Tone\"];\n    }\n    else\n    {\n      return symbolConfig[\"Djembe Bass\"];\n    }\n  }\n  return symbolConfig[\"Default\"];\n}\n\nfunction figureInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  let output = [];\n  output = output.concat( figureClickyInstruments( instrumentsRaw, symbolConfig, patterns ) );\n  output = output.concat( figureDjembes( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureSnares( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureShakers( instrumentsRaw, symbolConfig ) );\n\n  // we ignore track used by multiple instruments\n\n  // but attempt to cover \"instrument not recognised anywhere\"\n\n  const worthwhileInstruments = activeInstruments(patterns);\n\n  for(const inst of instrumentsRaw)\n  {\n    if( !worthwhileInstruments.has(inst.id) )\n    {\n      continue;\n    }\n    let instrumentUsed = false;\n    for( const op of output)\n    {\n      if( inst.id.toString() in op[1] ) \n      {\n        instrumentUsed = true;\n      }\n    }\n    if(instrumentUsed === false)\n    {\n      let mapping = {};\n      mapping[ inst.id.toString() ] = defaultSymbolForSingleInstrument( symbolConfig, inst.name );\n      output.push( [inst.name, mapping] );\n    }\n  }\n  \n  return output; \n}\n\nexport { activeInstrumentation, DEFAULT_INSTRUMENT_SYMBOLS, figureClickyInstruments, figureDjembes, figureShakers, figureSnares, figureInstruments };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Grid from '@material-ui/core/Grid';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport ClickNHold from 'react-click-n-hold';\nimport Slider from '@material-ui/core/Slider';\n\nimport {isMobile} from \"./Mobile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nconst ThinFormControlLabel = withStyles({\n  root: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n})(FormControlLabel);\n\nconst InlinableIconButton = withStyles({\n  root: {\n    padding: 2\n  }\n})(IconButton);\n\nconst NoDividerCenterTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: \"none\",\n    textAlign: \"center\",\n    paddingBottom: theme.spacing(0) // make instrument titles bunch up with their controls a little more\n  }\n}))(TableCell);\n\nconst CenterTableCell = withStyles((theme) => ({\n  root: {\n    textAlign: \"center\"\n  }\n}))(TableCell);\n\nfunction VolumeWidget(props)\n{\n  const [active, setActive] = React.useState(false);\n  const [sliderValue, setSliderValue] = React.useState(100);\n  const [muted, setMuted] = React.useState(props.muted);\n  const sliderRef = React.useRef(null);\n  const height = props.height ? props.height / 3 : 24;\n  const FixedHeightStylings = {\n    height: 3*height,\n    position: \"absolute\",\n    top: -height\n  };\n  const SliderStyles = Object.assign(active? {} : {\"visibility\": \"hidden\", paddingLeft: \"0px\"}, FixedHeightStylings);\n  const IconStyles = active ?  {\"visibility\":\"hidden\"} : {};\n\n  // currently: updating based on the normal volume event isn't nearly performant enough \n  // (because the app's state update is really sluggish)\n  // potential fixes - seperate the audio and the visual state and/or create smaller state objects\n  const setVolume = (event, value) =>\n  {\n    setSliderValue(value);\n    if( props.onChange )\n    {\n      props.onChange( value );\n    }\n  };\n\n  // for mobile\n  // we click'n'hold which opens the volume slider, but don't propagate focus\n  \n  // for desktop/tablet\n  // we click'n'hold and propagate focus to the slider, so that our drag \n  // will pull the slider up and down\n  const mobile = isMobile();\n\n  const holdDesktop = (start, event)=>{\n    if(!active){ setActive(true); }\n    if(sliderRef){ sliderRef.current.dispatchEvent(event.nativeEvent);}\n  };\n\n  const holdMobile= (start, event)=>{\n    if(!active){ setActive(true); }\n  };\n\n  const holdEndDesktop = (e)=>{\n    setActive(false);\n  };\n\n  const commitVolume = (event,value)=>\n  {\n    if( mobile ){ setActive(false); }\n    setVolume(event,value);\n  };\n\n  const onMuteChange = () =>\n  {\n    setMuted(!muted);\n    props.onMuteEvent(!muted);\n  };\n\n  return (\n    <ClickNHold\n      time={0.5} // Time to keep pressing. Default is 2\n      onClickNHold={mobile ? holdMobile : holdDesktop}\n      onEnd={mobile ? null : holdEndDesktop} >\n      <InlinableIconButton disableRipple disableFocusRipple onClick={onMuteChange} >\n        <div style={SliderStyles}>\n          <Slider\n            defaultValue={100}\n            orientation=\"vertical\"\n            aria-labelledby=\"vertical-slider\"\n            onChange={commitVolume}\n            ref={sliderRef}\n          />\n        </div>\n        <div style={IconStyles}>\n          { muted ?  <VolumeOffIcon fontSize=\"small\" />\n          : sliderValue < 10 ? <VolumeMuteIcon fontSize=\"small\" />\n          : sliderValue < 50 ? <VolumeDownIcon fontSize=\"small\" />\n                             : <VolumeUpIcon fontSize=\"small\"/> }\n        </div>\n      </InlinableIconButton>\n    </ClickNHold>\n  );\n}\n\nclass RawInstrumentEditDialog extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSymbol : null\n    };\n  }\n\n  render() {\n\n    const cancel = (e) => {\n      this.setState({\"currentSymbol\" : null});\n      if(this.props.onCancel){\n        this.props.onCancel();\n      }\n    };\n\n    const confirm = (e) => {\n      if(this.state.currentSymbol !== null && this.state.currentSymbol.length === 1)\n      {\n        if(this.props.onChange){\n          this.props.onChange(this.state.currentSymbol);\n        }\n      }\n      else\n      {\n        // todo: prettier error communication?\n        alert(\n          \"You selected an invalid symbol \\\"\" + this.state.currentSymbol + \"\\\".\\n\" +\n          \"Symbols must be precisely 1 character.\"\n        );\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter notation symbol\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentSymbol ?? this.props.value}\n            onChange={(e)=>{this.setState({currentSymbol: e.target.value});}}\n            onKeyDown={handleEnter}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nclass InstrumentRenameDialog extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      currentName : null\n    };\n  }\n\n  render()\n  {\n\n    const cancel = () => {\n      if(this.props.onCancel)\n      {\n        this.props.onCancel();\n      }\n      this.setState({currentName: null});\n    };\n\n    const confirm = () => {\n      if(this.state.currentName !== null)\n      {\n        const instrumentName = this.state.currentName.trim();\n        if( instrumentName.length > 0 )\n        {\n          if(this.props.onChange)\n          {\n            this.props.onChange(this.state.currentName);\n          }\n          this.setState({currentName: null});\n        }\n        else\n        {\n          // todo: prettier error communication?\n          alert(\n            \"You selected an invalid instrument name \\\"\" + this.state.currentName + \"\\\".\\n\" +\n            \"Must be non-empty.\"\n          );\n        }\n      }\n      else\n      {\n        cancel();\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter instrument name\n          </DialogContentText>\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentName ?? this.props.value}\n            onChange={(e)=>{this.setState({currentName: e.target.value});}}\n            onKeyDown={handleEnter}\n            autoFocus\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n};\n\nfunction InstrumentTable(props)\n{\n  const classes = useStyles();\n\n  const editRow = (y)=>{ if( props.onEditRow ){ props.onEditRow(y); }};\n  const editColumn = (x)=>{ if( props.onEditColumn ){ props.onEditColumn(x); }};\n  const addRow = ()=>{ if( props.onAddRow ){ props.onAddRow(); }};\n  const removeRow = (y)=>{ if( props.onRemoveRow ){ props.onRemoveRow(y); }};\n\n  const handleChange = (x,y, event) => {\n    const instrumentID = props.instrumentIndex[x].id;\n    const oldInstrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const dstInstrumentIndex = y;\n    if( oldInstrumentIndex === dstInstrumentIndex )\n    {\n      return;\n    }\n    const oldInstrument = props.instruments[oldInstrumentIndex];\n    let replacedSrcInstrument = [\n      \"\",\n      {}\n    ];\n    if( oldInstrument != null )\n    {\n      replacedSrcInstrument[0] = oldInstrument[0];\n      for( const key of Object.keys(oldInstrument[1]) )\n      {\n        if( key !== instrumentID.toString() )\n        {\n          replacedSrcInstrument[1][key] = oldInstrument[1][key];\n        }\n      }\n    }\n    let dstInstrument = [\n      props.instruments[dstInstrumentIndex][0],\n      Object.assign({}, props.instruments[dstInstrumentIndex][1] )\n    ];\n    if(oldInstrument != null )\n    {\n      dstInstrument[1][instrumentID.toString()] = oldInstrument[1][instrumentID];\n    }\n    else\n    {\n      dstInstrument[1][instrumentID.toString()] = \"X\";\n    }\n\n    let replacedInstruments = [];\n\n    for(let instrumentIndex = 0; instrumentIndex < props.instruments.length; ++instrumentIndex)\n    {\n      if( instrumentIndex === oldInstrumentIndex )\n      {\n        replacedInstruments.push( replacedSrcInstrument );\n      }\n      else if( instrumentIndex === dstInstrumentIndex )\n      {\n        replacedInstruments.push( dstInstrument )\n      }\n      else\n      {\n        replacedInstruments.push( props.instruments[instrumentIndex] );\n      }\n    }\n    props.onChange(replacedInstruments);\n  };\n\n  const createCell = (x,y) =>\n  {\n      return ( \n        <TableCell\n          align=\"center\"\n          key={\"instrumentPanel-cell-\" + y.toString() + \"-\" + x.toString()}\n        >\n        <ThinFormControlLabel\n          control={<Checkbox checked={props.instrumentMask[x] === y} onChange={(e) =>{handleChange(x,y,e);}} name={x + \",\" + y.toString()} />}\n        />\n        </TableCell>\n      );\n  }\n\n  const createMatchingRow = (y) =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-\" + y.toString()}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-\" + y.toString() + \"-name\"}> \n          <Typography>{props.instruments[y][0]}</Typography>\n          <InlinableIconButton onClick={(e)=>{editRow(y);}}><EditIcon fontSize=\"small\"/></InlinableIconButton>\n          <InlinableIconButton onClick={(e)=>{removeRow(y);}}><ClearIcon fontSize=\"small\"/></InlinableIconButton>\n        </TableCell>\n        {[...Array(props.instrumentMask.length).keys()].map(x=>createCell(x,y))}\n      </TableRow>\n    );\n  };\n\n  const createEditRow = () =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-edit\"}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-edit-cell\"}>\n          <IconButton onClick={(e)=>{addRow();}} aria-label=\"add\">\n            <AddBoxIcon/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  return (\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow key={\"instrumentPanel-row-header\"}>\n          <NoDividerCenterTableCell key={\"instrumentPanel-row-instrument\"}> Instrument </NoDividerCenterTableCell>\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <NoDividerCenterTableCell key={\"instrumentPanel-row-header-cell-\" + x.toString()}>\n                <Typography>{props.instrumentIndex[x].name}</Typography>\n              </NoDividerCenterTableCell>)}\n        </TableRow>\n        <TableRow key={\"instrumentPanel-row-controls\"}>\n          <TableCell key={\"instrumentPanel-row-instrument\"}></TableCell>\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <CenterTableCell key={\"instrumentPanel-row-controls-cell-\" + x.toString()}>\n                <Grid container>\n                <Grid item xs={6}>\n                <InlinableIconButton onClick={(e)=>{editColumn(x);}}>\n                  <EditIcon fontSize=\"small\"/>\n                </InlinableIconButton>\n                </Grid>\n                <Grid item xs={6}>\n                  <VolumeWidget\n                    muted={props.instrumentIndex[x].muted}\n                    onChange={(value)=>{props.onVolumeEvent( {instrument: x, volume: value / 100.0}); }}\n                    onMuteEvent={(muted)=>{props.onVolumeEvent( {instrument: x, muted: muted})}}\n                    />\n                </Grid>\n                </Grid>\n              </CenterTableCell>)}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {[...Array(props.instruments.length).keys()].map(y=>createMatchingRow(y))}\n        {createEditRow()}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction InstrumentConfig(props) {\n  const [editingSymbol, setEditingSymbol] = React.useState(null);\n  const [renamingInstrument, setRenamingInstrument] = React.useState(null);\n\n  const removeInstrument = (y) =>\n  {\n    let replacedInstruments = props.instruments.slice(0,y).concat(props.instruments.slice(y+1));\n    props.onChange(replacedInstruments);\n  };\n\n  const getSymbol = (x) => {\n    const instrumentID = props.instrumentIndex[editingSymbol].id;\n    const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    return props.instruments[instrumentIndex][1][instrumentID];\n  };\n\n  const endEditingSymbol = (resolvedSymbol) =>\n  {\n    if(resolvedSymbol !== null)\n    {\n      const instrumentID = props.instrumentIndex[editingSymbol].id;\n      const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n      let replacedInstruments = Array.from(props.instruments);\n      replacedInstruments[instrumentIndex][1][instrumentID] = resolvedSymbol;\n      props.onChange(replacedInstruments);\n    }\n    setEditingSymbol( null );\n  };\n\n  const getName = (y) => {\n    return y < props.instruments.length ? props.instruments[y][0] : \"\";\n  };\n\n  const renameInstrument = (instrumentName)  =>\n  {\n    // this function also deals with the addition of new instruments\n    if( renamingInstrument === props.instruments.length )\n    {\n      const extraInstrument = [ instrumentName, {} ];\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments.push(extraInstrument);\n      props.onChange(replacedInstruments);\n    }\n    else\n    {\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments[renamingInstrument][0] = instrumentName;\n      props.onChange(replacedInstruments);\n    }\n    setRenamingInstrument(null);\n  };\n\n  const containerStyle = {\n    \"border\": \"2px solid rgba(255, 255, 255, 0.5)\",\n    \"outline\": \"none\",\n    \"borderRadius\": \"8px\"\n  };\n  return (\n    <div style={{\"paddingBottom\" : \"5px\"}}>\n      <InstrumentRenameDialog\n        open={renamingInstrument !== null}\n        onCancel={()=>{setRenamingInstrument(null);}}\n        onChange={(s)=>{renameInstrument(s);}}\n        value={renamingInstrument !== null ? getName(renamingInstrument) : \"\"}\n      />\n      <RawInstrumentEditDialog\n        open={editingSymbol !== null}\n        onCancel={()=>{endEditingSymbol(null);}}\n        onChange={(s)=>{endEditingSymbol(s);}}\n        value={editingSymbol !== null ? getSymbol(editingSymbol) : \"\"}\n        />\n      <TableContainer style={containerStyle}>\n        <InstrumentTable\n          instrumentIndex={props.instrumentIndex}\n          instrumentMask={props.instrumentMask}\n          instruments={props.instruments}\n          onEditColumn={(x)=>{setEditingSymbol(x);}}\n          onEditRow={(y)=>{setRenamingInstrument(y);}}\n          onAddRow={()=>{setRenamingInstrument(props.instruments.length)}}\n          onRemoveRow={(y)=>{removeInstrument(y);}}\n          onVolumeEvent={props.onVolumeEvent}\n          onChange={props.onChange}\n        />\n      </TableContainer>\n    </div>\n  );\n}\n\nfunction createInstrumentMask(instrumentIndex, instruments)\n{\n  let instrumentMask = Array(instrumentIndex.length);\n  for( let baseInstrumentIndex = 0; baseInstrumentIndex < instrumentIndex.length; ++baseInstrumentIndex )\n  {\n    const baseInstrumentId = instrumentIndex[baseInstrumentIndex].id;\n    for( let targetInstrumentIndex = 0; targetInstrumentIndex < instruments.length; ++targetInstrumentIndex)\n    {\n      const target = instruments[targetInstrumentIndex];\n      if(baseInstrumentId.toString() in target[1])\n      {\n        instrumentMask[baseInstrumentIndex] = targetInstrumentIndex;\n      }\n    }\n  }\n  return instrumentMask;\n}\n\nexport { createInstrumentMask, InstrumentConfig };"],"sourceRoot":""}
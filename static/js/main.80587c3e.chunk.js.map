{"version":3,"sources":["formatSettings.js","PatternDrawer.js","SettingsDrawer.js","FileImport.js","History.js","TitledDialog.js","TitleScreen.js","instrumentation.js","utilities.js","track.js","SongLoaders.js","Part.js","PartWithTitle.js","Pattern.js","PlaybackControls.js","instrumentConfig.js","Audio.js","ToneController.js","SharingDialog.js","SongView.js","h2.js","LazySongViews.js","Routes.js","serviceWorker.js","index.js","notation.js","SongStorage.js","Mobile.js","TabitBar.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","camelToReadable","s","spacedString","replace","toUpperCase","slice","FormatSettings","props","classes","tokenStateToItem","value","tokenItemToState","handleOptionChange","name","local","onChange","key","handleCheckedChange","event","target","checked","createOptionMenu","options","itemToState","stateToItem","localSetting","idString","variant","className","id","style","width","labelId","settings","e","textAlign","map","op","lineLengths","resolution","beatResolution","pattern","length","push","includes","sort","a","b","beatResolutions","c","lineResolution","root","notation","FORMAT_CONFIG_STRINGS","reduce","prev","curr","FORMAT_CONFIG_BOOLS","control","label","v","toString","parseInt","r","DefaultSettings","DEFAULT_FORMAT_CONFIG","PatternDrawer","iOS","process","browser","test","navigator","userAgent","mobile","isMobile","disableBackdropTransition","disableDiscovery","undefined","open","onOpen","onClose","placeholder","overflow","patterns","index","button","onClick","selectPattern","primary","React","memo","SettingsDrawer","patternDetails","getPatternLength","anchor","onSave","Fragment","onShare","FileImport","hiddenFileInput","createRef","fileObject","files","reader","FileReader","onload","loadEvent","onImport","file","content","result","readAsText","this","accept","buttonProps","Button","current","click","type","hidden","ref","Component","height","maxWidth","maxHeight","History","items","data","Paper","Typography","Divider","List","keys","x","ListItem","ListItemText","secondary","Date","date","toLocaleDateString","renderRow","TitledDialog","Dialog","DialogTitle","title","DialogContent","DialogContentText","children","DialogActions","TitleScreen","state","error","history","songHistory","controls","pathname","filename","song","console","log","setState","licenseBanner","href","withStyles","position","bottom","zIndex","drawer","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","DEFAULT_INSTRUMENT_SYMBOLS","normalizeInstrumentsForFiguring","instruments","n","inst","nInst","Object","assign","toLowerCase","manageAccentOrGhost","instrumentTracks","instrumentName","accentSymbol","ghostSymbol","outputInstruments","t0","t1","zeroLouder","volume","gain","mapping","track","activeInstruments","nonTrivialInstruments","Set","p","entries","instrumentID","empty","add","defaultSymbolForSingleInstrument","symbolConfig","lowerName","figureInstruments","instrumentsRaw","output","concat","worthwhileInstruments","relevantTracks","filter","has","trackIsClick","Array","from","t","tomIndex","bassIndex","collated","candidate","Math","floor","clickTrack","hitTrack","instrumentIsTom","rawInstrumentName","lastTrack","figureClickyInstruments","djembeTracks","slapArray","toneArray","bassArray","i","djembeMapping","figureDjembes","figureSnares","figureShakers","instrumentUsed","createInstrumentMask","instrumentIndex","instrumentMask","baseInstrumentIndex","baseInstrumentId","targetInstrumentIndex","calculateResolution","positions","size","implicitPositions","allNotesPass","Error","findHCF","y","max","min","patternArray","rep","count","other","_sumOverlapsOfArrays","hcf","formatResolution","pat","fill","aggregate","totalLength","points","toPoints","representPoints","arrayIndex","resolutionToUse","SongData","sourceFile","LoadJSON","jsonData","fromHydrogen","Promise","resolve","patternData","replacedTracks","trackData","patternWithTracks","createPatternsFromData","prepHydrogenVolumes","active","activeInstrumentation","moduleExports","LoadExample","kuva","styles","whiteSpace","fontFamily","fontSize","PreTypography","Part","tracks","values","formatPatternString","instrument","config","restMark","patternResolution","patternLines","chunkArray","beatsPerLine","beatChunkSize","linesWithBeats","line","lineIndices","formatLine","startBeat","beats","component","lineMark","beat","join","showBeatMark","beatMark","numberLine","createNumberMarker","numberRestMark","beatChunks","showBeatNumbers","lineIndex","PartWithTitle","Title","headingLevel","defaultLevel","safeHeading","getTitleType","Pattern","instrumentIndices","ActivePattern","patternTime","prevBeat","force","prevElements","getElementsByClassName","classList","remove","elements","prevProps","prevState","snapshot","changePatternTime","calculateBeat","nextProps","nextState","color","main","PlaybackControls","IconButton","aria-label","onPlay","onStop","Grid","container","item","xs","Slider","defaultValue","step","tempo","onTempoChange","valueLabelDisplay","ThinFormControlLabel","marginLeft","marginRight","FormControlLabel","InlinableIconButton","NoDividerCenterTableCell","borderBottom","paddingBottom","TableCell","CenterTableCell","VolumeWidget","useState","setActive","sliderValue","setSliderValue","muted","setMuted","sliderRef","useRef","FixedHeightStylings","top","SliderStyles","paddingLeft","IconStyles","time","onClickNHold","start","dispatchEvent","nativeEvent","onEnd","disableRipple","disableFocusRipple","onMuteEvent","orientation","aria-labelledby","setVolume","RawInstrumentEditDialog","currentSymbol","cancel","onCancel","confirm","alert","TextField","autoFocus","fullWidth","onKeyDown","keyCode","preventDefault","InstrumentRenameDialog","currentName","trim","InstrumentTable","setOpen","createCell","align","Checkbox","oldInstrumentIndex","findIndex","dstInstrumentIndex","oldInstrument","replacedSrcInstrument","dstInstrument","replacedInstruments","handleChange","createMatchingRow","TableRow","scope","onEditRow","editRow","onRemoveRow","removeRow","Table","table","TableHead","onEditColumn","editColumn","onVolumeEvent","TableBody","onAddRow","InstrumentConfig","useTheme","editingSymbol","setEditingSymbol","renamingInstrument","setRenamingInstrument","endEditingSymbol","resolvedSymbol","extraInstrument","renameInstrument","getSymbol","TableContainer","removeInstrument","Audio","window","AudioContext","webkitAudioContext","minResolution","trackLength","combined","peakValue","channel","numberOfChannels","combinedChannel","getChannelData","sample","abs","peakAmplitude","context","sounds","determineTrackLength","trackLengthSamples","totalSamples","samplesPerHydrogen","createBuffer","selected","audioBuffer","audioChannel","trackPoints","sampleStart","normalizeAudioBuffer","buffer","source","createBufferSource","loop","playbackRate","connect","destination","AUDIO_DELAY","setAudioDelay","DRUMKITS","convertNormalToAudible","pow","ToneController","onTimeChange","latencyHint","Tone","samples","currentPattern","toDestination","onPatternTimeChange","bpm","sampleCount","expectedSampleCount","failures","determineMinResolution","populateSamples","currentPatternName","message","sortedFailures","drumkit","noMatch","otherDrumkit","otherName","createSortedUnique","stop","selectedInstrument","clampedVolume","player","mute","relativeUrl","drumkitName","chooseAppropriateUrlForInstrument","patternLength","callback","sampleSource","samplesReady","indexFromStart","sampleData","schedule","notePosition","createSequenceCallback","seq","_part","sequences","createSequenceForPattern","patternName","oldPatternName","oldLength","timeFromBarEnd","loopEnd","toSeconds","queueTransition","nextSequence","enableNewTrack","sequence","setLoopPoints","scheduleOnce","then","now","set","SharingDialog","aria-describedby","url","copy","figurePatternSettings","guessPerPatternSettings","makeResolvedSettings","memoizeOne","globalSettings","patternSettings","resolvedSettings","SongView","selectedPattern","songData","formatSettings","settingsOpen","patternsOpen","sharingDialogOpen","changeInstruments","sendVolumeEvent","audio","setVolumeForInstrument","setMutedForInstrument","handleSettingsChange","change","updatedSettings","handlePatternsToggle","handleSettingsToggle","patternIndex","setActivePattern","SongStorage","getExportState","songID","permanentUrl","origin","catch","err","onDownload","closeSharingDialog","play","onSetTempo","setTempo","nullCheck","currentBeatResolution","currentBeat","nextBeat","addEventListener","removeEventListener","teardown","songName","version","patternSpecifics","instrumentConfigColumns","Toolbar","TabitBar","settingsToggle","patternsToggle","flexGrow","calculatePatternResolution","notes","note","parseHydrogenJs","instrumentElements","instrumentList","instrumentArray","element","instrumentComponent","parseFloat","isMuted","layer","patternElements","patternList","noteElements","noteList","patternSize","noteElement","patternsWithTracks","relevantNotes","relevantHits","fromPositions","virtualPatternList","virtualPatternGroups","patternToRelated","virtualGroup","rootPatternName","relatedPatterns","virtual","iteration","expandedObject","objectHasExpanded","related","expandedNodeSet","node","relatedPatternSet","rootPattern","find","patternToMergeName","patternToMerge","merged","copiedTrack","format","xmlString","parser","xml2js","Parser","parseStringPromise","parseHydrogenPromise","WaitingMessage","CircularProgress","ExampleSongView","SongLoaders","SongNameFromFile","split","FileImportSongView","navigateHomeWithError","h2","h","JSON","parse","SongStorageSongView","loadedFile","LocalStorageSongView","matches","hash","decodeState","Routes","prefersDarkMode","useMediaQuery","responsiveFontSizes","useMemo","createMuiTheme","basename","ThemeProvider","CssBaseline","exact","path","render","location","match","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","formatConfig","propName","hasOwnProperty","str","chunkSize","RegExp","chunks","lineLength","beatCount","ceil","numberMarkerArray","asHTML","validateConfig","formatSymbol","symbol","numericPosition","formattedLine","charAt","lineWithBeats","chunkString","trackDict","defaultLineResolution","charIndex","trackID","trackSymbol","trackInstance","resolveConfig","patternString","lineArray","formattedLineArray","formatLineWithMarkers","encodeState","js","stringify","zlib","deflateSync","binaryBuffer","Buffer","decompressedString","inflateSync","JSON_BIN_API_BINS","JSON_BIN_API","put","exportState","binShort","stateToShare","metadata","method","headers","private","body","fetch","response","ok","json","get","binID","getLocalHistory","storage","setItem","removeItem","DOMException","code","storageAvailable","jsonHistory","localStorage","getItem","saveToLocalHistory","stateHash","relevantHistory","historyEntry","restrictedHistory","download","destFilename","blob","Blob","saveAs","vendor","opera","some","toMatchItem","edge","Link","to","noWrap"],"mappings":"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","file":"static/js/main.80587c3e.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport notation from \"./notation\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nfunction camelToReadable(s)\n{\n  const spacedString = s.replace(/([A-Z])/g, ' $1');\n  return spacedString[0].toUpperCase() + spacedString.slice(1);\n}\n\nfunction FormatSettings(props) {\n  const classes = useStyles(props);\n  // todo: change to multiple useState calls?\n\n  function tokenStateToItem(value)\n  {\n    return value === \" \" ? \"space\" : value;\n  }\n\n  function tokenItemToState(value)\n  {\n    return value === \"space\" ? \" \" : value;\n  }\n\n  // currently the only options which are pattern-local\n  // are supported by handleOptionChange\n\n  const handleOptionChange = (name, value, local) => {\n    // const updatedState = {...props.settings, [name]: value};\n    props.onChange({key: name, value: value, local: local});\n  };\n\n  const handleCheckedChange = (event) => {\n    // const updatedState = {...props.settings, [event.target.name]: event.target.checked};\n    props.onChange({key: event.target.name, value: event.target.checked, local: false});\n  };\n\n  function createOptionMenu(\n    name,\n    options,\n    itemToState = tokenItemToState,\n    stateToItem = tokenStateToItem,\n    localSetting = false\n  )\n  {\n    const idString = \"form-control-\" + name + \"-id\";\n    return (\n      <ListItem variant=\"filled\" className={classes.formControl} key={idString} id={idString} style={{width:\"75%\"}}>\n        <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"settings-option-{name}\">{name}</InputLabel>\n          <Select\n            labelId={\"settings-option-\" + name + \"-labelID\"}\n            id={\"settings-option-\" + name + \"-id\"}\n            value={stateToItem(props.settings[name])}\n            name={name}\n            onChange={(e) => handleOptionChange( e.target.name, itemToState(e.target.value), localSetting)}\n            style={{width:\"75%\", textAlign: \"center\"}}\n          >\n            {options.map((op) => <MenuItem key={\"settings-menu-item-\" + name + \"-\" + op} value={stateToItem(op)} style={{textAlign: \"center\"}}>{stateToItem(op)}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </ListItem>\n    );\n  };\n\n  function createBoolControl(name)\n  {\n    return (\n      <ListItem key={\"form-control-\" + name}>\n        <FormControlLabel\n          control={<Switch checked={props.settings[name]} onChange={handleCheckedChange} name={name} />}\n          label={camelToReadable(name)}\n          key={\"switch-\"+name}\n        />\n      </ListItem>\n    );\n  };\n\n  const resolutionToBeatString = (r) => ( r / props.settings.beatResolution ).toString();\n  const beatStringToResolution = (b) => props.settings.beatResolution * parseInt(b);\n\n  const candidateLineLengths = [ 2, 3, 4, 5, 6, 7, 8, 14, 16, 32 ];\n  let lineLengths = [];\n  for( const c of candidateLineLengths )\n  {\n    const resolution = c * 48;\n    if( (resolution % props.settings.beatResolution) === 0\n      && (resolution <= props.pattern.length)\n     )\n    {\n      lineLengths.push( resolution );\n    }\n  }\n\n  if( !lineLengths.includes( props.pattern.length ) )\n  {\n    lineLengths.push( props.pattern.length );\n    lineLengths.sort((a, b)=>{return a-b});\n  }\n\n  const candidateBeatResolutions = [24, 36, 48, 72, 96];\n  let beatResolutions = [];\n  for( const c of candidateBeatResolutions )\n  {\n    if( (c % props.pattern.resolution) === 0 && ( props.settings.lineResolution % c ) === 0)\n    {\n      beatResolutions.push( c );\n    }\n  }\n  return (\n    <FormGroup className={classes.root}>\n      <List>\n        {notation.FORMAT_CONFIG_STRINGS.map( op => createOptionMenu( op[0], op[1] ) ).reduce((prev, curr) => [prev, curr])}\n        {notation.FORMAT_CONFIG_BOOLS.map( op => createBoolControl( op )).reduce((prev, curr) => [prev, curr]) }\n          <ListSubheader>{\"Pattern \" + props.pattern.name + \" Options\"} </ListSubheader>\n          {\n            createOptionMenu(\n              \"beatResolution\",\n              beatResolutions,\n              (v) => v.toString(), // stateToItem\n              (v) => parseInt(v), // itemToState\n              true\n            )\n          }\n          {createOptionMenu(\n            \"lineResolution\",\n            lineLengths,\n            beatStringToResolution,\n            resolutionToBeatString,\n            true // localSetting\n          )}\n        </List>\n      </FormGroup>\n  );\n}\n\nconst DefaultSettings = notation.DEFAULT_FORMAT_CONFIG;\n\n\nexport { FormatSettings, DefaultSettings }\nexport default FormatSettings;\n","import React from \"react\";\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TabitBar from \"./TabitBar\";\nimport { isMobile } from \"./Mobile\";\n\nfunction PatternDrawer(props)\n{\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const mobile = isMobile();\n\n  // SwipableDawer has undesirable behaviour,\n  // (a) persistent isn't handled properly\n  // (b) onOpen of swipable drawer, is only called on swipe events\n  // I can't find convenient callbacks to hook into that are called \"when the component exists\"\n  // (components are deleted when the swipable drawer is closed)\n  // I think my approach would have to involve modifying the content in the swipeable drawer in\n  // a somewhat complex way sadly - not yet\n\n  return (\n    <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n    variant={mobile ? undefined : \"persistent\"}\n    open={props.open}\n    onOpen={props.onOpen}\n    onClose={props.onClose}\n    >\n      {!mobile ? <TabitBar placeholder /> : null }\n      <div\n        style={{overflow: \"auto\"}}\n      >\n        <List>\n          {(props.patterns ?? []).map( (pattern, index) => (\n            <ListItem\n              button\n              key={\"drawer-pattern\" + index.toString()}\n              onClick={() => { if(props.selectPattern){props.selectPattern(index);} }}\n            >\n              <ListItemText primary={pattern.name} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </SwipeableDrawer>\n  );\n};\n\n// open, onOpen, onClose, patterns, selectPattern\n\nexport default React.memo(PatternDrawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport notation from \"./notation\"\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport Divider from \"@material-ui/core/Divider\";\nimport {FormatSettings} from \"./formatSettings\";\nimport { isMobile } from \"./Mobile\";\nimport TabitBar from \"./TabitBar\";\n\nfunction SettingsDrawer(props)\n{\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const mobile = isMobile();\n\n  const patternDetails = props.pattern ? {\n    name : props.pattern.name,\n    resolution : props.pattern.resolution,\n    length: notation.getPatternLength(props.pattern)\n  } : null;\n\n  const noop = () => {};\n  return (\n    <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n      className={props.className}\n      variant={ mobile ? undefined : \"persistent\" }\n      anchor={props.anchor}\n      open={props.open}\n      onOpen={props.onOpen}\n      onClose={props.onClose}\n      style={{overflow: \"hidden\"}}\n    >\n      {!mobile ? <TabitBar placeholder /> : null }\n      {patternDetails &&\n        <FormatSettings\n          onChange={props.onChange ??  noop}\n          settings={props.settings}\n          pattern={patternDetails}\n          />\n      }\n      {patternDetails && props.onSave &&\n        <React.Fragment>\n          <Button\n            onClick={(e) => { props.onSave(); } }\n          >Download</Button>\n          <Divider />\n        </React.Fragment>\n      }\n      {patternDetails && props.onShare &&\n        <Button\n          onClick={(e) => { props.onShare(); } }\n        >Share</Button>\n      }\n    </SwipeableDrawer>\n  );\n}\n\nSettingsDrawer.propTypes = {\n  onSave: PropTypes.func,\n  onShare: PropTypes.func,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  anchor: PropTypes.oneOf(['left', 'right']).isRequired,\n  settings: PropTypes.object,\n  className: PropTypes.string\n}\n\nexport default React.memo(SettingsDrawer);\n","// FileUpload.react.js\n\n// inspired by https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n// and https://stackoverflow.com/questions/55830414/how-to-read-text-file-in-react\n\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\n\nclass FileImport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.hiddenFileInput = React.createRef();\n  }\n\n  onChange(e) {\n    const fileObject = e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = loadEvent => {\n      if( this.props.onImport )\n      {\n        this.props.onImport(\n          { file: fileObject, content : loadEvent.target.result}\n        );\n      }\n    }\n    reader.readAsText(fileObject);\n  }\n\n  render() {\n    const clickFile = (e) => {\n      this.hiddenFileInput.current.click();\n    }\n\n    const {onImport, accept, ...buttonProps} = {...this.props};\n    return (\n      <React.Fragment>\n        <Button onClick={clickFile} {...buttonProps}>Import File</Button>\n        <input\n          type=\"file\"\n          hidden\n          accept={accept}\n          onChange={(e) => this.onChange(e)} ref={this.hiddenFileInput}\n          />\n      </React.Fragment>\n   )\n  }\n}\n\nexport default FileImport;\n","// History.js\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => {return {\n  root: {\n    width: '100%',\n    height: 400,\n    minWidth: 200,\n    maxWidth: 300,\n    maxHeight: 200,\n    overflow: 'auto'\n  }\n}});\n\nfunction renderRow(props) {\n  return (\n    <ListItem button style={props.style} key={props.index} onClick={props.onClick}>\n      <ListItemText primary={props.name} secondary={new Date(props.date).toLocaleDateString()}/>\n    </ListItem>\n  );\n}\n\nfunction History(props)\n{\n  const classes = useStyles();\n  const items = props.data;\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Typography>Recently viewed</Typography>\n        <Divider />\n        <List>\n              {[...items.keys()].map ( x => renderRow({\n                index : x,\n                name: items[x].name,\n                id: items[x].id,\n                date: items[x].date,\n                onClick: ()=>{if(props.onClick){props.onClick(items[x]);}}\n              }))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n\nexport default History;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\n\nfunction TitledDialog(props) {\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle id=\"text-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose} variant=\"contained\">\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nTitledDialog.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func\n};\n\nexport default TitledDialog;\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport FileImport from \"./FileImport\";\nimport Button from '@material-ui/core/Button';\nimport History from \"./History\";\nimport TitledDialog from \"./TitledDialog\"\nimport './App.css';\n\nconst styles = (theme)=>{\n  return {\n    licenseBanner: {\n      position:\"absolute\",\n      bottom:0,\n      \"width\": \"95%\",\n      \"textAlign\": \"center\",\n      \"backgroundColor\" : \"#212121\", // same background color as app\n      \"zIndex\" : theme.zIndex.drawer\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    }\n  };\n};\n\nclass TitleScreen extends React.Component\n{\n  state = {\n    error: this.props.error\n  }\n\n  render()\n  {\n    let history = this.props.history;\n    const songHistory = this.props.songHistory;\n    // if a load of a song is in flight don't show file open buttons\n    const handleFileImport = (e) =>\n    {\n      history.push({\n        pathname: '/import',\n        filename: e.file.name,\n        content: e.content\n      });\n    };\n\n    const navigateRecent = (song) => {\n      console.log(song);\n      history.push('/recent/' + song.id + \"/\");\n    };\n\n    const controls = (\n      <React.Fragment>\n        <Button variant=\"contained\" onClick={()=>{history.push(\"/example\")}} style={{margin: \"1em\"}}>Load example</Button>\n        <FileImport\n          style={{margin: \"1em\"}}\n          variant=\"contained\"\n          onImport={handleFileImport}\n          accept=\".tabit,.h2song\"\n          />\n      </React.Fragment>\n    );\n    const { classes } = this.props;\n    return (\n      <div className=\"App\">\n        <div>\n          <h2>tabit</h2>\n          <p>I read .h2songs and write tab</p>\n          {controls}\n        </div>\n        <div style={{\"marginLeft\" : \"auto\", \"marginRight\": \"auto\"}}>\n        { songHistory.length > 0 &&\n          <History data={songHistory} onClick={navigateRecent}/>\n        }\n        </div>\n        { !!this.state.error &&\n          <TitledDialog\n            title=\"Something went wrong.\"\n            open={!!this.state.error}\n            onClose={()=>{this.setState({error: null})}}\n          >\n            {this.state.error}\n          </TitledDialog>\n        }\n        <div className={classes.licenseBanner} >\n          <p>tabit relies on publicly available sound libraries listed at <a href=\"https://github.com/andrew-murray/tabit\">https://github.com/andrew-murray/tabit</a></p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(TitleScreen);\n","const DEFAULT_INSTRUMENT_SYMBOLS = {\n  \"Djembe Slap\" : \"S\",\n  \"Djembe Tone\" : \"t\",\n  \"Djembe Bass\" : \"O\",\n  \"Snare Ghost\" : \"x\",\n  \"Snare Accent\" : \"X\",\n  \"Shaker Ghost\" : \"x\",\n  \"Shaker Accent\" : \"X\",\n  \"Click\" : \"X\",\n  \"Bass\" : \"O\",\n  \"Tom\" : \"O\",\n  \"Default\" : \"X\"\n};\n\nfunction normalizeInstrumentsForFiguring(instruments)\n{\n  let n = [];\n  for(const inst of instruments)\n  {\n    let nInst = Object.assign({}, inst);\n    // for some reason these instruments are one-size arrays, and one id ... the track id from hydrogen\n    // this should be fixed, this doesn't make sense\n    nInst.name = nInst.name.toLowerCase();\n    n.push( nInst );\n  }\n  return n;\n}\n\nfunction figureDjembes(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const djembeTracks = instruments.filter( (inst) => inst.name.includes(\"djembe\") );\n  if(djembeTracks.length === 0)\n  {\n    return [];\n  }\n  else if(djembeTracks.length <= 3)\n  {\n    // let's lazily assume we have a slap, tone, bass\n    const slapArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"slap\") );\n    const toneArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"tone\") );\n    const bassArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"bass\") );\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      let parityCheck = slapArray[i] + toneArray[i] + bassArray[i];\n      // failed to figure out how djembes work return empty array\n      if(parityCheck !== 1)\n      {\n        return [];\n      }\n    }\n    let djembeMapping = {};\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      if( slapArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Slap\"];\n      }\n      else if( toneArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Tone\"];\n      }\n      else if( bassArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Bass\"];\n      }\n    }\n    return [ [ \"Djembe\", djembeMapping ] ];\n  }\n  else\n  {\n    // TODO: support more than one djembe\n    return []\n  }\n}\n\n// used by snare/shaker\nfunction manageAccentOrGhost(instrumentTracks, instrumentName, accentSymbol, ghostSymbol)\n{\n  let outputInstruments = [];\n  if(instrumentTracks.length === 2)\n  {\n    const t0 = instrumentTracks[0];\n    const t1 = instrumentTracks[1];\n    // attempt to determine ghost/accent\n    const zeroLouder = t0.volume > t1.volume || (t0.volume === t1.volume && t0.gain > t1.gain);\n    let mapping = {};\n    mapping[ t0.id.toString() ] = zeroLouder ? accentSymbol : ghostSymbol;\n    mapping[ t1.id.toString() ] = zeroLouder ? ghostSymbol : accentSymbol;\n    outputInstruments.push([instrumentName, mapping] );\n  }\n  else // if 1 it must be an accent, if >= 3 ... I don't want to try and assign ghosts/accents\n  {\n    // I don't want to support ghost/accent here right now\n    for( const track of instrumentTracks )\n    {\n      let mapping = {};\n      mapping[ track.id.toString() ] = accentSymbol;\n      outputInstruments.push([instrumentName, mapping] );\n    }\n  }\n  return outputInstruments;\n\n}\n\nfunction figureShakers(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  // todo: support common alternative shakers? Tambourine?\n  const shakerTracks = instruments.filter( (inst) => ( inst.name.includes(\"shaker\") ) );\n  return manageAccentOrGhost(\n    shakerTracks,\n    \"Shaker\",\n    symbolConfig[\"Shaker Accent\"],\n    symbolConfig[\"Shaker Ghost\"]\n  );\n}\n\nfunction figureSnares(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const snareTracks = instruments.filter( (inst) => ( inst.name.includes(\"snare\") ) );\n  // todo: we currently assume 2 snares is accent/ghost ... but I think it's relatively\n  // common to be 2 snare parts too, I think the algorithm here is check patterns to\n  // see if they overlap ... if the \"ghosts\" overlap the \"hits\" sometimes, assume 2 parts\n  return manageAccentOrGhost(\n    snareTracks,\n    \"Snare\",\n    symbolConfig[\"Snare Accent\"],\n    symbolConfig[\"Snare Ghost\"]\n  );\n}\n\n\nfunction activeInstruments(patterns)\n{\n  let nonTrivialInstruments = new Set();\n  for( const p of patterns )\n  {\n    for(const [instrumentID, part] of Object.entries(p.instrumentTracks))\n    {\n      if( !part.empty() )\n      {\n        nonTrivialInstruments.add(parseInt(instrumentID));\n      }\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction activeInstrumentation(instrumentIndex, patterns)\n{\n  const active = activeInstruments(patterns);\n  let nonTrivialInstruments = [];\n  for( const inst of instrumentIndex)\n  {\n    if( active.has(inst.id) )\n    {\n      nonTrivialInstruments.push( inst );\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction figureClickyInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const worthwhileInstruments = activeInstruments(patterns);\n  const relevantTracks = instruments.filter( (inst) => ( worthwhileInstruments.has(inst.id) &&\n    !inst.name.includes(\"djembe\") &&\n    ( inst.name.includes(\"click\") ||\n    inst.name.includes(\"stick\") ||\n    inst.name.includes(\"tom\") ||\n    inst.name.includes(\"bass\") ||\n    inst.name.includes(\"kick\") )\n  ) );\n\n  const trackIsClick = Array.from(\n    relevantTracks,\n    (t) => t.name.includes(\"click\") || t.name.includes(\"stick\")\n  );\n  // we prioritise the early tracks\n  // and hope for the best\n\n  let tomIndex = 1;\n  let bassIndex = 1;\n  let collated = [];\n  for( let candidate = 0; candidate < Math.floor(relevantTracks.length/2); ++candidate )\n  {\n    if( trackIsClick[candidate*2] !== trackIsClick[candidate*2+1] )\n    {\n      const clickTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2] : relevantTracks[candidate*2+1];\n      const hitTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2+1] : relevantTracks[candidate*2];\n      const instrumentIsTom = hitTrack.name.includes(\"tom\");\n      let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n      let instrumentName = \"\"\n      if( instrumentIsTom )\n      {\n        instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n        tomIndex = tomIndex + 1;\n      }\n      else\n      {\n        instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n        bassIndex = bassIndex + 1;\n      }\n      let mapping = {};\n      mapping[hitTrack.id.toString()] = symbolConfig[rawInstrumentName];\n      mapping[clickTrack.id.toString()] = symbolConfig[\"Click\"];\n      collated.push([instrumentName, mapping] );\n    }\n  }\n\n  // If there's a remainder instrument and there's no click\n  if( ((relevantTracks.length % 2 ) !== 0) && !trackIsClick[ relevantTracks.length - 1 ] )\n  {\n    const lastTrack = relevantTracks[relevantTracks.length - 1];\n    const instrumentIsTom = lastTrack.name.includes(\"tom\");\n    let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n    let instrumentName = \"\"\n    if( instrumentIsTom )\n    {\n      instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n      tomIndex = tomIndex + 1;\n    }\n    else\n    {\n      instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n      bassIndex = bassIndex + 1;\n    }\n    let mapping = {};\n    mapping[lastTrack.id.toString()] = symbolConfig[rawInstrumentName];\n    collated.push([instrumentName, mapping] );\n  }\n  return collated;\n}\n\nfunction defaultSymbolForSingleInstrument(symbolConfig, name)\n{\n  // we expect these keys\n  /*\n    \"Djembe Slap\" : \"S\",\n    \"Djembe Tone\" : \"t\",\n    \"Djembe Bass\" : \"O\",\n    \"Snare Ghost\" : \"-\",\n    \"Snare Accent\" : \"X\",\n    \"Shaker Ghost\" : \"x\",\n    \"Shaker Accent\" : \"X\",\n    \"Click\" : \"X\",\n    \"Bass\" : \"O\",\n    \"Tom\" : \"O\",\n    \"Default\" : \"X\"\n  */\n  const lowerName = name.toLowerCase();\n  if( lowerName.includes(\"click\") || lowerName.includes(\"stick\") )\n  {\n    return symbolConfig[\"Click\"];\n  }\n  else if( lowerName.includes(\"bass\") || lowerName.includes(\"kick\") )\n  {\n    return symbolConfig[\"Bass\"]\n  }\n  else if( lowerName.includes(\"snare\") )\n  {\n    return symbolConfig[\"Snare Accent\"];\n  }\n  else if( lowerName.includes(\"shaker\") )\n  {\n    return symbolConfig[\"Shaker\"];\n  }\n  else if( lowerName.includes(\"tom\") )\n  {\n    return symbolConfig[\"Tom\"];\n  }\n  else if( lowerName.includes(\"djembe\") )\n  {\n    if( lowerName.includes(\"slap\") )\n    {\n      return symbolConfig[\"Djembe Slap\"];\n    }\n    else if( lowerName.includes(\"tone\") )\n    {\n      return symbolConfig[\"Djembe Tone\"];\n    }\n    else\n    {\n      return symbolConfig[\"Djembe Bass\"];\n    }\n  }\n  return symbolConfig[\"Default\"];\n}\n\nfunction figureInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  let output = [];\n  output = output.concat( figureClickyInstruments( instrumentsRaw, symbolConfig, patterns ) );\n  output = output.concat( figureDjembes( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureSnares( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureShakers( instrumentsRaw, symbolConfig ) );\n\n  // we ignore track used by multiple instruments\n\n  // but attempt to cover \"instrument not recognised anywhere\"\n\n  const worthwhileInstruments = activeInstruments(patterns);\n\n  for(const inst of instrumentsRaw)\n  {\n    if( !worthwhileInstruments.has(inst.id) )\n    {\n      continue;\n    }\n    let instrumentUsed = false;\n    for( const op of output)\n    {\n      if( inst.id.toString() in op[1] )\n      {\n        instrumentUsed = true;\n      }\n    }\n    if(instrumentUsed === false)\n    {\n      let mapping = {};\n      mapping[ inst.id.toString() ] = defaultSymbolForSingleInstrument( symbolConfig, inst.name );\n      output.push( [inst.name, mapping] );\n    }\n  }\n\n  return output;\n}\n\nfunction createInstrumentMask(instrumentIndex, instruments)\n{\n  let instrumentMask = Array(instrumentIndex.length);\n  for( let baseInstrumentIndex = 0; baseInstrumentIndex < instrumentIndex.length; ++baseInstrumentIndex )\n  {\n    const baseInstrumentId = instrumentIndex[baseInstrumentIndex].id;\n    for( let targetInstrumentIndex = 0; targetInstrumentIndex < instruments.length; ++targetInstrumentIndex)\n    {\n      const target = instruments[targetInstrumentIndex];\n      if(baseInstrumentId.toString() in target[1])\n      {\n        instrumentMask[baseInstrumentIndex] = targetInstrumentIndex;\n      }\n    }\n  }\n  return instrumentMask;\n}\n\nexport {\n  activeInstrumentation,\n  createInstrumentMask,\n  DEFAULT_INSTRUMENT_SYMBOLS,\n  figureClickyInstruments,\n  figureDjembes,\n  figureShakers,\n  figureSnares,\n  figureInstruments\n};\n","// utilities.js\n\nfunction calculateResolution(positions, size)\n{\n  // hydrogen treats 48 as a beat\n  const basesToTry = [\n    48, // beat\n    24, // 1/2 beat\n    16, // 1/3 beat\n    12, // 1/4\n    8, // 1/6\n    6, // 1/8\n    4, // 1/12\n    3, // 1/16\n    2, // 1/24\n    1 // 1/48\n  ];\n\n  // note that, fundamentally the size of the pattern is a \"keypoint\"\n  // that needs to be properly recorded by the resolution\n  const implicitPositions = positions.concat( [size] );\n\n  for( const b of basesToTry )\n  {\n    let allNotesPass = true;\n    for( const p of implicitPositions )\n    {\n      if( (p % b) !== 0 )\n      {\n        allNotesPass = false;\n        break;\n      }\n    }\n    if(allNotesPass)\n    {\n      return b;\n    }\n  }\n  throw new Error(\"Failed to predict base\");\n}\n\nexport { calculateResolution };","import { calculateResolution } from \"./utilities\"\n\n// stolen from https://studymaths.co.uk/topics/findingHCFWithJavaScript.php\nfunction findHCF(x, y) {\n\n   // If the input numbers are less than 1 return an error message.\n   if (x < 1 || y < 1) {\n    throw new Error(\"x<1 || y<1\");\n      // return \"Please enter values greater than zero.\";\n   }\n\n   // Now apply Euclid's algorithm to the two numbers.\n   while (Math.max(x, y) % Math.min(x, y) !== 0) {\n      if (x > y) {\n         x %= y;\n      }\n      else {\n         y %= x;\n      }\n   }\n\n   // When the while loop finishes the minimum of x and y is the HCF.\n   return Math.min(x, y);\n}\n\nclass track\n{\n\n  constructor(patternArray, resolution)\n  {\n    if(patternArray.length === 0)\n    {\n      throw new Error(\"patternArray must not be zero length\");\n    }\n    this.rep = patternArray;\n    this.resolution = resolution;\n  }\n\n  length()\n  {\n    return this.rep.length * this.resolution;\n  }\n\n  empty()\n  {\n    return this.rep.reduce( (a,b) => ( a + b ) ) === 0;\n  }\n\n  _sumOverlapsOfArrays(a,b)\n  {\n    let count = 0;\n    for( let i = 0; i < a.length; ++i)\n    {\n      if(a[i] && b[i])\n      {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  countOverlaps(other)\n  {\n    if( this.resolution === other.resolution )\n    {\n      return this._sumOverlapsOfArrays( this.rep, other.rep );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return this._sumOverlapsOfArrays( a.rep, b.rep );\n    }\n  }\n\n  aggregate(other)\n  {\n\n    if( this.resolution === other.resolution )\n    {\n      // when we aggregate, we specifically\n      const length = Math.max( this.rep.length, other.rep.length );\n      const pat = new Array(length).fill(0);\n      for(let index = 0; index < pat.length; ++index)\n      {\n        pat[index] = ( ( index < this.rep.length ) ? this.rep[index] : 0 )\n                  || ( ( index < other.rep.length ) ? other.rep[index] : 0 );\n      }\n      return new track( pat, this.resolution );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return a.aggregate(b);\n    }\n  }\n\n  static representPoints(points, resolution, size)\n  {\n    if( size <= 0 )\n    {\n      throw new Error(\"size must be greater than zero\");\n    }\n    if( size < resolution || (size % resolution) !== 0)\n    {\n      throw new Error(\"resolution must be less than size and divide it evenly\");\n    }\n    let s = new Array(size / resolution).fill(0);\n    for( const p of points )\n    {\n      if( (p % resolution) !== 0)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" at resolution \" + resolution.toString());\n      }\n      if (p >= size)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" for invalid specified size \" + size.toString());\n      }\n      const arrayIndex = p / resolution;\n      s[arrayIndex] = 1;\n    }\n    return s;\n  }\n\n  format(formatResolution)\n  {\n    // formatResolution must cleanly divide for every hit & the length of the pattern\n\n    const totalLength = (this.resolution * this.rep.length);\n    const points = this.toPoints();\n    const rep = track.representPoints(points, formatResolution, totalLength);\n    if(!rep)\n    {\n      return null;\n    }\n    return new track(\n      rep,\n      formatResolution\n    );\n  }\n\n  toPoints()\n  {\n    let points = [];\n    for( const arrayIndex of Array(this.rep.length).keys() )\n    {\n      const indicator = this.rep[arrayIndex];\n      if(indicator)\n      {\n        points.push( this.resolution * arrayIndex )\n      }\n    }\n    return points;\n  }\n\n  static fromPositions(positions, size, resolution = null)\n  {\n    const resolutionToUse = resolution ?? calculateResolution( positions, size );\n    return new track(\n      track.representPoints(positions, resolutionToUse, size),\n      resolutionToUse\n    );\n  }\n}\n\nexport default track;","import kuva from \"./kuva.json\";\nimport {\n  activeInstrumentation,\n  createInstrumentMask,\n  DEFAULT_INSTRUMENT_SYMBOLS,\n  figureInstruments\n} from \"./instrumentation\";\nimport track from \"./track\";\n\n// note that a Pattern contains\n// {\n//    size, name, notes\n//    resolution, instrumentTracks (instrumentTracks are a class)\n// }\n\nclass SongData {\n  constructor(\n    title,\n    sourceFile,\n    instruments,\n    instrumentIndex,\n    instrumentMask,\n    patterns\n  )\n  {\n    this.title = title;\n    this.sourceFile = sourceFile;\n    this.instruments = instruments;\n    this.instrumentIndex = instrumentIndex;\n    this.instrumentMask = instrumentMask;\n    this.patterns = patterns;\n  }\n};\n\nfunction createPatternsFromData(patternData)\n{\n  // the instruments currently work as simple objects\n  // we need to create tracks!\n  let patterns = [];\n  for( let pattern of patternData )\n  {\n    let replacedTracks = {};\n    // todo: find a more compact way of doing this\n    for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n    {\n      replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n    }\n    let patternWithTracks = Object.assign({}, pattern);\n    patternWithTracks.instrumentTracks = replacedTracks;\n    patterns.push(patternWithTracks);\n  }\n  return patterns;\n}\n\nfunction prepHydrogenVolumes(instrumentIndex)\n{\n  // fixme: convert hydrogen volume/gain to normal values, somewhere\n  for( let instrument of instrumentIndex )\n  {\n    instrument.volume = 0.5;\n  }\n  return instrumentIndex;\n}\n\nfunction LoadJSON(jsonData, title, filename, fromHydrogen)\n{\n  return new Promise((resolve) =>\n    {\n      const patterns = createPatternsFromData(jsonData.patterns);\n      const instruments = !fromHydrogen? jsonData.instruments : figureInstruments(\n        jsonData.instruments,\n        DEFAULT_INSTRUMENT_SYMBOLS,\n        patterns\n      );\n      const instrumentIndex = jsonData.instrumentIndex ? jsonData.instrumentIndex\n        : prepHydrogenVolumes( activeInstrumentation(jsonData.instruments, patterns) );\n      const instrumentMask = createInstrumentMask(instrumentIndex, instruments);\n      resolve( new SongData(\n        title,\n        filename,\n        instruments,\n        instrumentIndex,\n        instrumentMask,\n        patterns\n      ) );\n    }\n  );\n\n}\n\nfunction LoadExample()\n{\n  return LoadJSON(\n    kuva,\n    \"kuva\",\n    \"kuva.example\",\n    true // fromHydrogen\n  );\n}\n\n\nconst moduleExports = {\n  LoadExample,\n  LoadJSON\n};\n\nexport default moduleExports;\n","import React from 'react';\nimport notation from \"./notation\"\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme)=>({\n  root: {\n    whiteSpace: \"pre\",\n    fontFamily: \"Roboto Mono\",\n    fontSize: '0.8rem',\n    '@media (min-width:800px)': {\n      fontSize: '1rem',\n    },\n  }\n});\nconst PreTypography = withStyles(styles)(Typography);\n\nclass Part extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const tracks = Object.values(this.props.tracks);\n    if(tracks.length === 0 )\n    {\n      return <React.Fragment />\n    }\n    const patternArray = notation.formatPatternString(\n      this.props.instrument,\n      this.props.tracks,\n      this.props.config.restMark\n    );\n    // don't support a multi-line pattern, that doesn't divide the beatResolution\n    // because it's a nightmare!\n    const patternResolution = tracks[0].resolution;\n    if( (this.props.config.lineResolution % this.props.config.beatResolution) !== 0\n        && ( patternArray.length * patternResolution > this.props.config.lineResolution ) )\n    {\n      throw new Error(\"This code only supports a beatResolution that divides the lineResolution\");\n    }\n    // this code has got very convoluted\n    const patternLines = notation.chunkArray(patternArray, this.props.config.lineResolution / patternResolution, 0);\n    const beatsPerLine = this.props.config.lineResolution / this.props.config.beatResolution;\n    const beatChunkSize = this.props.config.beatResolution / patternResolution;\n    const linesWithBeats = patternLines.map(\n      line => notation.chunkArray( line, beatChunkSize )\n    );\n    const lineIndices = [...patternLines.keys()];\n    const formatLine = (key, line, startBeat)=>{\n      const beats = [...line.keys()];\n      return (\n        <PreTypography key={\"pattern-line-\" + key}>\n          <PreTypography variant=\"subtitle1\" component=\"span\" key={\"line-start-\" + key}>{this.props.config.lineMark}</PreTypography>\n          {\n            beats.map( beat => <React.Fragment key={\"fragment-beat-\"+ (beat + startBeat).toString()}>\n              <PreTypography variant=\"subtitle1\" component=\"span\" key={\"span-beat-\" + (beat + startBeat).toString()} className={\"partNote\"+ (beat + startBeat).toString()}>{line[beat].join(\"\")}</PreTypography>\n              <PreTypography variant=\"subtitle1\" component=\"span\" key={\"span-beat-marker-\" + (beat + startBeat).toString()}>{(this.props.config.showBeatMark && beat !== beats[beats.length-1]) ? this.props.config.beatMark : \"\"}</PreTypography>\n            </React.Fragment>\n            )\n          }\n          <PreTypography variant=\"subtitle1\" component=\"span\" key={\"line-end-\" + key}>{this.props.config.lineMark}</PreTypography>\n        </PreTypography>\n      );\n    };\n\n    const numberLine = notation.createNumberMarker(\n      this.props.config.numberRestMark,\n      this.props.config.beatResolution,\n      patternResolution,\n      Math.min( this.props.config.lineResolution, patternLines[0].length * patternResolution )\n    );\n    const beatChunks = notation.chunkArray(\n      numberLine,\n      this.props.config.beatResolution / patternResolution\n    );\n    return (\n      <React.Fragment>\n        {this.props.config.showBeatNumbers ? formatLine(\"beat\", beatChunks, 0) : \"\" }\n        {lineIndices.map(lineIndex=>formatLine(lineIndex.toString(), linesWithBeats[lineIndex], beatsPerLine * lineIndex))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(Part);\n","import React from 'react';\nimport Part from \"./Part\";\n\nfunction getTitleType(headingLevel, defaultLevel)\n{\n    const validHeadingLevels = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    const safeHeading = headingLevel ? headingLevel.toLowerCase() : '';\n    const Title = validHeadingLevels.includes(safeHeading) ? safeHeading : defaultLevel;\n    return Title;\n}\n\nclass PartWithTitle extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const Title = getTitleType(this.props.headingLevel, \"h4\");\n    return (\n      <article>\n        <Title>{this.props.instrumentName}</Title>\n        <Part\n          instrument={this.props.instrument}\n          tracks={this.props.tracks}\n          config={this.props.config}\n        />\n      </article>\n    );\n  }\n}\n\nexport default PartWithTitle;\n","import React from 'react';\nimport PartWithTitle from \"./PartWithTitle\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    \"margin-bottom\": theme.spacing(2),\n    fontFamily: \"Roboto Mono\",\n    textAlign: \"left\",\n    whiteSpace:\"pre\",\n    \"margin\": \"auto\",\n    \"& .activeNote\": {\n      color: theme.palette.secondary.main\n    }\n  },\n});\n\nconst Pattern = React.memo((props)=>\n{\n  const { classes } = props;\n  const instrumentIndices = [...props.instruments.keys()];\n  const beatResolution = props.config.beatResolution;\n  return (\n    <div style={{\"margin\": \"auto\"}}>\n      { instrumentIndices.map(\n          (instrumentIndex) => ( <PartWithTitle\n            key={\"part-\" + instrumentIndex.toString()}\n            instrumentName={props.instruments[instrumentIndex][0]}\n            instrument={props.instruments[instrumentIndex][1]}\n            tracks={props.tracks}\n            config={props.config}\n          /> )\n        )\n      }\n    </div>\n  );\n});\n\nclass ActivePattern extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  calculateBeat(config, patternTime)\n  {\n    const prevBeat = (patternTime !== undefined && patternTime !== null)\n      ? Math.floor(patternTime / config.beatResolution)\n      : null;\n    return prevBeat;\n  }\n\n  changePatternTime(prevBeat, beat, force)\n  {\n    if(beat !== prevBeat || force)\n    {\n      if(prevBeat !== null)\n      {\n        const prevElements = this.ref.current.getElementsByClassName(\"partNote\" + prevBeat.toString());\n        for( const e of prevElements )\n        {\n          e.classList.remove(\"activeNote\");\n        }\n      }\n      if(beat !== null)\n      {\n        const elements = this.ref.current.getElementsByClassName(\"partNote\" + beat.toString());\n        for( const e of elements )\n        {\n          e.classList.add(\"activeNote\");\n        }\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot)\n  {\n    if(prevProps.instruments !== this.props.instruments\n      || prevProps.tracks !== this.props.tracks\n      || prevProps.config !== this.props.config\n      || prevProps.classes !== this.props.classes)\n    {\n      this.changePatternTime(\n        // I don't quite understand why this removal is necessary\n        // it seems that react smartly preserves the previous element,\n        // so we need to fix its smarts or we change beatResolution partNoteX \"stays highlighted\"\n        this.calculateBeat( prevProps.config, prevProps.patternTime),\n        this.calculateBeat( this.props.config, this.props.patternTime),\n        true\n      );\n      return true;\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState)\n  {\n    // we don't trigger a react-rerender on patternTime changes\n    // we handle that in-browser for performance reasons\n    if(nextProps.instruments !== this.props.instruments\n      || nextProps.tracks !== this.props.tracks\n      || nextProps.config !== this.props.config\n      || nextProps.classes !== this.props.classes)\n    {\n      return true;\n    }\n    else if( nextProps.patternTime !== this.props.patternTime)\n    {\n      this.changePatternTime(\n        this.calculateBeat( this.props.config, this.props.patternTime),\n        this.calculateBeat( nextProps.config, nextProps.patternTime),\n        true\n      );\n      return false;\n    }\n    else\n    {\n      return false;\n    }\n  }\n\n  render()\n  {\n    return (\n      <div className={this.props.classes.root} ref={this.ref}>\n        <Pattern\n          instruments={this.props.instruments}\n          tracks={this.props.tracks}\n          config={this.props.config}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(ActivePattern);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\n\nfunction PlaybackControls(props)\n{\n  const tempoControlColumns = 4;\n\n  const onPlay = ()=>{ if(props.onPlay){ props.onPlay(); }; };\n  const onStop = ()=>{ if(props.onStop){ props.onStop(); }; };\n  const onSetTempo = (event, tempo)=>{ if(props.onTempoChange){ props.onTempoChange(tempo); } };\n\n  return (\n      <React.Fragment>\n        <div>\n          <IconButton\n            aria-label=\"play\"\n            onClick={onPlay}\n          >\n            <PlayArrowIcon style={{color: \"#4cbb17\"}}/>\n          </IconButton>\n          <IconButton\n            aria-label=\"stop\"\n            onClick={onStop}\n          >\n            <StopIcon style={{color: '#ff0800'}}/>\n          </IconButton>\n        </div>\n\n        <Grid container>\n        <Grid item xs={(12 - tempoControlColumns) / 2} />\n        <Grid item xs={tempoControlColumns}>\n        <Slider\n          defaultValue={100}\n          min={60}\n          step={1}\n          max={180}\n          onChange={onSetTempo}\n          valueLabelDisplay=\"auto\"\n        />\n        </Grid>\n        <Grid item xs={(12 - tempoControlColumns ) / 2} />\n        </Grid>\n\n      </React.Fragment>\n   );\n};\n\nexport default React.memo(PlaybackControls);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport ClickNHold from 'react-click-n-hold';\nimport Slider from '@material-ui/core/Slider';\n\nimport {isMobile} from \"./Mobile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nconst ThinFormControlLabel = withStyles({\n  root: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n})(FormControlLabel);\n\nconst InlinableIconButton = withStyles({\n  root: {\n    padding: 2\n  }\n})(IconButton);\n\nconst NoDividerCenterTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: \"none\",\n    textAlign: \"center\",\n    paddingBottom: theme.spacing(0) // make instrument titles bunch up with their controls a little more\n  }\n}))(TableCell);\n\nconst CenterTableCell = withStyles((theme) => ({\n  root: {\n    textAlign: \"center\"\n  }\n}))(TableCell);\n\nfunction VolumeWidget(props)\n{\n  const [active, setActive] = React.useState(false);\n  const [sliderValue, setSliderValue] = React.useState(100);\n  const [muted, setMuted] = React.useState(props.muted);\n  const sliderRef = React.useRef(null);\n  const height = props.height ? props.height / 3 : 24;\n  const FixedHeightStylings = {\n    height: 3*height,\n    position: \"absolute\",\n    top: -height\n  };\n  const SliderStyles = Object.assign(active? {} : {\"visibility\": \"hidden\", paddingLeft: \"0px\"}, FixedHeightStylings);\n  const IconStyles = active ?  {\"visibility\":\"hidden\"} : {};\n\n  // currently: updating based on the normal volume event isn't nearly performant enough\n  // (because the app's state update is really sluggish)\n  // potential fixes - seperate the audio and the visual state and/or create smaller state objects\n  const setVolume = (event, value) =>\n  {\n    setSliderValue(value);\n    if( props.onChange )\n    {\n      props.onChange( value );\n    }\n  };\n\n  // for mobile\n  // we click'n'hold which opens the volume slider, but don't propagate focus\n\n  // for desktop/tablet\n  // we click'n'hold and propagate focus to the slider, so that our drag\n  // will pull the slider up and down\n  const mobile = isMobile();\n\n  const holdDesktop = (start, event)=>{\n    if(!active){ setActive(true); }\n    if(sliderRef){ sliderRef.current.dispatchEvent(event.nativeEvent);}\n  };\n\n  const holdMobile= (start, event)=>{\n    if(!active){ setActive(true); }\n  };\n\n  const holdEndDesktop = (e)=>{\n    setActive(false);\n  };\n\n  const commitVolume = (event,value)=>\n  {\n    if( mobile ){ setActive(false); }\n    setVolume(event,value);\n  };\n\n  const onMuteChange = () =>\n  {\n    setMuted(!muted);\n    props.onMuteEvent(!muted);\n  };\n\n  return (\n    <ClickNHold\n      time={0.5} // Time to keep pressing. Default is 2\n      onClickNHold={mobile ? holdMobile : holdDesktop}\n      onEnd={mobile ? null : holdEndDesktop} >\n      <InlinableIconButton disableRipple disableFocusRipple onClick={onMuteChange} >\n        <div style={SliderStyles}>\n          <Slider\n            defaultValue={100}\n            orientation=\"vertical\"\n            aria-labelledby=\"vertical-slider\"\n            onChange={commitVolume}\n            ref={sliderRef}\n          />\n        </div>\n        <div style={IconStyles}>\n          { muted ?  <VolumeOffIcon fontSize=\"small\" />\n          : sliderValue < 10 ? <VolumeMuteIcon fontSize=\"small\" />\n          : sliderValue < 50 ? <VolumeDownIcon fontSize=\"small\" />\n                             : <VolumeUpIcon fontSize=\"small\"/> }\n        </div>\n      </InlinableIconButton>\n    </ClickNHold>\n  );\n}\n\nclass RawInstrumentEditDialog extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSymbol : null\n    };\n  }\n\n  render() {\n\n    const cancel = (e) => {\n      this.setState({currentSymbol : null});\n      if(this.props.onCancel){\n        this.props.onCancel();\n      }\n    };\n\n    const confirm = (e) => {\n      if(this.state.currentSymbol !== null && this.state.currentSymbol.length === 1)\n      {\n        if(this.props.onChange){\n          this.props.onChange(this.state.currentSymbol);\n          this.setState({currentSymbol: null});\n        }\n      }\n      else\n      {\n        // todo: prettier error communication?\n        alert(\n          \"You selected an invalid symbol \\\"\" + this.state.currentSymbol + \"\\\".\\n\" +\n          \"Symbols must be precisely 1 character.\"\n        );\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter notation symbol\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentSymbol ?? this.props.value}\n            onChange={(e)=>{this.setState({currentSymbol: e.target.value});}}\n            onKeyDown={handleEnter}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nclass InstrumentRenameDialog extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      currentName : null\n    };\n  }\n\n  render()\n  {\n\n    const cancel = () => {\n      if(this.props.onCancel)\n      {\n        this.props.onCancel();\n      }\n      this.setState({currentName: null});\n    };\n\n    const confirm = () => {\n      if(this.state.currentName !== null)\n      {\n        const instrumentName = this.state.currentName.trim();\n        if( instrumentName.length > 0 )\n        {\n          if(this.props.onChange)\n          {\n            this.props.onChange(this.state.currentName);\n          }\n          this.setState({currentName: null});\n        }\n        else\n        {\n          // todo: prettier error communication?\n          alert(\n            \"You selected an invalid instrument name \\\"\" + this.state.currentName + \"\\\".\\n\" +\n            \"Must be non-empty.\"\n          );\n        }\n      }\n      else\n      {\n        cancel();\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter instrument name\n          </DialogContentText>\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentName ?? this.props.value}\n            onChange={(e)=>{this.setState({currentName: e.target.value});}}\n            onKeyDown={handleEnter}\n            autoFocus\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n};\n\nfunction InstrumentTable(props)\n{\n  const classes = useStyles();\n\n  const editRow = (y)=>{ if( props.onEditRow ){ props.onEditRow(y); }};\n  const editColumn = (x)=>{ if( props.onEditColumn ){ props.onEditColumn(x); }};\n  const addRow = ()=>{ if( props.onAddRow ){ props.onAddRow(); }};\n  const removeRow = (y)=>{ if( props.onRemoveRow ){ props.onRemoveRow(y); }};\n\n  const handleChange = (x,y, event) => {\n    const instrumentID = props.instrumentIndex[x].id;\n    const oldInstrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const dstInstrumentIndex = y;\n    if( oldInstrumentIndex === dstInstrumentIndex )\n    {\n      return;\n    }\n    const oldInstrument = props.instruments[oldInstrumentIndex];\n    let replacedSrcInstrument = [\n      \"\",\n      {}\n    ];\n    if( oldInstrument != null )\n    {\n      replacedSrcInstrument[0] = oldInstrument[0];\n      for( const key of Object.keys(oldInstrument[1]) )\n      {\n        if( key !== instrumentID.toString() )\n        {\n          replacedSrcInstrument[1][key] = oldInstrument[1][key];\n        }\n      }\n    }\n    let dstInstrument = [\n      props.instruments[dstInstrumentIndex][0],\n      Object.assign({}, props.instruments[dstInstrumentIndex][1] )\n    ];\n    if(oldInstrument != null )\n    {\n      dstInstrument[1][instrumentID.toString()] = oldInstrument[1][instrumentID];\n    }\n    else\n    {\n      dstInstrument[1][instrumentID.toString()] = \"X\";\n    }\n\n    let replacedInstruments = [];\n\n    for(let instrumentIndex = 0; instrumentIndex < props.instruments.length; ++instrumentIndex)\n    {\n      if( instrumentIndex === oldInstrumentIndex )\n      {\n        replacedInstruments.push( replacedSrcInstrument );\n      }\n      else if( instrumentIndex === dstInstrumentIndex )\n      {\n        replacedInstruments.push( dstInstrument )\n      }\n      else\n      {\n        replacedInstruments.push( props.instruments[instrumentIndex] );\n      }\n    }\n    props.onChange(replacedInstruments);\n  };\n\n  let [open, setOpen] = React.useState( false );\n\n  const createCell = (x,y) =>\n  {\n      return (\n        <TableCell\n          align=\"center\"\n          key={\"instrumentPanel-cell-\" + y.toString() + \"-\" + x.toString()}\n        >\n          <ThinFormControlLabel\n            control={<Checkbox checked={props.instrumentMask[x] === y} onChange={(e) =>{handleChange(x,y,e);}} name={x + \",\" + y.toString()} />}\n          />\n        </TableCell>\n      );\n  }\n\n  const createMatchingRow = (y) =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-\" + y.toString()}>\n          <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-\" + y.toString() + \"-name\"}>\n            <Typography>{props.instruments[y][0]}</Typography>\n            <InlinableIconButton onClick={(e)=>{editRow(y);}}><EditIcon fontSize=\"small\"/></InlinableIconButton>\n            <InlinableIconButton onClick={(e)=>{removeRow(y);}}><ClearIcon fontSize=\"small\"/></InlinableIconButton>\n          </TableCell>\n          {[...Array(props.instrumentMask.length).keys()].map(x=>createCell(x,y))}\n      </TableRow>\n    );\n  };\n\n  const createEditRow = () =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-edit\"}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-edit-cell\"}>\n          <IconButton onClick={(e)=>{addRow();}} aria-label=\"add\">\n            <AddBoxIcon/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  return (\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow key={\"instrumentPanel-row-header\"}>\n          <NoDividerCenterTableCell key={\"instrumentPanel-row-instrument\"}> Instrument </NoDividerCenterTableCell>\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <NoDividerCenterTableCell key={\"instrumentPanel-row-header-cell-\" + x.toString()}>\n                <Typography>{props.instrumentIndex[x].name}</Typography>\n              </NoDividerCenterTableCell>)}\n        </TableRow>\n        <TableRow key={\"instrumentPanel-row-controls\"}>\n          <CenterTableCell key={\"instrumentPanel-row-instrument\"}>\n            <IconButton aria-label=\"Show Instrument Matcher\" size=\"small\" onClick={() => setOpen(!open)}>\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          </CenterTableCell>\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <CenterTableCell key={\"instrumentPanel-row-controls-cell-\" + x.toString()}>\n                <Grid container>\n                <Grid item xs={6}>\n                <InlinableIconButton onClick={(e)=>{editColumn(x);}}>\n                  <EditIcon fontSize=\"small\"/>\n                </InlinableIconButton>\n                </Grid>\n                <Grid item xs={6}>\n                  <VolumeWidget\n                    muted={props.instrumentIndex[x].muted}\n                    onChange={(value)=>{props.onVolumeEvent( {instrument: x, volume: value / 100.0}); }}\n                    onMuteEvent={(muted)=>{props.onVolumeEvent( {instrument: x, muted: muted})}}\n                    />\n                </Grid>\n                </Grid>\n              </CenterTableCell>)}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {open && [...Array(props.instruments.length).keys()].map(y=>createMatchingRow(y))}\n        {open && createEditRow()}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction InstrumentConfig(props) {\n  const theme = useTheme();\n  const [editingSymbol, setEditingSymbol] = React.useState(null);\n  const [renamingInstrument, setRenamingInstrument] = React.useState(null);\n\n  const removeInstrument = (y) =>\n  {\n    let replacedInstruments = props.instruments.slice(0,y).concat(props.instruments.slice(y+1));\n    props.onChange(replacedInstruments);\n  };\n\n  const getSymbol = (x) => {\n    const instrumentID = props.instrumentIndex[editingSymbol].id;\n    const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    return props.instruments[instrumentIndex][1][instrumentID];\n  };\n\n  const endEditingSymbol = (resolvedSymbol) =>\n  {\n    if(resolvedSymbol !== null)\n    {\n      const instrumentID = props.instrumentIndex[editingSymbol].id;\n      const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n      let replacedInstruments = Array.from(props.instruments);\n      replacedInstruments[instrumentIndex][1][instrumentID] = resolvedSymbol;\n      props.onChange(replacedInstruments);\n    }\n    setEditingSymbol( null );\n  };\n\n  const getName = (y) => {\n    return y < props.instruments.length ? props.instruments[y][0] : \"\";\n  };\n\n  const renameInstrument = (instrumentName)  =>\n  {\n    // this function also deals with the addition of new instruments\n    if( renamingInstrument === props.instruments.length )\n    {\n      const extraInstrument = [ instrumentName, {} ];\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments.push(extraInstrument);\n      props.onChange(replacedInstruments);\n    }\n    else\n    {\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments[renamingInstrument][0] = instrumentName;\n      props.onChange(replacedInstruments);\n    }\n    setRenamingInstrument(null);\n  };\n\n  const containerStyle = {\n    \"border\": \"2px solid rgba(255, 255, 255, 0.5)\",\n    \"outline\": \"none\",\n    \"borderRadius\": \"8px\"\n  };\n  return (\n    <div style={{\"paddingBottom\" : theme.spacing(1)}}>\n      <InstrumentRenameDialog\n        open={renamingInstrument !== null}\n        onCancel={()=>{setRenamingInstrument(null);}}\n        onChange={(s)=>{renameInstrument(s);}}\n        value={renamingInstrument !== null ? getName(renamingInstrument) : \"\"}\n      />\n      <RawInstrumentEditDialog\n        open={editingSymbol !== null}\n        onCancel={()=>{endEditingSymbol(null);}}\n        onChange={(s)=>{endEditingSymbol(s);}}\n        value={editingSymbol !== null ? getSymbol(editingSymbol) : \"\"}\n        />\n      <TableContainer component={Paper} style={containerStyle}>\n        <InstrumentTable\n          instrumentIndex={props.instrumentIndex}\n          instrumentMask={props.instrumentMask}\n          instruments={props.instruments}\n          onEditColumn={(x)=>{setEditingSymbol(x);}}\n          onEditRow={(y)=>{setRenamingInstrument(y);}}\n          onAddRow={()=>{setRenamingInstrument(props.instruments.length)}}\n          onRemoveRow={(y)=>{removeInstrument(y);}}\n          onVolumeEvent={props.onVolumeEvent}\n          onChange={props.onChange}\n        />\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default React.memo( InstrumentConfig );\n","class Audio\n{\n\n  // todo: we replace a valid audioContext with a blank object, so that we can run tests in node\n  //       this should probably be replaced by https://github.com/audiojs/web-audio-api\n  //       and a test-suite written\n  static createWebContext()\n  {\n    return new (window.AudioContext || window.webkitAudioContext || Object)();\n  }\n\n  static determineMinResolution(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let minResolution = 48;\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && !t.empty()\n        )\n        {\n          minResolution = Math.min( minResolution, t.resolution );\n        }\n      }\n      return minResolution;\n  }\n\n  static determineTrackLength(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let trackLength = 48;\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && !t.empty()\n        )\n        {\n          trackLength = Math.max( trackLength, t.length() );\n        }\n      }\n      return trackLength;\n  }\n\n  static peakAmplitude(\n    combined\n  )\n  {\n    let peakValue = 0.0;\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for( let sample = 0; sample < combinedChannel.length; ++sample)\n      {\n        peakValue = Math.max( Math.abs(combinedChannel[sample]), peakValue );\n      }\n    }\n    return peakValue;\n  }\n\n  static normalizeAudioBuffer(\n    combined\n  )\n  {\n    const peakValue = Audio.peakAmplitude( combined );\n    if( peakValue > 1.0 )\n    {\n      for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n        let combinedChannel = combined.getChannelData(channel);\n        for( let sample = 0; sample < combinedChannel.length; ++sample)\n        {\n          combinedChannel[sample] = combinedChannel[sample] / peakValue;\n        }\n      }\n    }\n    return combined;\n  }\n\n  static createMasterTrack(\n    context,\n    tracks,\n    instrumentIndex,\n    sounds,\n    tempo\n  )\n  {\n    const trackLength = Audio.determineTrackLength( instrumentIndex, tracks );\n\n\n    const beatTime =  (60.0 / tempo) * 1000;\n    const timePerHydrogen = beatTime / 48.0;\n\n\n    // let's assume we can do some simple things\n\n    const sampleRate = 44100;\n    const channels = 2;\n    const trackLengthMs = trackLength * timePerHydrogen;\n    const trackLengthSamples = trackLengthMs * sampleRate / 1000.0;\n    const totalSamples = Math.floor(trackLengthSamples);\n    const samplesPerHydrogen = Math.floor( totalSamples / trackLength );\n    const combined = context.createBuffer(channels, totalSamples, sampleRate);\n\n    // populate blank buffer with sounds\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && selected[0].id in sounds\n          && !t.empty()\n        )\n        {\n          const audioBuffer = sounds[selected[0].id];\n          // fallback to copying the mono buffer across both channels\n          const audioChannel = audioBuffer.numberOfChannels === 2 ? audioBuffer.getChannelData(channel) : audioBuffer.getChannelData(0);\n          const trackPoints = t.toPoints();\n          for( const noteStart of trackPoints )\n          {\n            const sampleStart = noteStart * samplesPerHydrogen;\n            for( let sample = 0; sample < audioBuffer.length; ++sample )\n            {\n              // add sample to mega track\n              combinedChannel[sampleStart + sample] = combinedChannel[sampleStart + sample] + audioChannel[sample];\n            }\n          }\n        }\n      }\n    }\n\n    return Audio.normalizeAudioBuffer( combined );\n  }\n\n  static createAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=true;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n  static createOneShotAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=false;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n}\n\nexport default Audio;","\nimport Audio from \"./Audio\"\nimport * as Tone from \"tone\";\n\n// we schedule for a delay of 120ms to allow the audio context to catch up\nlet AUDIO_DELAY = 0.12;\n\nconst setAudioDelay = (value) => {\n  AUDIO_DELAY = value;\n};\n// these are the hydrogen drumkits available by GPL/CC\n\nconst DRUMKITS = [\n  \"circAfrique v4\",\n  \"DeathMetal\",\n  \"The Black Pearl 1.0\",\n  \"GMRockKit\",\n  \"TR808EmulationKit\"\n];\n\nconst convertNormalToAudible = (value) => {\n  // add an intuitive feel to gain values, perception of sound is non-linear\n  // https://www.dr-lex.be/info-stuff/volumecontrols.html\n  // note: I tried x^4 and I tried using tone's DB directly but neither felt very good.\n  return Math.pow(value, 2.5);\n};\n\nconst chooseAppropriateUrlForInstrument = (drumkitName, instrumentName) =>\n{\n  const name = instrumentName.toLowerCase();\n  // this is currently very basic\n  if(name.includes(\"kick\"))\n  {\n      return \"The Black Pearl 1.0/PearlKick-Hard.wav\";\n  }\n  else if(name.includes(\"stick\"))\n  {\n      return \"DeathMetal/16297_ltibbits_sticks_low_pitch.wav\";\n  }\n  else if(name.includes(\"tom\"))\n  {\n      return \"TR808EmulationKit/808_Tom_Mid.wav\"\n  }\n  else if(name.includes(\"clap\"))\n  {\n      return \"TR808EmulationKit/808_Clap.wav\";\n  }\n  else if(name.includes(\"snare\"))\n  {\n    return \"GMRockKit/Snare-Soft.wav\";\n  }\n  else if(name.includes(\"cowbell\"))\n  {\n    return \"GMRockKit/Cowbell-Softest.wav\";\n  }\n  else\n  {\n    // todo: snare, cymbals\n    return null;\n  }\n}\n\nconst createSequenceCallback = (pattern, sampleSource) =>\n{\n  let samplesReady = sampleSource.samplesReady();\n  const sequenceCallback = (time, indexFromStart) =>\n  {\n    // if we don't know samples are ready,\n    if(!samplesReady)\n    {\n      // update our knowledge, and early out if needed\n      samplesReady = sampleSource.samplesReady();\n      if(!samplesReady){ return; }\n    }\n    const trackLengthRes = ( pattern.length / pattern.resolution );\n    const index = indexFromStart % trackLengthRes;\n    for(const [id,t] of Object.entries(pattern.tracks))\n    {\n        if( t.rep[index] )\n        {\n          const sampleData = sampleSource.samples[id];\n          if( sampleData !== undefined )\n          {\n            sampleData.player.stop(time + AUDIO_DELAY);\n            sampleData.player.start(time + AUDIO_DELAY);\n          }\n        }\n    }\n    if(sampleSource.onPatternTimeChange)\n    {\n      Tone.getDraw().schedule(\n        ()=>{\n          if(Tone.getTransport().state === \"started\")\n          {\n            const notePosition = (index * pattern.resolution) % pattern.length;\n            sampleSource.onPatternTimeChange(notePosition);\n          }\n        },\n        time + AUDIO_DELAY\n      );\n    }\n  };\n  return sequenceCallback;\n};\n\nconst createSortedUnique = (failures) =>\n{\n  let sortedFailures = [];\n  for( const [drumkit, name] of failures )\n  {\n    let noMatch = true;\n    for( const [otherDrumkit, otherName] of sortedFailures )\n    {\n      if( drumkit === otherDrumkit && name === otherName )\n      {\n        noMatch = false;\n        break;\n      }\n    }\n    if( noMatch )\n    {\n      sortedFailures.push( [drumkit, name] );\n    }\n  }\n  sortedFailures.sort();\n  return sortedFailures;\n}\n\nclass ToneController\n{\n  constructor(\n    instrumentIndex,\n    patterns,\n    tempo,\n    onTimeChange,\n    latencyHint\n  )\n  {\n\n    if(latencyHint && Tone.context.latencyHint !== latencyHint)\n    {\n      let context = new Tone.Context({latencyHint: latencyHint});\n      Tone.setContext(context);\n    }\n\n    // also configure a larger audio delay, if we're being requested to\n    // prioritise playback over latency\n    if(latencyHint == \"playback\")\n    {\n      // value in seconds (relatively arbitrary)\n      setAudioDelay(0.35)\n    }\n    else\n    {\n      setAudioDelay(0.12);\n    }\n\n    // this thing has a lot of state, eh?\n    // would love if this state was a bit more structured\n    this.samples = {};\n    this.currentPattern = null;\n    this.gain = new Tone.Gain();\n    this.gain.toDestination();\n    this.onPatternTimeChange = onTimeChange;\n    Tone.getTransport().bpm.value = tempo;\n    Tone.getTransport().loop = true;\n\n    this.sampleCount = 0;\n    this.expectedSampleCount = 0;\n    this.patternDetails = {};\n    let failures = []\n    for( let p of patterns )\n    {\n      this.patternDetails[p.name] = {\n        resolution: Audio.determineMinResolution(instrumentIndex, p.instrumentTracks ),\n        length : Audio.determineTrackLength(instrumentIndex, p.instrumentTracks ),\n        name: p.name,\n        tracks: p.instrumentTracks,\n        pattern: p\n      };\n      this.populateSamples(instrumentIndex, p.instrumentTracks, failures);\n    }\n    this.currentPatternName = null;\n    this.instrumentIndex = instrumentIndex;\n\n    if(failures.length > 0)\n    {\n      let message = \"Failed to load samples for instruments:\\n\";\n      let sortedFailures = createSortedUnique(failures);\n      for( const [drumkit, name] of sortedFailures )\n      {\n        message += \"    -\" + name;\n        if( drumkit !== \"\" ){ message += \" (\" + drumkit + \")\"; }\n        message += \"\\n\";\n      }\n      message += \"This is typically because they belong to commercial sound libraries. \" +\n       \"tabit's supported drumkits are\\n\" + DRUMKITS.join( \", \" ) + \".\";\n\n      alert(message);\n    }\n  }\n\n  teardown()\n  {\n    this.stop();\n    // cancel all future events\n    // note: it's unclear if this will appropriately dispose of all sequences & samples\n    // so this may be a performance problem in the long term\n    Tone.getTransport().cancel();\n  }\n\n  samplesReady()\n  {\n    return this.sampleCount === this.expectedSampleCount;\n  }\n\n  populateSamples(instrumentIndex, tracks, failures)\n  {\n    this.sampleCount = 0;\n    for(const [id,] of Object.entries(tracks))\n    {\n      const selected = instrumentIndex.filter(inst => inst.id.toString() === id);\n      if( selected.length > 0)\n      {\n        const selectedInstrument = selected[0];\n        const clampedVolume = convertNormalToAudible( Math.min( Math.max( 0.0 , selectedInstrument.volume ), 1.0 ) );\n        if( selectedInstrument.id in this.samples )\n        {\n          continue;\n        }\n        if(\n          \"drumkit\" in selectedInstrument &&\n          \"filename\" in selectedInstrument &&\n          DRUMKITS.includes(selectedInstrument.drumkit) )\n        {\n          const filename = selectedInstrument.filename.replace(\".flac\", \".wav\");\n          let player = new Tone.Player(\n            process.env.PUBLIC_URL + \"/wav/\" + selectedInstrument.drumkit + \"/\" + filename,\n            () => { this.sampleCount++; }\n          );\n          player.mute = selectedInstrument.muted;\n          player.name = selectedInstrument.name;\n          const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n          player.connect(gain)\n          gain.connect(this.gain);\n          this.samples[selectedInstrument.id] = { player : player, gain : gain }\n          this.expectedSampleCount++;\n        }\n        else if( \"drumkit\" in selectedInstrument )\n        {\n          const relativeUrl = chooseAppropriateUrlForInstrument( selectedInstrument.drumkit, selectedInstrument.name );\n          if(relativeUrl !== null)\n          {\n            let player = new Tone.Player(\n              process.env.PUBLIC_URL + \"/wav/\" + relativeUrl,\n              () => { this.sampleCount++; }\n            );\n            player.mute = selectedInstrument.muted;\n            player.name = selectedInstrument.name;\n            const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n            player.connect(gain);\n            gain.connect(this.gain);\n            this.samples[selectedInstrument.id] = { player : player, gain : gain }\n            this.expectedSampleCount++;\n          }\n          else\n          {\n            failures.push( [selectedInstrument.drumkit, selectedInstrument.name] );\n          }\n        }\n        else\n        {\n            failures.push( [\"\", selectedInstrument.name] );\n        }\n      }\n    }\n  }\n\n  createSequenceForPattern(instrumentIndex, pattern)\n  {\n      const patternResolution = this.patternDetails[pattern.name].resolution;\n      const patternLength = this.patternDetails[pattern.name].length;\n      const callback = createSequenceCallback(\n        this.patternDetails[pattern.name],\n        this\n      );\n      let seq = new Tone.Sequence(\n        callback,\n        [...Array(patternLength / patternResolution).keys()],\n        Tone.Time(\"4n\") * ( patternResolution / 48.0 )\n      );\n      // start the sequence, but the ticks won't be triggered when muted\n      // note: setting mute on the sequence directly seems to have no effect\n      seq._part.mute = true;\n      seq.start(0);\n      return seq;\n  }\n\n  createSequences(instrumentIndex, patterns)\n  {\n    let sequences = {};\n    for( let p of patterns )\n    {\n      sequences[p.name] = this.createSequenceForPattern(instrumentIndex, p);\n    }\n    return sequences;\n  }\n\n  setActivePattern( patternName )\n  {\n    const oldPatternName = this.currentPatternName !== null ? this.currentPatternName : null;\n    const length = this.patternDetails[patternName].length;\n    const oldLength = oldPatternName !== null ? this.patternDetails[oldPatternName] : null\n\n    // TODO: Since introducing a scheduling delay, this fudge factor is less reliable\n    // Particularly, the transition gets queued but the first beat is a little sloppy\n    // it's possible the whole transition functor needs to be faster\n\n    // we have a little fudge in here... if we're transitioning from a 4 beat loop\n    // to an 8 beat pattern ... we probably really wanted to hit the start of that pattern,\n    // not to transition at 3.75 beats and play the latter half\n    const timeFromBarEnd = Tone.getTransport().loopEnd - ( Tone.getTransport().toSeconds(Tone.getTransport().position) - AUDIO_DELAY );\n\n    const queueTransition = oldPatternName !== null\n    && Tone.getTransport().state === \"started\"\n    && ( timeFromBarEnd > 0 && timeFromBarEnd < Tone.getTransport().toSeconds(Tone.Time(\"8n\")));\n\n    // create this before starting the \"transaction\"\n    const nextSequence = this.createSequenceForPattern(this.instrumentIndex, this.patternDetails[patternName].pattern);\n\n    const enableNewTrack = (time) => {\n      if(oldPatternName !== null)\n      {\n        // note: setting mute on the sequence directly seems to have no effect\n        this.sequence._part.mute = true;\n      }\n      if(oldPatternName === null || oldLength !== length )\n      {\n\n        Tone.getTransport().setLoopPoints(0, Tone.Time(\"4n\") * (length / 48.0));\n      }\n      this.sequence = nextSequence;\n      this.sequence._part.mute = false;\n      this.currentPatternName = patternName;\n    };\n\n    if( queueTransition ) {\n      Tone.getTransport().scheduleOnce(\n        enableNewTrack,\n        Tone.Time(\"0\")\n      );\n    }\n    else\n    {\n      enableNewTrack();\n    }\n  }\n\n  play()\n  {\n    // Tone.start is needed to be triggered from a user interaction\n    // (web-audio-context policy of not playing until a user interaction)\n    Tone.start().then(()=>{Tone.getTransport().start();});\n  }\n\n  stop()\n  {\n    // it's slightly unclear what the synchronisation semantics of this Tone.getTransport().stop() call are.\n    // If a tick is currently in flight on Tone.getTransport() we have to ensure that\n    // the reset of patternTime occurs *afterwards*.\n    // The below calls seem to work for this, but I couldn't tell you why.\n    if( Tone.getTransport().state === \"started\")\n    {\n      Tone.getTransport().stop();\n      if( this.onPatternTimeChange )\n      {\n        Tone.getDraw().schedule(\n          ()=>{\n            this.onPatternTimeChange( null );\n          },\n          Tone.getTransport().now()\n        );\n      }\n    }\n  }\n\n  setMutedForInstrument(instrumentID, muted)\n  {\n    this.samples[instrumentID].player.mute = muted;\n  }\n\n  setVolumeForInstrument(instrumentID, volume)\n  {\n    this.samples[instrumentID].gain.set( {gain : convertNormalToAudible(volume) } );\n  }\n\n  setTempo(tempo)\n  {\n    Tone.getTransport().bpm.value = tempo;\n  }\n};\n\n\n\nexport default ToneController;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport copy from \"copy-to-clipboard\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n\nfunction SharingDialog(props)\n{\n  return <Dialog\n    open={props.open}\n    onClose={props.onClose}\n    aria-labelledby=\"sharing-dialog\"\n    aria-describedby=\"sharing-dialog\"\n  >\n    <DialogContent>\n      <DialogContentText>\n      Your song is available at\n      </DialogContentText>\n      <DialogContentText>\n      {props.url}\n      <IconButton onClick={(e)=>{ copy(props.url); }}>\n        <FileCopyIcon />\n      </IconButton>\n      </DialogContentText>\n      <DialogActions>\n        <Button onClick={props.onClose}>\n          Close\n        </Button>\n      </DialogActions>\n    </DialogContent>\n  </Dialog>\n}\n\nSharingDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  url: PropTypes.string\n}\n\nexport default React.memo(SharingDialog);\n","import React from 'react';\nimport Pattern from \"./Pattern\";\nimport PlaybackControls from \"./PlaybackControls\";\nimport {DefaultSettings} from \"./formatSettings\";\nimport notation from \"./notation\";\nimport InstrumentConfig from \"./instrumentConfig\";\nimport { createInstrumentMask } from \"./instrumentation\";\nimport Grid from '@material-ui/core/Grid';\nimport TabitBar from \"./TabitBar\";\nimport PatternDrawer from \"./PatternDrawer\"\nimport ToneController from \"./ToneController\"\nimport SettingsDrawer from \"./SettingsDrawer\"\nimport { isMobile } from \"./Mobile\";\nimport SharingDialog from \"./SharingDialog\";\nimport Toolbar from '@material-ui/core/Toolbar';\n// todo: pass the needed .put function via a prop?\nimport * as SongStorage from \"./SongStorage\";\nimport memoizeOne from 'memoize-one';\n\nconst figurePatternSettings = (patterns)=>{\n  return Array.from(\n    patterns,\n    (p) => notation.guessPerPatternSettings( p.instrumentTracks )\n  );\n};\n\nconst makeResolvedSettings = memoizeOne( (globalSettings, patternSettings) => {\n  let resolvedSettings = Object.assign({}, globalSettings);\n  if(patternSettings)\n  {\n    resolvedSettings = Object.assign(resolvedSettings, patternSettings);\n  }\n  return resolvedSettings;\n});\n\nclass SongView extends React.Component\n{\n  state = {\n    selectedPattern: 0,\n    patternSettings: this.props.songData ? figurePatternSettings(this.props.songData.patterns) : null,\n    formatSettings: Object.assign({}, DefaultSettings),\n    songData: Object.assign({},this.props.songData),\n    settingsOpen: false,\n    patternsOpen: true,\n    sharingDialogOpen: false,\n    patternTime: null\n  }\n\n  componentDidMount()\n  {\n    const latencyHint = isMobile() ? \"playback\" : null;\n    const animateCallback = (time)=>{\n      const nullCheck = (this.state.patternTime === null) != (time === null);\n      const currentBeatResolution = this.state.patternSettings[this.state.selectedPattern].beatResolution;\n      const currentBeat = Math.floor(this.state.patternTime / currentBeatResolution);\n      const nextBeat =  Math.floor(time / currentBeatResolution);\n      if( nullCheck || currentBeat !== nextBeat )\n      {\n        this.setState( {patternTime: time} )\n      }\n    };\n    // always default tempo to 100bpm for now\n    this.audio = new ToneController(\n      this.state.songData.instrumentIndex,\n      this.state.songData.patterns,\n      100.0,\n      animateCallback,\n      latencyHint\n    );\n    this.audio.setActivePattern( this.state.songData.patterns[this.state.selectedPattern].name );\n    // save our work when we navigate away via tab-close\n    window.addEventListener('beforeunload', this.onSave);\n  }\n\n  componentWillUnmount()\n  {\n    // save our work, as we may be about to navigate away somewhere else in tabit\n    this.onSave();\n    window.removeEventListener('beforeunload', this.onSave);\n    if( this.audio )\n    {\n      this.audio.teardown();\n      delete this.audio;\n    }\n  }\n\n  getExportState()\n  {\n    return {\n      instruments : this.state.songData.instruments,\n      instrumentIndex : this.state.songData.instrumentIndex,\n      patterns : this.state.songData.patterns,\n      songName: this.state.songData.title,\n      formatSettings: this.state.formatSettings,\n      patternSettings : this.state.patternSettings,\n      version: \"1.1.0\"\n    };\n  }\n\n  // note these functions could cleanly be locally defined\n  // but react gives better performance by not doing this, sadly\n  changeInstruments = (instruments) =>\n  {\n    let songData = Object.assign({}, this.state.songData);\n    songData.instruments = instruments;\n    songData.instrumentMask = createInstrumentMask(this.state.songData.instrumentIndex, instruments);\n    this.setState( {\n      songData: songData\n    } );\n  }\n\n  sendVolumeEvent = (event) =>\n  {\n    if(\"volume\" in event)\n    {\n      const instrumentID = this.state.songData.instrumentIndex[ event.instrument ].id;\n      if(this.audio){ this.audio.setVolumeForInstrument( instrumentID, event.volume ); }\n    }\n    else if(\"muted\" in event)\n    {\n      const instrumentID = this.state.songData.instrumentIndex[ event.instrument ].id;\n      if(this.audio){ this.audio.setMutedForInstrument( instrumentID, event.muted ); }\n    }\n  }\n\n  handleSettingsChange = (change) =>\n  {\n    // change returns an object with .key, .value and .local\n    if(change.local)\n    {\n      const updateState = (state) => {\n        const modifiedSettings = state.patternSettings.map( (settings, index) => {\n          if(index !== state.selectedPattern){ return settings; }\n          else {\n            return Object.assign(\n              {},\n              state.patternSettings[state.selectedPattern],\n              {[change.key]: change.value}\n            );\n          }\n        });\n        return {patternSettings: modifiedSettings};\n      };\n      this.setState(updateState);\n    }\n    else\n    {\n      const updatedSettings = Object.assign(\n        {},\n        this.state.formatSettings,\n        {[change.key]: change.value}\n      );\n      this.setState(\n        {formatSettings: updatedSettings}\n      )\n    }\n  };\n\n  handlePatternsToggle = (e) => {\n    this.setState( { patternsOpen : !this.state.patternsOpen } );\n  };\n\n  handleSettingsToggle = (e) => {\n    this.setState( { settingsOpen : !this.state.settingsOpen } );\n  };\n\n  selectPattern = (patternIndex) =>\n  {\n    // it's important to do this before we re-render components\n    if(this.audio)\n    {\n      this.audio.setActivePattern(\n        this.state.songData.patterns[patternIndex].name\n      );\n    }\n\n    this.setState(\n      { selectedPattern: patternIndex }\n    );\n  };\n\n  onShare = () => {\n    SongStorage.put(this.getExportState())\n      .then(songID =>{\n        const permanentUrl = window.origin + process.env.PUBLIC_URL + \"/song/\" + songID;\n        this.setState({permanentUrl: permanentUrl, sharingDialogOpen: true});\n      })\n      .catch((err)=>{alert(\"Couldn't contact external server at this time.\")});\n  };\n\n  onDownload = () => {\n    SongStorage.download(this.getExportState())\n  }\n\n  onSave = () => {\n    SongStorage.saveToLocalHistory(this.getExportState());\n  }\n\n  handleSettingsToggle = (e)=>{\n    this.setState({settingsOpen: !this.state.settingsOpen});\n  }\n\n  handlePatternsToggle = (e)=>{\n    this.setState({patternsOpen: !this.state.patternsOpen})\n  }\n\n  closeSharingDialog = ()=>{\n    this.setState({sharingDialogOpen:false});\n  }\n\n  onPlay = ()=>{\n    if(this.audio){ this.audio.play(); }\n  }\n  onStop = ()=>{\n    if(this.audio){ this.audio.stop(); }\n\n  }\n  onSetTempo = (tempo)=>{\n    if(this.audio){ this.audio.setTempo(tempo); }\n  }\n\n  render()\n  {\n    const pattern = this.state.songData.patterns[\n      this.state.selectedPattern\n    ];\n    const patternSpecifics = ( this.state.songData && this.state.patternSettings) ? this.state.patternSettings[this.state.selectedPattern] : null;\n    const resolvedSettings = makeResolvedSettings( this.state.formatSettings, patternSpecifics );\n    const mobile = isMobile();\n    const instrumentConfigColumns = mobile ? 12 : 8;\n\n    // todo: make this Toolbar unnecessary, it ensures pattern renders in the right place right now\n    return (\n      <div className=\"App\">\n        <Toolbar variant=\"dense\"/>\n        <TabitBar\n          title={this.state.songData.title}\n          settingsToggle={this.handleSettingsToggle}\n          patternsToggle={this.handlePatternsToggle}\n          onDownload={this.onDownload}\n          onShare={this.onShare}\n        />\n        <div style={{display: \"flex\", flexGrow : 1}} />\n        <Pattern\n          instruments={this.state.songData.instruments}\n          tracks={pattern.instrumentTracks}\n          config={resolvedSettings}\n          patternTime={this.state.patternTime}\n        />\n        <div style={{display: \"flex\", flexGrow : 1}} />\n        <PlaybackControls\n          onPlay={this.onPlay}\n          onStop={this.onStop}\n          onTempoChange={this.onSetTempo}\n        />\n        <Grid container>\n        {instrumentConfigColumns < 12 ? <Grid item xs={(12 - instrumentConfigColumns) / 2} /> : null}\n        <Grid item xs={instrumentConfigColumns}>\n        <InstrumentConfig\n            instruments={this.state.songData.instruments}\n            instrumentIndex={this.state.songData.instrumentIndex}\n            instrumentMask={this.state.songData.instrumentMask}\n            onChange={this.changeInstruments}\n            onVolumeEvent={this.sendVolumeEvent}\n          />\n        </Grid>\n        {instrumentConfigColumns < 12 ? <Grid item xs={(12 - instrumentConfigColumns) / 2} /> : null}\n        </Grid>\n        <PatternDrawer\n          open={this.state.patternsOpen}\n          onOpen={this.handlePatternsToggle}\n          onClose={this.handlePatternsToggle}\n          patterns={this.state.songData.patterns}\n          selectPattern={this.selectPattern}\n        />\n        <SettingsDrawer\n          open={this.state.settingsOpen}\n          onOpen={this.handleSettingsToggle}\n          onClose={this.handleSettingsToggle}\n          anchor=\"right\"\n          pattern={pattern}\n          settings={resolvedSettings}\n          onChange={this.handleSettingsChange}\n         />\n         <SharingDialog\n          open={this.state.sharingDialogOpen}\n          onClose={this.closeSharingDialog}\n          url={this.state.permanentUrl}\n          />\n      </div>\n    );\n  }\n};\n\nexport default SongView;\n","// h2.js\n\nimport track from \"./track\";\nimport xml2js from \"xml2js\";\nimport { calculateResolution } from \"./utilities\";\n\n// TODO: This file was written with the hope that using xml2js would make things cleaner\n// it didn't, purely because xml2js is an okay library doing a difficult task\n// it ensures to produce a good json file but in doing so muddles the data a bit.\n// Should replace this with dom-parser and window.DOMParser\n\n// let's think about the data representation needed\n\nfunction calculatePatternResolution(pattern, size)\n{\n  const positions = Array.from(pattern.notes, note => note.position)\n  return calculateResolution(positions, size);\n}\n\nfunction parseHydrogenJs(result)\n{\n    // fixme:\n    // this parsing often assumes there's >=2 elements\n\n    // this \"zero\" here is presumably an artefact of xml --> json representation\n    const instrumentElements = result.song.instrumentList[0].instrument;\n\n    // instruments\n    // [  { id, name } ]\n    const instrumentArray = Array.from(\n      instrumentElements,\n      function(element){\n        const instrumentComponent = element.instrumentComponent[0];\n        let inst = {\n          \"id\" : parseInt(element.id),\n          \"name\" : element.name[0],\n           \"volume\" : parseFloat(element.volume),\n           \"muted\" : element.isMuted[0] === \"true\",\n           \"gain\" : parseFloat(element.gain),\n           \"drumkit\" : element.drumkit[0]\n        };\n        if( \"layer\" in instrumentComponent )\n        {\n          inst[\"filename\"] = instrumentComponent.layer[0].filename[0];\n        }\n        return inst;\n      }\n    );\n\n    const patternElements = result.song.patternList[0].pattern;\n    // patterns\n    // [  { name, size, notes } ]\n    const patternArray = Array.from(\n      patternElements,\n      function(element){\n        const noteElements = element.noteList[0].note;\n        const patternSize = parseInt(element.size);\n        let notes = [];\n        if( noteElements )\n        {\n          // notes\n          // [ {position, instrument(id}]\n          notes = Array.from(\n            noteElements,\n            function(noteElement){\n              return {\"position\" : parseInt(noteElement.position), \"instrument\" : parseInt(noteElement.instrument)};\n            }\n          );\n\n          // hydrogen permits you to have notes that reach past the pattern size,\n          // they then get revealed when you extend the pattern,\n          // here's an easy point to get rid of them, we don't want them to factor into any calculations\n          notes = notes.filter( n => n.position < patternSize );\n        }\n        return {\n          \"size\" : patternSize,\n          \"name\" : element.name[0],\n          \"notes\" : notes\n        };\n      }\n    );\n\n    // transform pattern to a managable data\n    const patternsWithTracks = Array.from(\n      patternArray,\n      function(pattern)\n      {\n        const resolution = calculatePatternResolution(pattern, pattern.size);\n        let instrumentTracks = {};\n        for( const instrument of instrumentArray )\n        {\n          const relevantNotes = pattern.notes.filter(\n            note => (note.instrument === instrument.id)\n          );\n          const relevantHits = Array.from(\n            relevantNotes,\n            note => note.position\n          );\n          instrumentTracks[ instrument.id.toString() ] = track.fromPositions( relevantHits, pattern.size, resolution);\n        }\n        pattern.resolution = resolution;\n        pattern.instrumentTracks = instrumentTracks;\n        return pattern;\n      }\n    );\n\n    // todo: refactor into (at least one) separate function\n    if(result.song.virtualPatternList)\n    {\n      // so unfortunately, virtualPatternGroup represents a directional graph and we have to build\n      // the tree of dependencies for each node, we implement this in a very simplistic way\n      // let's build a mapping( name -> [ names ] ) and continue to resolve it\n      // until we're done\n      const virtualPatternGroups = result.song.virtualPatternList[0].pattern;\n      if( virtualPatternGroups )\n      {\n        // each element looks like\n        //\n        // <pattern>\n        // <name>p2-a-djembe</name>\n        // <virtual>p2-a-bass</virtual>\n        // <virtual>p2-snare</virtual>\n        // </pattern>\n\n        let patternToRelated = {};\n\n        // record initial relations\n        for( const virtualGroup of Array.from(virtualPatternGroups) )\n        {\n          const rootPatternName = virtualGroup.name[0];\n          const relatedPatterns = Array.from(virtualGroup.virtual);\n          patternToRelated[rootPatternName] = new Set(relatedPatterns);\n        }\n\n        // expand connections until our object stops changing, brute-force\n        // this is a relatively large limit but is better than the potential of an infinite loop\n        // I think 3 layers would be pushing this feature\n        const MAX_ITERATIONS = 20;\n        for(let iteration = 0; iteration < MAX_ITERATIONS; ++iteration)\n        {\n          let expandedObject = {};\n          // we could do a check at the end of each loop, but it's easier to track object equality this way\n          let objectHasExpanded = false;\n          for(const [root, related] of Object.entries(patternToRelated))\n          {\n            let expandedNodeSet = new Set(related);\n            for( const node of expandedNodeSet )\n            {\n              if( node in patternToRelated )\n              {\n                // set union\n                expandedNodeSet = new Set([...expandedNodeSet, ...patternToRelated[node]]);\n              }\n            }\n            objectHasExpanded = objectHasExpanded || ( expandedNodeSet.size !== related.size );\n            expandedObject[ root ] = expandedNodeSet;\n\n          }\n          // exit if no change\n          if(!objectHasExpanded)\n          {\n            break;\n          }\n          // throw if we've failed to resolve all the connections by now, morelikely something has gone wrong\n          if( iteration === MAX_ITERATIONS )\n          {\n            throw new Error(\"Reached max virtual_pattern recursion depth.\");\n          }\n          // otherwise update mapping and continue\n          patternToRelated = expandedObject;\n        }\n\n        for( const [rootPatternName, relatedPatternSet] of Object.entries(patternToRelated) )\n        {\n          // could do filter, and assert on length?\n          let rootPattern = patternsWithTracks.find(p => p.name === rootPatternName);\n          for( const patternToMergeName of relatedPatternSet )\n          {\n            const patternToMerge = patternsWithTracks.find(p => p.name === patternToMergeName );\n            for( const [id, t] of Object.entries(patternToMerge.instrumentTracks) )\n            {\n              if( id in rootPattern.instrumentTracks )\n              {\n                const merged = rootPattern.instrumentTracks[ id ].aggregate( t );\n                // we match hydrogen's implementation here and discard values past the length of the original track\n                merged.rep.length = rootPattern.size  / merged.resolution;\n                rootPattern.instrumentTracks[ id ] = merged;\n              }\n              else\n              {\n                // ensure track is the appropriate length & res\n                let copiedTrack = t.format(rootPattern.resolution);\n                copiedTrack.length = rootPattern.size  / rootPattern.resolution;\n                rootPattern.instrumentTracks[id] = copiedTrack;\n              }\n            }\n          }\n          // reassess resolution and apply to all tracks\n          // this may not be necessary but it's probably nice\n          const resolution = calculatePatternResolution(rootPattern, rootPattern.size);\n          rootPattern.resolution = resolution;\n          for( const [id, track] of Object.entries(rootPattern.instrumentTracks) )\n          {\n            // ensure that\n            rootPattern[id] = track.format( resolution );\n          }\n        }\n\n      }\n    }\n\n    return {\n      \"instruments\" : instrumentArray,\n      \"patterns\" : patternsWithTracks\n    }\n}\n\nasync function parseHydrogenPromise(xmlString)\n{\n  let parser = new xml2js.Parser();\n\n  return parser.parseStringPromise(xmlString).then(parseHydrogenJs);\n}\n\nconst moduleExports = { parseHydrogenPromise };\n\nexport default moduleExports;\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport SongLoaders from \"./SongLoaders\"\nimport * as SongStorage from \"./SongStorage\";\nimport SongView from \"./SongView\"\nimport {decodeState} from \"./SongStorage\";\nimport hash from \"object-hash\";\nimport h2 from \"./h2\"\n\nfunction WaitingMessage(props)\n{\n  return (\n    <div className=\"App\">\n      <div>\n        <CircularProgress color=\"secondary\"/>\n        <Typography> Loading song... </Typography>\n      </div>\n    </div>\n  );\n}\n\nclass ExampleSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load example data. \" +\n        \"This likely represents a bug - please raise an issue in github!\"\n      });\n    };\n    SongLoaders.LoadExample().then(\n      (songData) => {\n        this.setState(\n          { songData : songData }\n        );\n      }\n    ).catch(navigateHomeWithError);\n  }\n\n  render()\n  {\n    return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\nfunction SongNameFromFile(filename)\n{\n  if(filename === null || filename === undefined)\n  {\n    return null;\n  }\n  if( filename.includes(\".\") )\n  {\n    const songTitle = filename.split('.').slice(0, -1).join('.');\n    return songTitle;\n  }\n  else\n  {\n    return filename;\n  }\n}\n\nclass FileImportSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n    if(!this.props.filename)\n    {\n      // silently navigate home\n      let history = this.props.history;\n      history.push({pathname: '/'});\n      return;\n    }\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load \" + this.props.filename + \". \" +\n        \"If you're sure this is a Hydrogen file, please consider raising an issue in github!\"\n      });\n    };\n    if(this.props.filename.includes(\"h2song\"))\n    {\n      // assume it's a tabit file!\n        h2.parseHydrogenPromise(this.props.content)\n          .then(h => {\n            return SongLoaders.LoadJSON(\n              h,\n              SongNameFromFile(this.props.filename),\n              this.props.filename,\n              true // fromHydrogen\n            );\n          })\n          .then(setState)\n          .catch(navigateHomeWithError);\n    }\n    else\n    {\n      Promise.resolve(this.props.content)\n        .then((content)=>{\n          // in the case of localStorage API content will be an object already\n          return typeof(content) === \"string\" ? JSON.parse(content) : content;\n        })\n        .then( data => {\n          return SongLoaders.LoadJSON(\n            data,\n            data.songName ? data.songName : SongNameFromFile(this.props.filename),\n            this.props.filename,\n            false // fromHydrogen\n          );\n        } )\n        .then(setState)\n        .catch(navigateHomeWithError);\n    }\n  }\n\n  render()\n  {\n    return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\n\nclass SongStorageSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load song \" + this.props.songID + \" from database. \" +\n        \"This could represent a corrupted entry/a bug in our software. Please consider raising an issue in github!\"\n      });\n    };\n    SongStorage.get(this.props.songID)\n      .then( data => {\n        return SongLoaders.LoadJSON(\n          data,\n          data.songName,\n          data.loadedFile,\n          false // fromHydrogen\n        );\n      } )\n      .then(setState)\n      .catch(navigateHomeWithError);\n  }\n\n  render()\n  {\n    return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\nclass LocalStorageSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load recently viewed song \" + this.props.name + \". \"\n      });\n    };\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n\n    const history = SongStorage.getLocalHistory();\n    const matches = history.filter( song => ( song.id === this.props.songID ) );\n    if(matches.length < 1)\n    {\n      // provide no error message, its not currently logged\n      navigateHomeWithError();\n    }\n\n    Promise.resolve(matches[0])\n      .then( (song)=>{\n        const stateHash = hash(song.content);\n        if( stateHash !== this.props.songID )\n        {\n          throw new Error(\"Hash did not match\");\n        }\n        const decodedState = decodeState(song.content);\n        return decodedState;\n      }).then( data => {\n        return SongLoaders.LoadJSON(\n          data,\n          data.songName,\n          data.songName,\n          false // fromHydrogen\n        );\n      }).then(setState)\n      .catch(navigateHomeWithError);\n    }\n\n    render()\n    {\n      return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                                 : <WaitingMessage />;\n    }\n}\n\nexport {\n  ExampleSongView,\n  FileImportSongView,\n  SongStorageSongView,\n  LocalStorageSongView\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport TitleScreen from \"./TitleScreen\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport * as SongStorage from \"./SongStorage\";\nimport {\n  ExampleSongView,\n  FileImportSongView,\n  SongStorageSongView,\n  LocalStorageSongView\n} from \"./LazySongViews\";\n\nexport default function Routes(props) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = responsiveFontSizes( React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: '#d7ccc8'\n          },\n          secondary: {\n            main: '#00acc1'\n          }\n        },\n      }),\n    [prefersDarkMode]\n  ) );\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props)=>{\n              return <TitleScreen\n                history={props.history}\n                location={props.location}\n                songHistory={SongStorage.getLocalHistory()}\n                error={props.location.error}\n              />\n            }}\n          />\n          <Route\n            exact\n            path=\"/example\"\n            render={(props)=>{\n              return <ExampleSongView\n                history={props.history}\n                location={props.location}\n              />\n            }}\n          />\n          <Route\n            path=\"/song/:songID\"\n            render={(props)=>{\n              return <SongStorageSongView\n                history={props.history}\n                location={props.location}\n                songID={props.match.params.songID}\n              />\n            }}\n          />\n          <Route\n            path=\"/import\"\n            render={(props)=>{\n              return <FileImportSongView\n                history={props.history}\n                location={props.location}\n                filename={props.location.filename}\n                content={props.location.content}\n              />\n            }}\n          />\n          <Route\n            path=\"/recent/:songID\"\n            render={(props)=>{\n              return <LocalStorageSongView\n                history={props.history}\n                location={props.location}\n                songID={props.match.params.songID}\n              />\n            }}\n          />\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  )\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nclass notation\n{\n\n  static DEFAULT_FORMAT_CONFIG = {\n    \"restMark\" : \"-\",\n    \"beatMark\" : \"|\",\n    \"lineMark\" : \"|\",\n    \"numberRestMark\" : \"-\",\n    \"beatResolution\" : 48,\n    \"showBeatMark\" : true,\n    \"showBeatNumbers\" : true,\n    // lineResolution is typically determined on a per-pattern basis\n    // however it used to be in here, and some tests still rely on this\n    \"lineResolution\" : 48 * 8\n  };\n\n  static FORMAT_CONFIG_STRINGS = [\n    [\"restMark\",[\"-\", \".\", \" \"]],\n    [\"numberRestMark\",[\"-\", \".\", \" \"]]\n  ];\n\n  static FORMAT_CONFIG_BOOLS = [\n    \"showBeatMark\",\n    \"showBeatNumbers\"\n  ];\n\n  static validateConfig(config, patternResolution) {\n    if( patternResolution != null && ( config.beatResolution % patternResolution ) !== 0 )\n    {\n      throw new Error(\"patternResolution doesn't divide beatResolution\");\n    }\n    if( config.lineResolution <= 0 )\n    {\n      throw new Error(\"config.lineResolution must be greater than zero\");\n    }\n  }\n\n  static resolveConfig(formatConfig)\n  {\n    for( const propName of Object.keys(formatConfig))\n    {\n      if(!notation.DEFAULT_FORMAT_CONFIG.hasOwnProperty(propName))\n      {\n        throw new Error(\"passed unrecognised property \" + propName);\n      }\n    }\n\n    return Object.assign( Object.assign({}, notation.DEFAULT_FORMAT_CONFIG), formatConfig );\n  }\n\n  static chunkString(str, chunkSize) {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    return str.match(new RegExp('.{1,' + chunkSize + '}', 'g'));\n  }\n\n  static chunkArray(a, chunkSize)\n  {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    let chunks = [];\n    for( let i = 0; i < a.length; i += chunkSize )\n    {\n      chunks.push( a.slice(i, Math.min( i + chunkSize, a.length) ) );\n    }\n    return chunks;\n  }\n\n  static createNumberMarker(numberRestMark, beatResolution, patternResolution, lineLength)\n  {\n    if( lineLength <= 0 )\n    {\n      throw new Error(\"lineLength <= 0\");\n    }\n\n    if( ( beatResolution % patternResolution ) !== 0)\n    {\n      throw new Error(\"patternResolution \" + patternResolution.toString() + \" does not divide beatResolution \" + beatResolution.toString());\n    }\n\n    let beatCount = Math.ceil(lineLength / beatResolution);\n    let numberMarkerArray = Array.from( Array(lineLength / patternResolution), e => numberRestMark );\n\n    for( let beat = 0; beat < beatCount; beat++ )\n    {\n      numberMarkerArray[ beat * ( beatResolution / patternResolution ) ] = ( (beat+1) % 10 ).toString();\n    }\n    return numberMarkerArray;\n  }\n\n  static formatLineWithMarkers(config, line, patternResolution, asHTML)\n  {\n    notation.validateConfig(config);\n\n    const beatChunkSize = config.beatResolution / patternResolution;\n\n    const padZero = (n, width) => {\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    };\n    const formatSymbolAsSpans = (symbol, numericPosition) => {\n      return \"<span class='note-\" + padZero(numericPosition, 4) + \"'>\" +  symbol + \"</span>\";\n    };\n\n    const formatSymbol = asHTML ? formatSymbolAsSpans : (symbol, numericPosition) => symbol;\n\n    let formattedLine = \"\";\n    for( let index = 0; index < line.length; ++ index )\n    {\n      const numericPosition = patternResolution * index;\n      formattedLine += formatSymbol(line.charAt(index), numericPosition);\n    }\n\n\n    const lineWithBeats = config.showBeatMark ? notation.chunkString(formattedLine, beatChunkSize * formatSymbol(\"X\", 0).length).join(config.beatMark) : formattedLine;\n    // note: we choose to always show the lineMarker even if it doesn't match the line resolution\n    return config.lineMark + lineWithBeats + config.lineMark;\n  }\n\n  static defaultLineResolution(\n    trackDict,\n    beatResolution\n  )\n  {\n    const instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return 48 * 8;\n    }\n    const trackLength = instrumentTracks[0].length();\n    const beatCount = trackLength / beatResolution;\n    if( beatCount <= 12 )\n    {\n      return trackLength;\n    }\n    else if( beatCount > 32 )\n    {\n      return 48 * 16; // let's just be laazeee\n    }\n    else\n    {\n      // let's just apply a simple mapping, rather than think through logics\n      const mapping = [\n        trackLength, // 13\n        trackLength / 2, // 14\n        trackLength / 3, // 15\n        trackLength / 2, // 16\n        trackLength, // 17\n        trackLength / 3, // 18\n        trackLength, // 19\n        trackLength / 4, // 20\n        trackLength / 3, // 21\n        trackLength / 2, // 22\n        trackLength, // 23\n        trackLength / 3, // 24\n        trackLength / 5, // 25\n        trackLength, // 26\n        trackLength / 3, // 27\n        trackLength / 4, // 28\n        trackLength, // 29\n        trackLength / 6, // 30\n        trackLength, // 31\n        trackLength / 4, // 32\n      ];\n      return mapping[ beatCount - 13 ];\n    }\n  }\n\n  static guessPerPatternSettings(\n    trackDict\n  )\n  {\n    return {\n      \"lineResolution\" : notation.defaultLineResolution(trackDict, 48), // beatResolution (default)\n      \"beatResolution\" : 48 // should cover all the cases hopefully\n    };\n  }\n\n  static formatPatternString(\n    instrument,\n    trackDict,\n    restMark\n  )\n  {\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    const patternSize = instrumentTracks[0].length();\n    const patternResolution = instrumentTracks[0].resolution;\n    const notationLength = patternSize / patternResolution;\n\n    let patternArray = Array(notationLength).fill(restMark);\n    for( let charIndex = 0; charIndex < patternArray.length; ++charIndex)\n    {\n      // todo: handle collisions\n      for( const [trackID, trackSymbol] of Object.entries(instrument) )\n      {\n        const trackInstance = trackDict[trackID];\n        if( trackInstance != null && trackInstance.rep[charIndex] === 1 )\n        {\n          patternArray[charIndex] = trackSymbol;\n        }\n      }\n    }\n    return patternArray;\n  }\n\n  static fromInstrumentAndTrack(\n    instrument,\n    trackDict,\n    asHTML,\n    formatConfig = {}\n  )\n  {\n    const config = notation.resolveConfig(formatConfig);\n\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    // turn the tracks, into one char string\n    const patternArray = notation.formatPatternString( instrument, trackDict, config.restMark );\n    const patternString = patternArray.join(\"\");\n    const patternResolution = instrumentTracks[0].resolution;\n    const patternSize = instrumentTracks[0].length();\n\n    // handle lines and beatMarkers\n    let lineArray = notation.chunkString( patternString, config.lineResolution / patternResolution );\n\n    let formattedLineArray = [];\n    // add numbers on the first line\n    if( config.showBeatNumbers )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers(\n        config,\n        notation.createNumberMarker(config.numberRestMark, config.beatResolution, patternResolution, Math.min(config.lineResolution, patternSize)).join(\"\"),\n        patternResolution,\n        asHTML\n      ) );\n    }\n    for( let i = 0; i < lineArray.length; ++i )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( config, lineArray[i], patternResolution, asHTML ) );\n    }\n\n    return formattedLineArray.join(\"\\n\");\n  }\n\n  static getPatternLength(pattern)\n  {\n    let trackLength = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        trackLength = Math.max( trackLength, t.length() );\n    }\n    return trackLength;\n  }\n\n  static getPatternResolution(pattern)\n  {\n    let resolution = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        resolution = Math.min( resolution, t.resolution );\n    }\n    return resolution;\n  }\n\n};\n\nexport default notation;\n","import hash from \"object-hash\";\nimport zlib from \"zlib\";\nimport { saveAs } from 'file-saver';\n\nconst storageAvailable = (type) => {\n    // this is code copied from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage;\n    try {\n        storage = window[type];\n        let x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch(e) {\n    // accept certain types of exceptions as legitimate consequences of the feature working\n        return e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n};\n\nconst encodeState = (songData) =>\n{\n  // json\n  const js = JSON.stringify(songData);\n  // compress\n  const compressedState = zlib.deflateSync(js).toString(\"base64\");\n  return { state : compressedState };\n}\n\nconst decodeState = (state) =>\n{\n  const binaryBuffer = new Buffer(state.state, \"base64\");\n  const decompressedString = zlib.inflateSync(binaryBuffer);\n  return JSON.parse(decompressedString);\n};\n\nconst JSON_BIN_API = \"https://api.jsonbin.io\";\nconst JSON_BIN_API_BINS = JSON_BIN_API + \"/b\";\nconst JSON_BIN_API_SECRET = \"$2b$10$Z2eAUT2PfRKn5RB55/Y30ujW8aUB1CCgRuUua3Jo9JX2WTetZRfIG\";\nconst TABIT_SONG_COLLECTION_ID = \"60218fa606934b65f53046ad\";\n\nconst put = (exportState, name) =>\n{\n  const binName = name ? name : exportState.songName;\n  // names are limited to 128 characters, let's be safe\n  const binShort = binName.slice(0, 64);\n  const stateToShare = encodeState(exportState);\n  const metadata = {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      \"secret-key\": JSON_BIN_API_SECRET,\n      \"collection-id\": TABIT_SONG_COLLECTION_ID,\n      private: false,\n      name: binShort\n    },\n    body: JSON.stringify(stateToShare)\n  };\n  return fetch( JSON_BIN_API_BINS, metadata )\n    .then(response => {\n      if(!response.ok)\n      {\n        throw new Error(\"Failed to upload song\");\n      }\n      else\n      {\n        return response.json();\n      }\n    }).then(data => {\n      return data.id;\n    });\n}\n\nconst get = (binID) =>\n{\n  const metadata = {\n    headers: { 'Content-Type': 'application/json' },\n  };\n  return fetch( JSON_BIN_API_BINS + \"/\" + binID, metadata )\n    .then( response => {\n      if(!response.ok)\n      {\n        throw new Error(\"Failed to upload song\");\n      }\n      else\n      {\n        return response.json();\n      }\n    } )\n    .then( js => {\n      return decodeState(js);\n    });\n};\n\nconst getLocalHistory = () => {\n  if(!storageAvailable('localStorage'))\n  {\n    return [];\n  }\n  const jsonHistory = localStorage.getItem(\"tabit-history\");\n  const songHistory = jsonHistory ? JSON.parse(jsonHistory).sort( (a,b) =>(b.date - a.date) ) : [];\n  return songHistory;\n};\n\nconst saveToLocalHistory = (exportState) => {\n    const stateToShare = encodeState(exportState);\n    const stateHash = hash(stateToShare);\n    let history = getLocalHistory();\n    const relevantHistory = history.filter( song => ( song.id === stateHash && song.name === exportState.songName ) );\n    if( relevantHistory.length !== 0 )\n    {\n      // found at least one history entry identical to this one ...\n      // update one, so it's the most recent entry\n      relevantHistory[0].date = Date.now();\n    }\n    else\n    {\n      // add history entry\n      const historyEntry = {\n        name: exportState.songName,\n        id: stateHash,\n        date: Date.now(),\n        content: stateToShare\n      };\n      history.push(historyEntry);\n    }\n\n    // resort & cap how many files we remember\n    const restrictedHistory = history.sort( (a,b) =>(b.date - a.date)  ).slice(0, 10);\n    localStorage.setItem(\"tabit-history\", JSON.stringify(restrictedHistory));\n};\n\nconst download = (exportState) => {\n  const destFilename = exportState.songName + \".tabit\";\n  const js = JSON.stringify(exportState, null, 4);\n  const blob = new Blob([js], {type: \"application/json\"});\n  saveAs(blob, destFilename);\n};\n\nexport {\n  decodeState,\n  get,\n  put,\n  download,\n  getLocalHistory,\n  saveToLocalHistory\n};\n","// Mobile.js\n\nfunction  isMobile()\n{\n  // the simple version from\n  // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n  const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n  const toMatch = [\n      /Android/i,\n      /webOS/i,\n      /iPhone/i,\n      /iPad/i,\n      /iPod/i,\n      /BlackBerry/i,\n      /Windows Phone/i\n  ];\n\n  return toMatch.some((toMatchItem) => {\n      return userAgent.match(toMatchItem);\n  });\n}\n\nexport { isMobile };","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: theme.palette.secondary\n  }\n}));\n\nfunction TabitBar(props) {\n  const classes = useStyles(props);\n  // we need to render \"null\" appbars for spacing purposes\n  // support them here, so that we can maintain layout parity in one place\n  if(props.placeholder)\n  {\n\n    return (\n\n      // <AppBar position=\"fixed\" // todo: I'd like to include the AppBar,\n      // className={classes.root}> // but it doesn't have the correct effect#\n        <Toolbar variant=\"dense\">\n        </Toolbar>\n      // </AppBar>\n    );\n  }\n\n  return (\n    <AppBar position=\"fixed\"\n      className={classes.root}\n    >\n\n      <Toolbar variant=\"dense\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open pattern list\"\n          edge=\"start\"\n          onClick={props.patternsToggle}\n          >\n          <MenuIcon />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"home\"\n          edge=\"start\"\n          component={Link}\n          to='/'\n          >\n          <HomeIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap style={{\"flexGrow\": 1, \"textOverflow\": \"ellipsis\"}}>\n          {props.title}\n        </Typography>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"download\"\n          edge=\"start\"\n          onClick={props.onDownload}\n          >\n          <SaveAltIcon />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"download\"\n          edge=\"start\"\n          onClick={props.onShare}\n          >\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open settings\"\n          edge=\"end\"\n          onClick={props.settingsToggle}\n        >\n          <SettingsIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default React.memo(TabitBar);\n"],"sourceRoot":""}
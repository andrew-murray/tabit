{"version":3,"sources":["utilities.js","formatSettings.js","PatternDrawer.js","SettingsDrawer.js","notation.js","Mobile.js","FileImport.js","History.js","TitledDialog.js","TitleScreen.js","instrumentation.js","SongLoaders.js","Part.js","PartWithTitle.js","Pattern.js","PlaybackControls.js","RenameDialog.js","instrumentConfig.js","Audio.js","ToneController.js","SharingDialog.js","CustomTransferList.js","PatternCreateDialog.js","SongView.js","h2.js","LazySongViews.js","Routes.js","serviceWorker.js","index.js","SongStorage.js","track.js","TabitBar.js"],"names":["calculateResolution","positions","size","implicitPositions","concat","b","allNotesPass","Error","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","camelToReadable","s","spacedString","replace","toUpperCase","slice","FormatSettings","props","classes","tokenStateToItem","value","tokenItemToState","handleOptionChange","name","local","onChange","key","handleCheckedChange","event","target","checked","createOptionMenu","options","itemToState","stateToItem","localSetting","idString","variant","className","id","style","width","labelId","settings","e","textAlign","map","op","lineLengths","resolution","beatResolution","pattern","length","push","includes","sort","a","beatResolutions","c","lineResolution","primaryResolutions","root","notation","FORMAT_CONFIG_STRINGS","reduce","prev","curr","FORMAT_CONFIG_BOOLS","control","label","v","toString","parseInt","r","DefaultSettings","DEFAULT_FORMAT_CONFIG","PatternListItem","selectPattern","index","onRemove","selectCallback","React","useCallback","removeCallback","stopPropagation","preventDefault","button","onClick","primary","edge","fontSize","DrawerContent","Fragment","isMobile","placeholder","overflow","patterns","String","onAdd","MemoizedDrawerContent","memo","PatternDrawer","iOS","process","browser","test","navigator","userAgent","disableBackdropTransition","disableDiscovery","undefined","open","onOpen","onClose","ModalProps","keepMounted","SettingsDrawer","patternDetails","getPatternLength","anchor","animating","interactive","onSave","onShare","config","patternResolution","formatConfig","Object","keys","propName","hasOwnProperty","assign","str","chunkSize","match","RegExp","chunks","i","Math","min","numberRestMark","lineLength","beatCount","ceil","numberMarkerArray","Array","from","beat","line","asHTML","validateConfig","beatChunkSize","formatSymbol","symbol","numericPosition","n","join","formattedLine","charAt","lineWithBeats","showBeatMark","chunkString","beatMark","lineMark","trackDict","instrumentTracks","values","trackLength","defaultLineResolution","instrument","restMark","exampleTrack","patternSize","patternArray","fill","charIndex","entries","trackID","trackSymbol","trackInstance","rep","resolveConfig","formatPatternString","patternString","lineArray","formattedLineArray","showBeatNumbers","formatLineWithMarkers","createNumberMarker","t","max","trackArray","k","clone","fromEntries","totalLength","trackKeys","console","log","tracks","Map","track","fromPositions","patternA","patternB","optimalResolution","totalSize","instrumentKeys","Set","combine","vendor","window","opera","some","toMatchItem","detectMobile","FileImport","hiddenFileInput","createRef","fileObject","files","reader","FileReader","onload","loadEvent","onImport","file","content","result","readAsText","this","accept","buttonProps","Button","current","click","type","hidden","ref","Component","height","maxWidth","maxHeight","History","items","data","Paper","Typography","Divider","List","x","ListItem","ListItemText","secondary","Date","date","toLocaleDateString","renderRow","TitledDialog","Dialog","DialogTitle","title","DialogContent","DialogContentText","children","DialogActions","TitleScreen","state","error","songHistory","componentDidMount","setState","SongStorage","controls","navigate","filename","song","songName","licenseBanner","href","withStyles","position","bottom","zIndex","drawer","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","DEFAULT_INSTRUMENT_SYMBOLS","normalizeInstrumentsForFiguring","instruments","inst","nInst","toLowerCase","manageAccentOrGhost","instrumentName","accentSymbol","ghostSymbol","outputInstruments","t0","t1","zeroLouder","volume","gain","mapping","activeInstruments","nonTrivialInstruments","p","instrumentID","empty","add","defaultSymbolForSingleInstrument","symbolConfig","lowerName","figureInstruments","instrumentsRaw","output","worthwhileInstruments","relevantTracks","filter","has","trackIsClick","tomIndex","bassIndex","collated","candidate","floor","clickTrack","hitTrack","instrumentIsTom","rawInstrumentName","lastTrack","figureClickyInstruments","djembeTracks","slapArray","toneArray","bassArray","djembeMapping","figureDjembes","figureSnares","figureShakers","instrumentUsed","createInstrumentMask","instrumentIndex","instrumentMask","baseInstrumentIndex","baseInstrumentId","targetInstrumentIndex","guessShortName","substr","SongData","sourceFile","formatSettings","patternSettings","LoadJSON","jsonData","fromHydrogen","Promise","resolve","patternData","replacedTracks","trackData","patternWithTracks","createPatternsFromData","upgradeOldInstruments","prepHydrogenVolumes","active","activeInstrumentation","guessPerPatternSettings","figurePatternSettings","moduleExports","LoadExample","kuva","styles","fontFamily","PreTypography","DensePreTypography","compareArray","Part","exampleTrackID","patternLines","chunkArray","beatsPerLine","lineIndices","Typo","dense","interactiveStyles","cursor","formatLine","startBeats","prefix","showRepeatCount","beats","makeClasses","sb","component","editable","modifyPatternLocation","placesToEdit","numberLine","beatChunks","prefixIndent","repeat","repeatMatrix","lineIndex","totalRepeats","compareIndex","countRepeats","lineElements","someLinesMatch","partial_sum","to_add","startPoint","repeatLine","showRepeats","PartWithTitle","Title","headingLevel","defaultLevel","safeHeading","getTitleType","Pattern","instrumentIndices","shortNameLengths","shortName","maxShortNameLength","tracksForResolution","instrumentIDs","instID","compactDisplay","ActivePattern","patternTime","prevBeat","force","prevElements","getElementsByClassName","classList","remove","elements","prevProps","prevState","snapshot","changePatternTime","calculateBeat","nextProps","nextState","whiteSpace","paddingLeft","paddingRight","color","main","PlaybackControls","tooltipMsg","playTooltip","disabled","stopTooltip","Tooltip","IconButton","onPlay","disableRipple","disableFocusRipple","onStop","Grid","container","item","xs","Slider","defaultValue","step","tempo","onTempoChange","valueLabelDisplay","RenameDialog","currentValue","cancel","onCancel","confirm","currentName","trim","alert","instruction","TextField","fullWidth","onKeyDown","keyCode","autoFocus","ThinFormControlLabel","marginLeft","marginRight","FormControlLabel","InlinableIconButton","NoDividerCenterTableCell","borderBottom","paddingBottom","TableCell","CenterTableCell","VolumeWidget","useState","setActive","sliderValue","setSliderValue","muted","setMuted","sliderRef","useRef","FixedHeightStylings","top","SliderStyles","IconStyles","time","onClickNHold","start","dispatchEvent","nativeEvent","onEnd","onMuteEvent","orientation","setVolume","RawInstrumentEditDialog","currentSymbol","InstrumentTable","setOpen","createCell","y","align","Checkbox","oldInstrumentIndex","findIndex","dstInstrumentIndex","oldInstrument","replacedSrcInstrument","dstInstrument","replacedInstruments","handleChange","createMatchingRow","TableRow","scope","onEditRow","editRow","onRemoveRow","removeRow","Table","table","TableHead","showAdvanced","onEditColumn","editColumn","onVolumeEvent","TableBody","onAddRow","InstrumentConfig","useTheme","editingSymbol","setEditingSymbol","renamingInstrument","setRenamingInstrument","endEditingSymbol","resolvedSymbol","extraInstrument","renameInstrument","getSymbol","TableContainer","removeInstrument","Audio","AudioContext","webkitAudioContext","minResolution","combined","peakValue","channel","numberOfChannels","combinedChannel","getChannelData","sample","abs","peakAmplitude","context","sounds","determineTrackLength","trackLengthSamples","totalSamples","samplesPerHydrogen","createBuffer","selected","audioBuffer","audioChannel","trackPoints","toPoints","sampleStart","normalizeAudioBuffer","buffer","source","createBufferSource","loop","playbackRate","connect","destination","AUDIO_DELAY","setAudioDelay","DRUMKITS","convertNormalToAudible","pow","ToneController","onTimeChange","latencyHint","onLoadError","updatePattern","determineMinResolution","currentPatternName","updatedSequence","createSequenceForPattern","sequence","_part","mute","removePattern","patternName","patternNames","patternNameSet","Tone","samples","currentPattern","toDestination","onPatternTimeChange","bpm","sampleCount","expectedSampleCount","failures","populateSamples","sortedFailures","drumkit","noMatch","otherDrumkit","otherName","createSortedUnique","plural","message","failureIndex","stop","selectedInstrument","clampedVolume","player","relativeUrl","drumkitName","chooseAppropriateUrlForInstrument","patternLength","callback","sampleSource","samplesReady","indexFromStart","trace","sampleData","schedule","notePosition","createSequenceCallback","seq","sequences","oldPatternName","oldLength","timeFromBarEnd","loopEnd","toSeconds","stopToChange","queueTransition","nextSequence","enableNewTrack","setLoopPoints","playing","scheduleOnce","play","then","now","set","SharingDialog","url","copy","TransferList","selectedItems","setChecked","customList","checkable","role","itemIndex","newChecked","handleChecked","ListItemIcon","tabIndex","inputProps","justify","direction","newValues","createStyles","PatternCreateDialog","setPatternName","patternRecipe","setPatternRecipe","createExpanded","setCreateExpanded","combineExpanded","setCombineExpanded","timeSignatureNumString","setTimeSignatureNumString","timeSignatureDenom","setTimeSignatureDenom","setPatternResolution","closeAndCommit","commit","recipe","patternChoices","invalidPatternName","indexOf","timeSignatureNum","timeSignatureNaN","isNaN","timeSignatureNonPositive","createOptionsCommitable","combineOptionsCommitable","canCommit","Accordion","expanded","enabled","AccordionSummary","expandIcon","AccordionDetails","FormGroup","row","helperText","Select","IconComponent","MenuItem","flexDirection","Box","alignSelf","makeResolvedSettings","memoizeOne","globalSettings","resolvedSettings","SongView","selectedPattern","songData","settingsOpen","patternsOpen","sharingDialogOpen","patternCreateDialogOpen","errorAlert","locked","audio","setError","indices","ix","newPatterns","updatedSongData","samePatternIndex","boundedPatternIndex","oldActivePatternName","setActivePattern","cycleCellContent","modificationCells","representativeCell","e1","e2","clonePattern","currentActiveTrackIndex","entryIndex","queryPoint","targetTrackIndex","currentTrack","targetTrack","cell","setPoint","modifiedPatterns","addCombinedPattern","recipeIndex","combinePatterns","createNewPattern","timeSignatureTop","timeSignatureBottom","patternBars","representativePattern","repTrackKeys","createEmptyPattern","changeInstruments","sendVolumeEvent","setVolumeForInstrument","setMutedForInstrument","handleSettingsChange","change","updatedSettings","setAnimateCallback","createAnimateCallback","handlePatternsToggle","handleSettingsToggle","patternIndex","getExportState","songID","permanentUrl","origin","catch","err","onDownload","closePatternCreateDialog","openPatternCreateDialog","onHideView","closeSharingDialog","onSetTempo","setTempo","onToggleLocked","nowLocked","onToggleCompact","nowCompact","app","createController","addEventListener","nullCheck","currentBeatResolution","currentBeat","nextBeat","getTempo","teardown","animateCallback","removeEventListener","version","patternSpecifics","instrumentConfigColumns","Toolbar","TabitBar","settingsToggle","patternsToggle","onLockUnlock","compact","Snackbar","severity","autoHideDuration","Alert","AlertTitle","split","flexGrow","overflowX","calculatePatternResolution","notes","note","parseHydrogen","dom","instrumentElements","instrumentList","instrumentArray","element","instrumentComponent","parseFloat","isMuted","layer","layers","patternElements","patternList","noteElements","noteList","noteElement","patternsWithTracks","relevantNotes","relevantHits","virtualPatternList","virtualPatternGroups","patternToRelated","virtualGroup","rootPatternName","virtual","iteration","expandedObject","objectHasExpanded","related","expandedNodeSet","node","relatedPatternSet","rootPattern","find","patternToMergeName","patternToMerge","merged","aggregate","copiedTrack","format","xmlString","promise","reject","XMLParser","parse","parseHydrogenPromise","WaitingMessage","CircularProgress","ExampleSongView","SongLoaders","to","SongNameFromFile","FileImportSongView","navigateHomeWithError","h2","h","JSON","SongStorageSongView","loadedFile","LocalStorageSongView","matches","hash","decodeState","MakeTitleScreen","location","useLocation","useNavigate","locationState","MakeExample","MakeSongStorageSongView","useParams","MakeFileImportSongView","MakeLocalStorageSongView","TabitRoutes","prefersDarkMode","useMediaQuery","responsiveFontSizes","useMemo","createTheme","basename","ThemeProvider","CssBaseline","exact","path","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","encodeState","js","stringify","zlib","deflateSync","binaryBuffer","Buffer","decompressedString","inflateSync","JSON_BIN_API_BINS","JSON_BIN_API","put","exportState","binShort","stateToShare","metadata","method","headers","private","body","fetch","response","ok","json","get","binID","getLocalHistory","storage","setItem","removeItem","DOMException","code","storageAvailable","jsonHistory","localStorage","getItem","saveToLocalHistory","stateHash","history","relevantHistory","historyEntry","restrictedHistory","download","destFilename","blob","Blob","saveAs","count","other","_sumOverlapsOfArrays","hcf","formatResolution","pat","points","representPoints","arrayIndex","findHCF","resolutionToUse","pointsA","sizeA","pointsB","allPoints","Link","noWrap"],"mappings":"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","file":"static/js/main.c83251d9.chunk.js","sourcesContent":["// utilities.js\n\nfunction calculateResolution(positions, size)\n{\n  // hydrogen treats 48 as a beat\n  const basesToTry = [\n    48, // beat\n    24, // 1/2 beat\n    16, // 1/3 beat\n    12, // 1/4\n    8, // 1/6\n    6, // 1/8\n    4, // 1/12\n    3, // 1/16\n    2, // 1/24\n    1 // 1/48\n  ];\n\n  // note that, fundamentally the size of the pattern is a \"keypoint\"\n  // that needs to be properly recorded by the resolution\n  const implicitPositions = positions.concat( [size] );\n\n  for( const b of basesToTry )\n  {\n    let allNotesPass = true;\n    for( const p of implicitPositions )\n    {\n      if( (p % b) !== 0 )\n      {\n        allNotesPass = false;\n        break;\n      }\n    }\n    if(allNotesPass)\n    {\n      return b;\n    }\n  }\n  throw new Error(\"Failed to predict base\");\n}\n\nexport { calculateResolution };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport notation from \"./notation\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nfunction camelToReadable(s)\n{\n  const spacedString = s.replace(/([A-Z])/g, ' $1');\n  return spacedString[0].toUpperCase() + spacedString.slice(1);\n}\n\nfunction FormatSettings(props) {\n  const classes = useStyles(props);\n  // todo: change to multiple useState calls?\n\n  function tokenStateToItem(value)\n  {\n    return value === \" \" ? \"space\" : value;\n  }\n\n  function tokenItemToState(value)\n  {\n    return value === \"space\" ? \" \" : value;\n  }\n\n  // currently the only options which are pattern-local\n  // are supported by handleOptionChange\n\n  const handleOptionChange = (name, value, local) => {\n    // const updatedState = {...props.settings, [name]: value};\n    props.onChange({key: name, value: value, local: local});\n  };\n\n  const handleCheckedChange = (event) => {\n    // const updatedState = {...props.settings, [event.target.name]: event.target.checked};\n    props.onChange({key: event.target.name, value: event.target.checked, local: false});\n  };\n\n  function createOptionMenu(\n    name,\n    options,\n    itemToState = tokenItemToState,\n    stateToItem = tokenStateToItem,\n    localSetting = false\n  )\n  {\n    const idString = \"form-control-\" + name + \"-id\";\n    return (\n      <ListItem variant=\"filled\" className={classes.formControl} key={idString} id={idString} style={{width:\"75%\"}}>\n        <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"settings-option-{name}\">{name}</InputLabel>\n          <Select\n            labelId={\"settings-option-\" + name + \"-labelID\"}\n            id={\"settings-option-\" + name + \"-id\"}\n            value={stateToItem(props.settings[name])}\n            name={name}\n            onChange={(e) => handleOptionChange( e.target.name, itemToState(e.target.value), localSetting)}\n            style={{width:\"75%\", textAlign: \"center\"}}\n          >\n            {options.map((op) => <MenuItem key={\"settings-menu-item-\" + name + \"-\" + op} value={stateToItem(op)} style={{textAlign: \"center\"}}>{stateToItem(op)}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </ListItem>\n    );\n  };\n\n  function createBoolControl(name)\n  {\n    return (\n      <ListItem key={\"form-control-\" + name}>\n        <FormControlLabel\n          control={<Switch checked={props.settings[name]} onChange={handleCheckedChange} name={name} />}\n          label={camelToReadable(name)}\n          key={\"switch-\"+name}\n        />\n      </ListItem>\n    );\n  };\n\n  const resolutionToBeatString = (r) => ( r / props.settings.beatResolution ).toString();\n  const beatStringToResolution = (b) => props.settings.beatResolution * parseInt(b);\n\n  const candidateLineLengths = [ 2, 3, 4, 5, 6, 7, 8, 14, 16, 32 ];\n  let lineLengths = [];\n  for( const c of candidateLineLengths )\n  {\n    const resolution = c * 48;\n    if( (resolution % props.settings.beatResolution) === 0\n      && (resolution <= props.pattern.length)\n     )\n    {\n      lineLengths.push( resolution );\n    }\n  }\n\n  if( !lineLengths.includes( props.pattern.length ) )\n  {\n    lineLengths.push( props.pattern.length );\n    lineLengths.sort((a, b)=>{return a-b});\n  }\n\n  const candidateBeatResolutions = [24, 36, 48, 72, 96];\n  let beatResolutions = [];\n  for( const c of candidateBeatResolutions )\n  {\n    if( (c % props.pattern.resolution) === 0 && ( props.settings.lineResolution % c ) === 0)\n    {\n      beatResolutions.push( c );\n    }\n  }\n\n  const candidatePrimaryResolutions = [12, 16, 24, 36, 48];\n  let primaryResolutions = [];\n  for( const c of candidatePrimaryResolutions )\n  {\n    if( ( (c % props.pattern.resolution) === 0 || (props.pattern.resolution % c) === 0 ) && ( props.settings.lineResolution % c ) === 0)\n    {\n      primaryResolutions.push( c );\n    }\n  }\n  /*\n  // primaryResolution ~ not yet supported\n  {\n    createOptionMenu(\n      \"primaryResolution\",\n      primaryResolutions,\n      (v) => v.toString(), // stateToItem\n      (v) => parseInt(v), // itemToState\n      true\n    )\n  }\n  */\n  return (\n    <FormGroup className={classes.root}>\n      <List>\n        {notation.FORMAT_CONFIG_STRINGS.map( op => createOptionMenu( op[0], op[1] ) ).reduce((prev, curr) => [prev, curr])}\n        {notation.FORMAT_CONFIG_BOOLS.map( op => createBoolControl( op )).reduce((prev, curr) => [prev, curr]) }\n          <ListSubheader>{\"Pattern \" + props.pattern.name + \" Options\"} </ListSubheader>\n          {\n            createOptionMenu(\n              \"beatResolution\",\n              beatResolutions,\n              (v) => v.toString(), // stateToItem\n              (v) => parseInt(v), // itemToState\n              true\n            )\n          }\n          {createOptionMenu(\n            \"lineResolution\",\n            lineLengths,\n            beatStringToResolution,\n            resolutionToBeatString,\n            true // localSetting\n          )}\n        </List>\n      </FormGroup>\n  );\n}\n\nconst DefaultSettings = notation.DEFAULT_FORMAT_CONFIG;\n\n\nexport { FormatSettings, DefaultSettings }\nexport default FormatSettings;\n","import React from \"react\";\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport TabitBar from \"./TabitBar\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { isMobile } from \"./Mobile\";\n\nconst PatternListItem = (props) =>\n{\n  const {\n    selectPattern,\n    index,\n    pattern,\n    onRemove\n  } = props;\n  const selectCallback = React.useCallback(\n    ()=>{\n      if(selectPattern){selectPattern(index);}\n    },\n    [index, selectPattern]\n  );\n  const removeCallback = React.useCallback(\n    (event)=>{\n      event.stopPropagation();\n      event.preventDefault();\n      onRemove(index);\n    },\n    [index, onRemove]\n  );\n  return (<ListItem\n    button\n    key={\"drawer-pattern\" + index.toString()}\n    onClick={selectCallback}\n  >\n    <ListItemText primary={pattern.name} />\n    {onRemove &&\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          size=\"small\"\n          onClick={removeCallback}\n        >\n          <ClearIcon fontSize=\"small\"/>\n        </IconButton>\n      </ListItemSecondaryAction>\n    }\n  </ListItem>\n  );\n};\n\nfunction DrawerContent(props)\n{\n  return (<React.Fragment>\n    {!isMobile ? <TabitBar placeholder /> : null }\n    <div\n      style={{overflow: \"auto\"}}\n    >\n      <List>\n        {(props.patterns ?? []).map( (pattern, index) =>\n          <PatternListItem\n            pattern={pattern}\n            key={\"pattern-key-\" + String(index)}\n            index={index}\n            onRemove={props.onRemove}\n            selectPattern={props.selectPattern}\n          />\n        )}\n        {props.onAdd &&\n          <ListItem\n            key={\"drawer-add-button\"}\n          >\n            <ListItemText />\n            <ListItemSecondaryAction>\n              <IconButton\n                size=\"small\"\n                edge=\"end\"\n                onClick={()=>{props.onAdd();}}\n                aria-label=\"add\"\n              >\n                <AddCircleIcon\n                  size=\"small\"\n                  edge=\"end\"\n                  />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        }\n      </List>\n    </div>\n  </React.Fragment>\n  );\n}\n\nconst MemoizedDrawerContent = React.memo(DrawerContent);\n\nfunction PatternDrawer(props)\n{\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  return (\n    <SwipeableDrawer\n    disableBackdropTransition={!iOS} disableDiscovery={iOS}\n    variant={isMobile ? undefined : \"persistent\"}\n    open={props.open}\n    onOpen={props.onOpen}\n    onClose={props.onClose}\n    // we insist that the component not be created from scratch,\n    // as this causes a horrible lag in the component rendering/sound stutter\n    ModalProps={{\n      keepMounted: true,\n    }}\n    >\n      <MemoizedDrawerContent\n        patterns={props.patterns}\n        onRemove={props.onRemove}\n        selectPattern={props.selectPattern}\n        onAdd={props.onAdd}\n      />\n    </SwipeableDrawer>\n  );\n};\n\n// open, onOpen, onClose, patterns, selectPattern\n\nexport default React.memo(PatternDrawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport notation from \"./notation\"\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport Divider from \"@material-ui/core/Divider\";\nimport {FormatSettings} from \"./formatSettings\";\nimport { isMobile } from \"./Mobile\";\nimport TabitBar from \"./TabitBar\";\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nfunction SettingsDrawer(props)\n{\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  const patternDetails = props.pattern ? {\n    name : props.pattern.name,\n    resolution : props.pattern.resolution,\n    length: notation.getPatternLength(props.pattern)\n  } : null;\n\n  const noop = () => {};\n  const animateChange = (event) => {\n    if(props.onChange)\n    {\n      props.onChange({key: \"animate\", value: event.target.checked, local: false});\n    }\n  };\n  const interactiveChange = (event) => {\n    if(props.onChange)\n    {\n      props.onChange({key: \"interactive\", value: event.target.checked, local: false});\n    }\n  };\n  return (\n    <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n      className={props.className}\n      variant={ isMobile ? undefined : \"persistent\" }\n      anchor={props.anchor}\n      open={props.open}\n      onOpen={props.onOpen}\n      onClose={props.onClose}\n      style={{overflow: \"hidden\"}}\n    >\n      {!isMobile ? <TabitBar placeholder /> : null }\n      {patternDetails &&\n        <FormatSettings\n          onChange={props.onChange ??  noop}\n          settings={props.settings}\n          pattern={patternDetails}\n          />\n      }\n      {true &&\n        <div>\n        <FormControlLabel\n          control={<Switch checked={props.animating} onChange={animateChange} name={\"Display Beat\"} />}\n            label={\"Display Beat\"}\n            key={\"DisplayBeat\"}\n        />\n        </div>\n      }\n      {true &&\n        <div>\n        <FormControlLabel\n          control={<Switch checked={props.interactive} onChange={interactiveChange} name={\"Enable Editing\"} />}\n            label={\"Enable Editing\"}\n            key={\"EnableEditing\"}\n        />\n        </div>\n      }\n      {patternDetails && props.onSave &&\n        <React.Fragment>\n          <Button\n            onClick={(e) => { props.onSave(); } }\n          >Download</Button>\n          <Divider />\n        </React.Fragment>\n      }\n      {patternDetails && props.onShare &&\n        <Button\n          onClick={(e) => { props.onShare(); } }\n        >Share</Button>\n      }\n    </SwipeableDrawer>\n  );\n}\n\nSettingsDrawer.propTypes = {\n  onSave: PropTypes.func,\n  onShare: PropTypes.func,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  anchor: PropTypes.oneOf(['left', 'right']).isRequired,\n  settings: PropTypes.object,\n  className: PropTypes.string\n}\n\nexport default React.memo(SettingsDrawer);\n","import track from \"./track\";\n\nclass notation\n{\n\n  static DEFAULT_FORMAT_CONFIG = {\n    \"restMark\" : \"-\",\n    \"beatMark\" : \"|\",\n    \"lineMark\" : \"|\",\n    \"numberRestMark\" : \"-\",\n    \"beatResolution\" : 48,\n    \"showBeatMark\" : true,\n    \"showBeatNumbers\" : true,\n    \"compactDisplay\" : false,\n    // lineResolution is typically determined on a per-pattern basis\n    // however it used to be in here, and some tests still rely on this\n    \"lineResolution\" : 48 * 8\n  };\n\n  static FORMAT_CONFIG_STRINGS = [\n    [\"restMark\",[\"-\", \".\", \" \"]],\n    [\"numberRestMark\",[\"-\", \".\", \" \"]]\n  ];\n\n  static FORMAT_CONFIG_BOOLS = [\n    \"showBeatMark\",\n    \"showBeatNumbers\"\n  ];\n\n  static validateConfig(config, patternResolution) {\n    if( patternResolution != null && ( config.beatResolution % patternResolution ) !== 0 )\n    {\n      throw new Error(\"patternResolution doesn't divide beatResolution\");\n    }\n    if( config.lineResolution <= 0 )\n    {\n      throw new Error(\"config.lineResolution must be greater than zero\");\n    }\n  }\n\n  static resolveConfig(formatConfig)\n  {\n    for( const propName of Object.keys(formatConfig))\n    {\n      if(!notation.DEFAULT_FORMAT_CONFIG.hasOwnProperty(propName))\n      {\n        throw new Error(\"passed unrecognised property \" + propName);\n      }\n    }\n\n    return Object.assign( Object.assign({}, notation.DEFAULT_FORMAT_CONFIG), formatConfig );\n  }\n\n  static chunkString(str, chunkSize) {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    return str.match(new RegExp('.{1,' + chunkSize + '}', 'g'));\n  }\n\n  static chunkArray(a, chunkSize)\n  {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    let chunks = [];\n    for( let i = 0; i < a.length; i += chunkSize )\n    {\n      chunks.push( a.slice(i, Math.min( i + chunkSize, a.length) ) );\n    }\n    return chunks;\n  }\n\n  static createNumberMarker(numberRestMark, beatResolution, patternResolution, lineLength)\n  {\n    if( lineLength <= 0 )\n    {\n      throw new Error(\"lineLength <= 0\");\n    }\n\n    if( ( beatResolution % patternResolution ) !== 0)\n    {\n      throw new Error(\"patternResolution \" + patternResolution.toString() + \" does not divide beatResolution \" + beatResolution.toString());\n    }\n\n    let beatCount = Math.ceil(lineLength / beatResolution);\n    let numberMarkerArray = Array.from( Array(lineLength / patternResolution), e => numberRestMark );\n\n    for( let beat = 0; beat < beatCount; beat++ )\n    {\n      numberMarkerArray[ beat * ( beatResolution / patternResolution ) ] = ( (beat+1) % 10 ).toString();\n    }\n    return numberMarkerArray;\n  }\n\n  static formatLineWithMarkers(config, line, patternResolution, asHTML)\n  {\n    notation.validateConfig(config);\n\n    const beatChunkSize = config.beatResolution / patternResolution;\n\n    const padZero = (n, width) => {\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    };\n    const formatSymbolAsSpans = (symbol, numericPosition) => {\n      return \"<span class='note-\" + padZero(numericPosition, 4) + \"'>\" +  symbol + \"</span>\";\n    };\n\n    const formatSymbol = asHTML ? formatSymbolAsSpans : (symbol, numericPosition) => symbol;\n\n    let formattedLine = \"\";\n    for( let index = 0; index < line.length; ++ index )\n    {\n      const numericPosition = patternResolution * index;\n      formattedLine += formatSymbol(line.charAt(index), numericPosition);\n    }\n\n\n    const lineWithBeats = config.showBeatMark ? notation.chunkString(formattedLine, beatChunkSize * formatSymbol(\"X\", 0).length).join(config.beatMark) : formattedLine;\n    // note: we choose to always show the lineMarker even if it doesn't match the line resolution\n    return config.lineMark + lineWithBeats + config.lineMark;\n  }\n\n  static defaultLineResolution(\n    trackDict,\n    beatResolution\n  )\n  {\n    const instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return 48 * 8;\n    }\n    const trackLength = instrumentTracks[0].length();\n    const beatCount = trackLength / beatResolution;\n    if( beatCount <= 12 )\n    {\n      return trackLength;\n    }\n    else if( beatCount > 32 )\n    {\n      return 48 * 16; // let's just be laazeee\n    }\n    else\n    {\n      // let's just apply a simple mapping, rather than think through logics\n      const mapping = [\n        trackLength, // 13\n        trackLength / 2, // 14\n        trackLength / 3, // 15\n        trackLength / 2, // 16\n        trackLength, // 17\n        trackLength / 3, // 18\n        trackLength, // 19\n        trackLength / 4, // 20\n        trackLength / 3, // 21\n        trackLength / 2, // 22\n        trackLength, // 23\n        trackLength / 3, // 24\n        trackLength / 5, // 25\n        trackLength, // 26\n        trackLength / 3, // 27\n        trackLength / 4, // 28\n        trackLength, // 29\n        trackLength / 6, // 30\n        trackLength, // 31\n        trackLength / 4, // 32\n      ];\n      return mapping[ beatCount - 13 ];\n    }\n  }\n\n  static guessPerPatternSettings(\n    trackDict\n  )\n  {\n    return {\n      \"lineResolution\" : notation.defaultLineResolution(trackDict, 48), // beatResolution (default)\n      \"beatResolution\" : 48 // should cover all the cases hopefully\n    };\n  }\n\n  static formatPatternString(\n    instrument,\n    trackDict,\n    restMark\n  )\n  {\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n    const exampleTrack = Array.from(Object.values(trackDict))[0];\n    const patternResolution = exampleTrack.resolution;\n    const patternSize = exampleTrack.length();\n    const notationLength = patternSize / patternResolution;\n\n    let patternArray = Array(notationLength).fill(restMark);\n    for( let charIndex = 0; charIndex < patternArray.length; ++charIndex)\n    {\n      // todo: handle collisions\n      for( const [trackID, trackSymbol] of Object.entries(instrument) )\n      {\n        const trackInstance = trackDict[trackID];\n        if( trackInstance != null && trackInstance.rep[charIndex] === 1 )\n        {\n          patternArray[charIndex] = trackSymbol;\n        }\n      }\n    }\n    return patternArray;\n  }\n\n  static fromInstrumentAndTrack(\n    instrument,\n    trackDict,\n    asHTML,\n    formatConfig = {}\n  )\n  {\n    const config = notation.resolveConfig(formatConfig);\n\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    // turn the tracks, into one char string\n    const patternArray = notation.formatPatternString( instrument, trackDict, config.restMark );\n    const patternString = patternArray.join(\"\");\n    const patternResolution = instrumentTracks[0].resolution;\n    const patternSize = instrumentTracks[0].length();\n\n    // handle lines and beatMarkers\n    let lineArray = notation.chunkString( patternString, config.lineResolution / patternResolution );\n\n    let formattedLineArray = [];\n    // add numbers on the first line\n    if( config.showBeatNumbers )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers(\n        config,\n        notation.createNumberMarker(config.numberRestMark, config.beatResolution, patternResolution, Math.min(config.lineResolution, patternSize)).join(\"\"),\n        patternResolution,\n        asHTML\n      ) );\n    }\n    for( let i = 0; i < lineArray.length; ++i )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( config, lineArray[i], patternResolution, asHTML ) );\n    }\n\n    return formattedLineArray.join(\"\\n\");\n  }\n\n  static getPatternLength(pattern)\n  {\n    let trackLength = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        trackLength = Math.max( trackLength, t.length() );\n    }\n    return trackLength;\n  }\n\n  static getPatternResolution(pattern)\n  {\n    let resolution = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        resolution = Math.min( resolution, t.resolution );\n    }\n    return resolution;\n  }\n\n  static clonePattern(name, pattern)\n  {\n    const trackArray = Object.keys(pattern.instrumentTracks).map(\n      k => [k, pattern.instrumentTracks[k].clone()]\n    );\n    return {\n      size: pattern.size,\n      name: name,\n      resolution: pattern.resolution,\n      instrumentTracks: Object.fromEntries(trackArray)\n    };\n  }\n\n  static createEmptyPattern(name, resolution, totalLength, trackKeys)\n  {\n    console.log(trackKeys);\n    const tracks = new Map(\n      Array.from(trackKeys).map(\n        k => (k, track.fromPositions( [], totalLength, resolution))\n      )\n    );\n    return {\n      size: totalLength,\n      name: name,\n      resolution: resolution,\n      instrumentTracks: tracks\n    };\n  }\n\n  static combinePatterns(name, patternA, patternB)\n  {\n    /* pattern = {\n      size: int,\n      name: string,\n      notes: ...redundant,\n      resolution: int,\n      instrumentTracks: {\n        instrumentID (str) : track = { rep, resolution }\n      }\n    } */\n\n    const resolution = track.optimalResolution( patternA.resolution, patternB.resolution );\n    const totalSize = patternA.size + patternB.size;\n    const instrumentKeys = new Set( [...Object.keys(patternA.instrumentTracks), ...Object.keys(patternA.instrumentTracks)] );\n    let instrumentTracks = {};\n    for(const k of instrumentKeys)\n    {\n      instrumentTracks[k] = track.combine(\n        patternA.instrumentTracks[k],\n        patternB.instrumentTracks[k],\n        totalSize,\n        resolution\n      );\n    }\n\n    return {\n      resolution: resolution,\n      size: totalSize,\n      name: name,\n      instrumentTracks: instrumentTracks\n    };\n  }\n\n};\n\nexport default notation;\n","// Mobile.js\n\nfunction detectMobile()\n{\n  // the simple version from\n  // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n  const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n  const toMatch = [\n      /Android/i,\n      /webOS/i,\n      /iPhone/i,\n      /iPad/i,\n      /iPod/i,\n      /BlackBerry/i,\n      /Windows Phone/i\n  ];\n\n  return toMatch.some((toMatchItem) => {\n      return userAgent.match(toMatchItem);\n  });\n}\n\nconst isMobile = detectMobile();\n\nexport { isMobile };","// FileUpload.react.js\n\n// inspired by https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n// and https://stackoverflow.com/questions/55830414/how-to-read-text-file-in-react\n\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\n\nclass FileImport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.hiddenFileInput = React.createRef();\n  }\n\n  onChange(e) {\n    const fileObject = e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = loadEvent => {\n      if( this.props.onImport )\n      {\n        this.props.onImport(\n          { file: fileObject, content : loadEvent.target.result}\n        );\n      }\n    }\n    reader.readAsText(fileObject);\n  }\n\n  render() {\n    const clickFile = (e) => {\n      this.hiddenFileInput.current.click();\n    }\n\n    const {onImport, accept, ...buttonProps} = {...this.props};\n    return (\n      <React.Fragment>\n        <Button onClick={clickFile} {...buttonProps}>Import File</Button>\n        <input\n          type=\"file\"\n          hidden\n          accept={accept}\n          onChange={(e) => this.onChange(e)} ref={this.hiddenFileInput}\n          />\n      </React.Fragment>\n   )\n  }\n}\n\nexport default FileImport;\n","// History.js\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => {return {\n  root: {\n    width: '100%',\n    height: 400,\n    minWidth: 200,\n    maxWidth: 300,\n    maxHeight: 200,\n    overflow: 'auto'\n  }\n}});\n\nfunction renderRow(props) {\n  return (\n    <ListItem button style={props.style} key={props.index} onClick={props.onClick}>\n      <ListItemText primary={props.name} secondary={new Date(props.date).toLocaleDateString()}/>\n    </ListItem>\n  );\n}\n\nfunction History(props)\n{\n  const classes = useStyles();\n  const items = props.data;\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Typography>Recently viewed</Typography>\n        <Divider />\n        <List>\n              {[...items.keys()].map ( x => renderRow({\n                index : x,\n                name: items[x].name,\n                id: items[x].id,\n                date: items[x].date,\n                onClick: ()=>{if(props.onClick){props.onClick(items[x]);}}\n              }))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n\nexport default History;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\n\nfunction TitledDialog(props) {\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle id=\"text-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose} variant=\"contained\">\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nTitledDialog.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func\n};\n\nexport default TitledDialog;\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport FileImport from \"./FileImport\";\nimport Button from '@material-ui/core/Button';\nimport History from \"./History\";\nimport TitledDialog from \"./TitledDialog\"\nimport * as SongStorage from \"./SongStorage\"\nimport './App.css';\n\nconst styles = (theme)=>{\n  return {\n    licenseBanner: {\n      position:\"absolute\",\n      bottom:0,\n      \"width\": \"95%\",\n      \"textAlign\": \"center\",\n      \"backgroundColor\" : \"#212121\", // same background color as app\n      \"zIndex\" : theme.zIndex.drawer\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    }\n  };\n};\n\nclass TitleScreen extends React.Component\n{\n  state = {\n    error: this.props.error,\n    songHistory: []\n  }\n\n  componentDidMount = () => {\n    this.setState(\n      {songHistory: SongStorage.getLocalHistory()}\n    )\n  }\n\n  render()\n  {\n    // if a load of a song is in flight don't show file open buttons\n    const handleFileImport = (e) =>\n    {\n      this.props.navigate(\n        '/import',\n        {\n          state: {\n            filename: e.file.name,\n            content: e.content\n          }\n        }\n      );\n    };\n\n    const navigateRecent = (song) => {\n      this.props.navigate(\n        '/recent/' + song.id + \"/\",\n        {\n          state: {\n            songName: song.name\n          }\n        }\n      );\n    };\n\n    const controls = (\n      <React.Fragment>\n        <Button variant=\"contained\" onClick={()=>{this.props.navigate(\"/example\")}} style={{margin: \"1em\"}}>Load example</Button>\n        <FileImport\n          style={{margin: \"1em\"}}\n          variant=\"contained\"\n          onImport={handleFileImport}\n          accept=\".tabit,.h2song\"\n          />\n      </React.Fragment>\n    );\n    const { classes } = this.props;\n    return (\n      <div className=\"App\">\n        <div>\n          <h2>tabit</h2>\n          <p>I read .h2songs and write tab</p>\n          {controls}\n        </div>\n        <div style={{\"marginLeft\" : \"auto\", \"marginRight\": \"auto\"}}>\n        { this.state.songHistory.length > 0 &&\n          <History data={this.state.songHistory} onClick={navigateRecent}/>\n        }\n        </div>\n        { !!this.state.error &&\n          <TitledDialog\n            title=\"Something went wrong.\"\n            open={!!this.state.error}\n            onClose={()=>{this.setState({error: null})}}\n          >\n            {this.state.error}\n          </TitledDialog>\n        }\n        <div className={classes.licenseBanner} >\n          <p>tabit relies on publicly available sound libraries listed at <a href=\"https://github.com/andrew-murray/tabit\">https://github.com/andrew-murray/tabit</a></p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(TitleScreen);\n","const DEFAULT_INSTRUMENT_SYMBOLS = {\n  \"Djembe Slap\" : \"S\",\n  \"Djembe Tone\" : \"t\",\n  \"Djembe Bass\" : \"O\",\n  \"Snare Ghost\" : \"x\",\n  \"Snare Accent\" : \"X\",\n  \"Shaker Ghost\" : \"x\",\n  \"Shaker Accent\" : \"X\",\n  \"Click\" : \"X\",\n  \"Bass\" : \"O\",\n  \"Tom\" : \"O\",\n  \"Default\" : \"X\"\n};\n\nfunction normalizeInstrumentsForFiguring(instruments)\n{\n  let n = [];\n  for(const inst of instruments)\n  {\n    let nInst = Object.assign({}, inst);\n    // for some reason these instruments are one-size arrays, and one id ... the track id from hydrogen\n    // this should be fixed, this doesn't make sense\n    nInst.name = nInst.name.toLowerCase();\n    n.push( nInst );\n  }\n  return n;\n}\n\nfunction figureDjembes(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const djembeTracks = instruments.filter( (inst) => inst.name.includes(\"djembe\") );\n  if(djembeTracks.length === 0)\n  {\n    return [];\n  }\n  else if(djembeTracks.length <= 3)\n  {\n    // let's lazily assume we have a slap, tone, bass\n    const slapArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"slap\") );\n    const toneArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"tone\") );\n    const bassArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"bass\") );\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      let parityCheck = slapArray[i] + toneArray[i] + bassArray[i];\n      // failed to figure out how djembes work return empty array\n      if(parityCheck !== 1)\n      {\n        return [];\n      }\n    }\n    let djembeMapping = {};\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      if( slapArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Slap\"];\n      }\n      else if( toneArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Tone\"];\n      }\n      else if( bassArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Bass\"];\n      }\n    }\n    return [ [ \"Djembe\", djembeMapping ] ];\n  }\n  else\n  {\n    // TODO: support more than one djembe\n    return []\n  }\n}\n\n// used by snare/shaker\nfunction manageAccentOrGhost(instrumentTracks, instrumentName, accentSymbol, ghostSymbol)\n{\n  let outputInstruments = [];\n  if(instrumentTracks.length === 2)\n  {\n    const t0 = instrumentTracks[0];\n    const t1 = instrumentTracks[1];\n    // attempt to determine ghost/accent\n    const zeroLouder = t0.volume > t1.volume || (t0.volume === t1.volume && t0.gain > t1.gain);\n    let mapping = {};\n    mapping[ t0.id.toString() ] = zeroLouder ? accentSymbol : ghostSymbol;\n    mapping[ t1.id.toString() ] = zeroLouder ? ghostSymbol : accentSymbol;\n    outputInstruments.push([instrumentName, mapping] );\n  }\n  else // if 1 it must be an accent, if >= 3 ... I don't want to try and assign ghosts/accents\n  {\n    // I don't want to support ghost/accent here right now\n    for( const track of instrumentTracks )\n    {\n      let mapping = {};\n      mapping[ track.id.toString() ] = accentSymbol;\n      outputInstruments.push([instrumentName, mapping] );\n    }\n  }\n  return outputInstruments;\n\n}\n\nfunction figureShakers(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  // todo: support common alternative shakers? Tambourine?\n  const shakerTracks = instruments.filter( (inst) => ( inst.name.includes(\"shaker\") ) );\n  return manageAccentOrGhost(\n    shakerTracks,\n    \"Shaker\",\n    symbolConfig[\"Shaker Accent\"],\n    symbolConfig[\"Shaker Ghost\"]\n  );\n}\n\nfunction figureSnares(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const snareTracks = instruments.filter( (inst) => ( inst.name.includes(\"snare\") ) );\n  // todo: we currently assume 2 snares is accent/ghost ... but I think it's relatively\n  // common to be 2 snare parts too, I think the algorithm here is check patterns to\n  // see if they overlap ... if the \"ghosts\" overlap the \"hits\" sometimes, assume 2 parts\n  return manageAccentOrGhost(\n    snareTracks,\n    \"Snare\",\n    symbolConfig[\"Snare Accent\"],\n    symbolConfig[\"Snare Ghost\"]\n  );\n}\n\n\nfunction activeInstruments(patterns)\n{\n  let nonTrivialInstruments = new Set();\n  for( const p of patterns )\n  {\n    for(const [instrumentID, part] of Object.entries(p.instrumentTracks))\n    {\n      if( !part.empty() )\n      {\n        nonTrivialInstruments.add(parseInt(instrumentID));\n      }\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction activeInstrumentation(instrumentIndex, patterns)\n{\n  const active = activeInstruments(patterns);\n  let nonTrivialInstruments = [];\n  for( const inst of instrumentIndex)\n  {\n    if( active.has(inst.id) )\n    {\n      nonTrivialInstruments.push( inst );\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction figureClickyInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const worthwhileInstruments = activeInstruments(patterns);\n  const relevantTracks = instruments.filter( (inst) => ( worthwhileInstruments.has(inst.id) &&\n    !inst.name.includes(\"djembe\") &&\n    ( inst.name.includes(\"click\") ||\n    inst.name.includes(\"stick\") ||\n    inst.name.includes(\"rim\") ||\n    inst.name.includes(\"tom\") ||\n    inst.name.includes(\"bass\") ||\n    inst.name.includes(\"kick\") )\n  ) );\n\n  const trackIsClick = Array.from(\n    relevantTracks,\n    (t) => t.name.includes(\"click\") || t.name.includes(\"stick\") || t.name.includes(\"rim\")\n  );\n  // we prioritise the early tracks\n  // and hope for the best\n\n  let tomIndex = 1;\n  let bassIndex = 1;\n  let collated = [];\n  for( let candidate = 0; candidate < Math.floor(relevantTracks.length/2); ++candidate )\n  {\n    if( trackIsClick[candidate*2] !== trackIsClick[candidate*2+1] )\n    {\n      const clickTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2] : relevantTracks[candidate*2+1];\n      const hitTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2+1] : relevantTracks[candidate*2];\n      const instrumentIsTom = hitTrack.name.includes(\"tom\");\n      let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n      let instrumentName = \"\"\n      if( instrumentIsTom )\n      {\n        instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n        tomIndex = tomIndex + 1;\n      }\n      else\n      {\n        instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n        bassIndex = bassIndex + 1;\n      }\n      let mapping = {};\n      mapping[hitTrack.id.toString()] = symbolConfig[rawInstrumentName];\n      mapping[clickTrack.id.toString()] = symbolConfig[\"Click\"];\n      collated.push([instrumentName, mapping] );\n    }\n  }\n\n  // If there's a remainder instrument and there's no click\n  if( ((relevantTracks.length % 2 ) !== 0) && !trackIsClick[ relevantTracks.length - 1 ] )\n  {\n    const lastTrack = relevantTracks[relevantTracks.length - 1];\n    const instrumentIsTom = lastTrack.name.includes(\"tom\");\n    let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n    let instrumentName = \"\"\n    if( instrumentIsTom )\n    {\n      instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n      tomIndex = tomIndex + 1;\n    }\n    else\n    {\n      instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n      bassIndex = bassIndex + 1;\n    }\n    let mapping = {};\n    mapping[lastTrack.id.toString()] = symbolConfig[rawInstrumentName];\n    collated.push([instrumentName, mapping] );\n  }\n  return collated;\n}\n\nfunction defaultSymbolForSingleInstrument(symbolConfig, name)\n{\n  // we expect these keys\n  /*\n    \"Djembe Slap\" : \"S\",\n    \"Djembe Tone\" : \"t\",\n    \"Djembe Bass\" : \"O\",\n    \"Snare Ghost\" : \"-\",\n    \"Snare Accent\" : \"X\",\n    \"Shaker Ghost\" : \"x\",\n    \"Shaker Accent\" : \"X\",\n    \"Click\" : \"X\",\n    \"Bass\" : \"O\",\n    \"Tom\" : \"O\",\n    \"Default\" : \"X\"\n  */\n  const lowerName = name.toLowerCase();\n  if( lowerName.includes(\"click\") || lowerName.includes(\"stick\") )\n  {\n    return symbolConfig[\"Click\"];\n  }\n  else if( lowerName.includes(\"bass\") || lowerName.includes(\"kick\") )\n  {\n    return symbolConfig[\"Bass\"]\n  }\n  else if( lowerName.includes(\"snare\") )\n  {\n    return symbolConfig[\"Snare Accent\"];\n  }\n  else if( lowerName.includes(\"shaker\") )\n  {\n    return symbolConfig[\"Shaker\"];\n  }\n  else if( lowerName.includes(\"tom\") )\n  {\n    return symbolConfig[\"Tom\"];\n  }\n  else if( lowerName.includes(\"djembe\") )\n  {\n    if( lowerName.includes(\"slap\") )\n    {\n      return symbolConfig[\"Djembe Slap\"];\n    }\n    else if( lowerName.includes(\"tone\") )\n    {\n      return symbolConfig[\"Djembe Tone\"];\n    }\n    else\n    {\n      return symbolConfig[\"Djembe Bass\"];\n    }\n  }\n  return symbolConfig[\"Default\"];\n}\n\nfunction figureInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  let output = [];\n  output = output.concat( figureClickyInstruments( instrumentsRaw, symbolConfig, patterns ) );\n  output = output.concat( figureDjembes( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureSnares( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureShakers( instrumentsRaw, symbolConfig ) );\n\n  // we ignore track used by multiple instruments\n\n  // but attempt to cover \"instrument not recognised anywhere\"\n\n  const worthwhileInstruments = activeInstruments(patterns);\n\n  for(const inst of instrumentsRaw)\n  {\n    if( !worthwhileInstruments.has(inst.id) )\n    {\n      continue;\n    }\n    let instrumentUsed = false;\n    for( const op of output)\n    {\n      if( inst.id.toString() in op[1] )\n      {\n        instrumentUsed = true;\n      }\n    }\n    if(instrumentUsed === false)\n    {\n      let mapping = {};\n      mapping[ inst.id.toString() ] = defaultSymbolForSingleInstrument( symbolConfig, inst.name );\n      output.push( [inst.name, mapping] );\n    }\n  }\n\n  return output;\n}\n\nfunction createInstrumentMask(instrumentIndex, instruments)\n{\n  let instrumentMask = Array(instrumentIndex.length);\n  for( let baseInstrumentIndex = 0; baseInstrumentIndex < instrumentIndex.length; ++baseInstrumentIndex )\n  {\n    const baseInstrumentId = instrumentIndex[baseInstrumentIndex].id;\n    for( let targetInstrumentIndex = 0; targetInstrumentIndex < instruments.length; ++targetInstrumentIndex)\n    {\n      const target = instruments[targetInstrumentIndex];\n      if(baseInstrumentId.toString() in target[1])\n      {\n        instrumentMask[baseInstrumentIndex] = targetInstrumentIndex;\n      }\n    }\n  }\n  return instrumentMask;\n}\n\nfunction guessShortName(instrumentName)\n{\n  const match = instrumentName.match(/\\d+/);\n  if(match)\n  {\n    return instrumentName.substr(0,2) + match[0];\n  }\n  else\n  {\n    return instrumentName.substr(0,2);\n  }\n}\n\nexport {\n  activeInstrumentation,\n  createInstrumentMask,\n  DEFAULT_INSTRUMENT_SYMBOLS,\n  figureClickyInstruments,\n  figureDjembes,\n  figureShakers,\n  figureSnares,\n  figureInstruments,\n  guessShortName\n};\n","import kuva from \"./kuva.json\";\nimport {\n  activeInstrumentation,\n  createInstrumentMask,\n  DEFAULT_INSTRUMENT_SYMBOLS,\n  figureInstruments,\n  guessShortName\n} from \"./instrumentation\";\nimport track from \"./track\";\nimport {DefaultSettings} from \"./formatSettings\";\nimport notation from \"./notation\"\n\nconst figurePatternSettings = (patterns)=>{\n  return Array.from(\n    patterns,\n    (p) => notation.guessPerPatternSettings( p.instrumentTracks )\n  );\n};\n// note that a Pattern contains\n// {\n//    size, name, notes\n//    resolution, instrumentTracks (instrumentTracks are a class)\n// }\n\nclass SongData {\n  constructor(\n    title,\n    sourceFile,\n    instruments,\n    instrumentIndex,\n    instrumentMask,\n    patterns,\n    formatSettings,\n    patternSettings\n  )\n  {\n    this.title = title;\n    this.sourceFile = sourceFile;\n    this.instruments = instruments;\n    this.instrumentIndex = instrumentIndex;\n    this.instrumentMask = instrumentMask;\n    this.patterns = patterns;\n    this.formatSettings = formatSettings;\n    this.patternSettings = patternSettings;\n  }\n};\n\nfunction createPatternsFromData(patternData)\n{\n  // the instruments currently work as simple objects\n  // we need to create tracks!\n  let patterns = [];\n  for( let pattern of patternData )\n  {\n    let replacedTracks = {};\n    // todo: find a more compact way of doing this\n    for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n    {\n      replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n    }\n    let patternWithTracks = Object.assign({}, pattern);\n    patternWithTracks.instrumentTracks = replacedTracks;\n    patterns.push(patternWithTracks);\n  }\n  return patterns;\n}\n\nfunction prepHydrogenVolumes(instrumentIndex)\n{\n  // fixme: convert hydrogen volume/gain to normal values, somewhere\n  for( let instrument of instrumentIndex )\n  {\n    instrument.volume = 0.5;\n  }\n  return instrumentIndex;\n}\n\nfunction upgradeOldInstruments(instruments)\n{\n  // instruments is an array of [name, symbolmapping, possible metadata]\n  return instruments.map(\n    inst => {\n      if(inst.length === 2)\n      {\n        return [inst[0], inst[1], { \"shortName\" : guessShortName(inst[0])}];\n      }\n      else\n      {\n        return inst;\n      }\n    }\n  )\n}\n\nfunction LoadJSON(jsonData, title, filename, fromHydrogen)\n{\n  return new Promise((resolve) =>\n    {\n      const patterns = createPatternsFromData(jsonData.patterns);\n      const oldInstruments = !fromHydrogen? jsonData.instruments : figureInstruments(\n        jsonData.instruments,\n        DEFAULT_INSTRUMENT_SYMBOLS,\n        patterns\n      );\n      const instruments = upgradeOldInstruments(oldInstruments);\n      const instrumentIndex = jsonData.instrumentIndex ? jsonData.instrumentIndex\n        : prepHydrogenVolumes( activeInstrumentation(jsonData.instruments, patterns) );\n      const instrumentMask = createInstrumentMask(instrumentIndex, instruments);\n      const formatSettings = jsonData.formatSettings ? jsonData.formatSettings : Object.assign({}, DefaultSettings);\n      const patternSettings = jsonData.patternSettings ? jsonData.patternSettings : figurePatternSettings(patterns);\n      resolve( new SongData(\n        title,\n        filename,\n        instruments,\n        instrumentIndex,\n        instrumentMask,\n        patterns,\n        formatSettings,\n        patternSettings\n      ) );\n    }\n  );\n\n}\n\nfunction LoadExample()\n{\n  return LoadJSON(\n    kuva,\n    \"kuva\",\n    \"kuva.example\",\n    true // fromHydrogen\n  );\n}\n\n\nconst moduleExports = {\n  LoadExample,\n  LoadJSON\n};\n\nexport default moduleExports;\n","import React from 'react';\nimport notation from \"./notation\"\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { isMobile } from \"./Mobile\";\n\nconst styles = (theme)=>({\n  root: {\n    fontFamily: \"Roboto Mono\",\n    fontSize: '1.2rem',\n    '@media (min-width:800px)': {\n      fontSize: '1.4rem',\n    }\n  }\n});\n\nconst denseStyles = (theme)=>({\n  root: {\n    fontFamily: \"Roboto Mono\",\n    fontSize: '0.8rem',\n    '@media (min-width:800px)': {\n      fontSize: '1.1rem',\n    }\n  }\n});\n\nconst PreTypography = withStyles(styles)(Typography);\nconst DensePreTypography = withStyles(denseStyles)(Typography);\n\nconst compareArray = (a,b) => {\n  if(a.length !== b.length)\n  {\n    return false;\n  }\n  for(let i = 0; i < a.length; ++i)\n  {\n    if(a[i] !== b[i])\n    {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst countRepeats = (patternLines) => {\n  let repeatMatrix = [];\n  for(let lineIndex = 0; lineIndex < patternLines.length; ++lineIndex)\n  {\n    let totalRepeats = 1;\n    for(let compareIndex = lineIndex + 1; compareIndex < patternLines.length; ++compareIndex)\n    {\n      const comp = compareArray(patternLines[lineIndex], patternLines[compareIndex]);\n      if(comp)\n      {\n        totalRepeats++;\n      }\n      else\n      {\n        break;\n      }\n    }\n    repeatMatrix.push(totalRepeats);\n  }\n  return repeatMatrix;\n};\n\nclass Part extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const tracks = Object.values(this.props.tracks);\n    if(tracks.length === 0 )\n    {\n      return <React.Fragment />\n    }\n    const patternArray = notation.formatPatternString(\n      this.props.instrument,\n      this.props.tracks,\n      this.props.config.restMark\n    );\n    // don't support a multi-line pattern, that doesn't divide the beatResolution\n    // because it's a nightmare!\n    const exampleTrackID = Object.keys(this.props.instrument)[0]\n    const patternResolution = this.props.tracks[exampleTrackID].resolution;\n    if( (this.props.config.lineResolution % this.props.config.beatResolution) !== 0\n        && ( patternArray.length * patternResolution > this.props.config.lineResolution ) )\n    {\n      throw new Error(\"This code only supports a beatResolution that divides the lineResolution\");\n    }\n    // this code has got very convoluted\n    const patternLines = notation.chunkArray(patternArray, this.props.config.lineResolution / patternResolution, 0);\n    const beatsPerLine = this.props.config.lineResolution / this.props.config.beatResolution;\n    const beatChunkSize = this.props.config.beatResolution / patternResolution;\n    const lineIndices = [...patternLines.keys()];\n    const Typo = this.props.dense ? DensePreTypography : PreTypography;\n    // <Typo variant=\"subtitle1\" component=\"span\" key={\"span-beat-\" + (beat + startBeats[0]).toString()} className={makeClasses(beat)} style={{display: \"inline-block\"}}>{line[beat].map(c => <Button size=\"small\" elementType=\"span\" style={{display: \"inline\", marginBlock: 0, padding: 0, minWidth: 1, fontStretch: undefined}}>{c}</Button>)}</Typo>\n\n    const interactiveStyles = {\n      cursor: \"pointer\"\n    };\n\n    const formatLine = (key, line, startBeats, prefix, showRepeatCount, interactive)=>{\n      const createBeatFragment = (beat) => {\n        const editable = interactive && this.props.modifyPatternLocation;\n        return <React.Fragment key={\"fragment-beat-\"+ (beat + startBeats[0]).toString()}>\n          <Typo variant=\"subtitle1\" component=\"span\" key={\"span-beat-\" + (beat + startBeats[0]).toString()} className={makeClasses(beat)} style={{display: \"inline-block\"}}>\n            {[...Array(line[beat].length).keys()].map(\n              i => <Typo\n                key={\"beat-part-\" + i.toString()}\n                component=\"span\"\n                style={editable ? interactiveStyles : undefined}\n                className={editable && !isMobile ? \"hoverableNote\" : undefined}\n                onClick={!editable? undefined : ()=>{\n                  const placesToEdit = startBeats.map( sb => ( (sb + beat) * this.props.config.beatResolution + i * patternResolution));\n                  this.props.modifyPatternLocation(\n                    placesToEdit,\n                    this.props.instrument\n                  );\n                }}>\n                  {line[beat][i]}\n              </Typo>\n              )\n            }\n          </Typo>\n          <Typo variant=\"subtitle1\" component=\"span\" key={\"span-beat-marker-\" + (beat + startBeats[0]).toString()} style={{display: \"inline-block\"}}>{(this.props.config.showBeatMark && beat !== beats[beats.length-1]) ? this.props.config.beatMark : \"\"}</Typo>\n        </React.Fragment>\n      }\n      const beats = [...line.keys()];\n      const makeClasses = beat => startBeats.map(sb => \"partNote\"+ (beat + sb).toString()).join(\" \");\n      return (\n        <Typo key={\"pattern-line-\" + key} component=\"div\">\n          {prefix && <Typo variant=\"subtitle1\" component=\"span\" key={\"line-prefix-\" + key} style={{display: \"inline-block\"}}>{prefix}</Typo>}\n          <Typo variant=\"subtitle1\" component=\"span\" key={\"line-start-\" + key} style={{display: \"inline-block\"}}>{this.props.config.lineMark}</Typo>\n          {\n            beats.map( createBeatFragment )\n          }\n          <Typo variant=\"subtitle1\" component=\"span\" key={\"line-end-\" + key}>{this.props.config.lineMark}</Typo>\n          {showRepeatCount && <Typo variant=\"subtitle1\" component=\"span\" key={\"rep-marker\"}>x{startBeats.length.toString()}</Typo>}\n        </Typo>\n      );\n    };\n\n    const numberLine = notation.createNumberMarker(\n      this.props.config.numberRestMark,\n      this.props.config.beatResolution,\n      patternResolution,\n      Math.min( this.props.config.lineResolution, patternLines[0].length * patternResolution )\n    );\n    const beatChunks = notation.chunkArray(\n      numberLine,\n      this.props.config.beatResolution / patternResolution\n    );\n    const prefixIndent = this.props.prefix ? ' '.repeat(this.props.prefix.length) : null;\n    const repeatMatrix = countRepeats(patternLines);\n\n    const lineElements = [];\n    let lineIndex = 0;\n    // disable showing a repeat count if it would be labelling every line with a x1\n    const someLinesMatch = repeatMatrix.reduce((partial_sum, to_add) => partial_sum + to_add, 0) > repeatMatrix.length;\n    while(lineIndex < repeatMatrix.length)\n    {\n      const startPoint = beatsPerLine * lineIndex;\n      const startBeats = [...Array(repeatMatrix[lineIndex]).keys()].map(repeatLine => startPoint + repeatLine * beatsPerLine);\n      // we could inject user-preferences here\n      // two possible suggestions\n      // \"never\"\n      // \"only for line one\" ... as ABBC patterns mightlook pretty confusing I reckon\n      // \"always\"\n      const showRepeats = someLinesMatch;\n      lineElements.push(\n        formatLine(lineIndex.toString(), notation.chunkArray(patternLines[lineIndex], beatChunkSize), startBeats, lineIndex === 0 ? this.props.prefix : prefixIndent, showRepeats, true)\n      );\n      lineIndex += startBeats.length;\n    }\n\n    return (\n      <div>\n      {this.props.config.showBeatNumbers ? formatLine(\"beat\", beatChunks, lineIndices.map(lineIndex=>lineIndex * beatsPerLine), prefixIndent, false, false) : \"\" }\n      {lineElements}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Part);\n","import React from 'react';\nimport Part from \"./Part\";\n\nfunction getTitleType(headingLevel, defaultLevel)\n{\n    const validHeadingLevels = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    const safeHeading = headingLevel ? headingLevel.toLowerCase() : '';\n    const Title = validHeadingLevels.includes(safeHeading) ? safeHeading : defaultLevel;\n    return Title;\n}\n\nclass PartWithTitle extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const Title = getTitleType(this.props.headingLevel, \"h4\");\n    return (\n      <article>\n        <Title>{this.props.instrumentName}</Title>\n        <Part\n          instrument={this.props.instrument}\n          tracks={this.props.tracks}\n          config={this.props.config}\n          dense={this.props.dense}\n          modifyPatternLocation={this.props.modifyPatternLocation}\n        />\n      </article>\n    );\n  }\n}\n\nexport default PartWithTitle;\n","import React from 'react';\nimport Part from \"./Part\";\nimport PartWithTitle from \"./PartWithTitle\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    fontFamily: \"Roboto Mono\",\n    textAlign: \"left\",\n    whiteSpace:\"pre\",\n    margin: \"auto\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    \"& .activeNote\": {\n      color: theme.palette.secondary.main\n    }\n  },\n});\n\nconst makeCompactConfig = (config, index) => {\n  if(index === 0 ){\n    return {\n      ...config\n    };\n  }\n  else {\n    return {\n      ...config,\n      showBeatNumbers : false\n    };\n  }\n};\n\nconst Pattern = React.memo((props)=>\n{\n  const instrumentIndices = [...props.instruments.keys()];\n  const shortNameLengths = props.instruments.map( inst => inst[2].shortName.length );\n  const maxShortNameLength = Math.max( ...shortNameLengths );\n  const formatShortTitle = (s) => {\n    return s + ' '.repeat(maxShortNameLength - s.length);\n  };\n\n  const toResolution = (track, resolutionS) => {\n    if(!resolutionS) return track;\n    const resolution = parseInt(resolutionS);\n    if(track.resolution === resolution) return track;\n    const compatible = track.compatible(resolution);\n    return compatible ? track.format(resolution) : track;\n  };\n  let tracksForResolution = new Map();\n  for(const inst of props.instruments)\n  {\n    const instrumentIDs = Object.keys(inst[1]);\n    // don't reformat patterns, assume them to be in the correct resolution to start\n    // with, at the moment this should be true. In future when we actually support\n    // \"primaryResolution\" this will need to be re-enabled\n    if(true || !props.config.primaryResolution)\n    {\n      for( const instID of instrumentIDs )\n      {\n        tracksForResolution[instID] = props.tracks[instID];\n      }\n    }\n    else\n    {\n      let instrumentIsCompatible = true;\n      for( const instID of instrumentIDs )\n      {\n        instrumentIsCompatible &= props.tracks[instID].compatible(props.config.primaryResolution);\n      }\n      for( const instID of instrumentIDs )\n      {\n        tracksForResolution[instID] = instrumentIsCompatible ?\n          toResolution(props.tracks[instID], props.config.primaryResolution)\n          : props.tracks[instID];\n      }\n    }\n  }\n\n  if(props.config.compactDisplay)\n  {\n    return (\n      <div style={{\"margin\": \"auto\"}}>\n        { instrumentIndices.map(\n            (instrumentIndex) => ( <Part\n              key={\"part-\" + instrumentIndex.toString()}\n              instrument={props.instruments[instrumentIndex][1]}\n              tracks={tracksForResolution}\n              config={makeCompactConfig(props.config, instrumentIndex)}\n              modifyPatternLocation={props.modifyPatternLocation}\n              prefix={formatShortTitle(props.instruments[instrumentIndex][2].shortName)}\n            />\n            )\n          )\n        }\n      </div>\n    );\n  }\n  else\n  {\n    return (\n      <div style={{\"margin\": \"auto\"}}>\n        { instrumentIndices.map(\n            (instrumentIndex) => ( <PartWithTitle\n              key={\"part-\" + instrumentIndex.toString()}\n              instrumentName={props.instruments[instrumentIndex][0]}\n              instrument={props.instruments[instrumentIndex][1]}\n              tracks={tracksForResolution}\n              config={props.config}\n              modifyPatternLocation={props.modifyPatternLocation}\n              dense\n            /> )\n          )\n        }\n      </div>\n    );\n  }\n});\n\nclass ActivePattern extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  calculateBeat(config, patternTime)\n  {\n    const prevBeat = (patternTime !== undefined && patternTime !== null)\n      ? Math.floor(patternTime / config.beatResolution)\n      : null;\n    return prevBeat;\n  }\n\n  changePatternTime(prevBeat, beat, force)\n  {\n    if(beat !== prevBeat || force)\n    {\n      if(prevBeat !== null)\n      {\n        const prevElements = this.ref.current.getElementsByClassName(\"partNote\" + prevBeat.toString());\n        for( const e of prevElements )\n        {\n          e.classList.remove(\"activeNote\");\n        }\n      }\n      if(beat !== null)\n      {\n        const elements = this.ref.current.getElementsByClassName(\"partNote\" + beat.toString());\n        for( const e of elements )\n        {\n          e.classList.add(\"activeNote\");\n        }\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot)\n  {\n    if(prevProps.instruments !== this.props.instruments\n      || prevProps.tracks !== this.props.tracks\n      || prevProps.config !== this.props.config\n      || prevProps.classes !== this.props.classes)\n    {\n      this.changePatternTime(\n        // I don't quite understand why this removal is necessary\n        // it seems that react smartly preserves the previous element,\n        // so we need to fix its smarts or we change beatResolution partNoteX \"stays highlighted\"\n        this.calculateBeat( prevProps.config, prevProps.patternTime),\n        this.calculateBeat( this.props.config, this.props.patternTime),\n        true\n      );\n      return true;\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState)\n  {\n    // we don't trigger a react-rerender on patternTime changes\n    // we handle that in-browser for performance reasons\n    if(nextProps.instruments !== this.props.instruments\n      || nextProps.tracks !== this.props.tracks\n      || nextProps.config !== this.props.config\n      || nextProps.classes !== this.props.classes)\n    {\n      return true;\n    }\n    else if( nextProps.patternTime !== this.props.patternTime)\n    {\n      this.changePatternTime(\n        this.calculateBeat( this.props.config, this.props.patternTime),\n        this.calculateBeat( nextProps.config, nextProps.patternTime),\n        true\n      );\n      return false;\n    }\n    else\n    {\n      return false;\n    }\n  }\n\n  render()\n  {\n    return (\n      <div className={this.props.classes.root} ref={this.ref}>\n        <Pattern\n          instruments={this.props.instruments}\n          tracks={this.props.tracks}\n          config={this.props.config}\n          modifyPatternLocation={this.props.modifyPatternLocation}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(ActivePattern);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction PlaybackControls(props)\n{\n  const tempoControlColumns = 4;\n\n  const onPlay = ()=>{ if(props.onPlay){ props.onPlay(); }; };\n  const onStop = ()=>{ if(props.onStop){ props.onStop(); }; };\n  const onSetTempo = (event, tempo)=>{ if(props.onTempoChange){ props.onTempoChange(tempo); } };\n  const tooltipMsg = \"Playback disabled while content unlocked.\"\n  const playTooltip = props.disabled ? tooltipMsg : \"\";\n  const stopTooltip = props.disabled ? tooltipMsg : \"\";\n\n  return (\n      <React.Fragment>\n        <div>\n          <Tooltip title={playTooltip} aria-label={playTooltip}>\n            <IconButton\n              onClick={props.disabled ? undefined : onPlay}\n              disableRipple={props.disabled}\n              disableFocusRipple={props.disabled}\n            >\n              <PlayArrowIcon style={{color: props.disabled ? \"#cccccc\": \"#4cbb17\"}}/>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={stopTooltip} aria-label={stopTooltip}>\n            <IconButton\n              onClick={props.disabled ? undefined : onStop}\n              disableRipple={props.disabled}\n              disableFocusRipple={props.disabled}\n            >\n              <StopIcon style={{color: props.disabled ? \"#cccccc\": \"#ff0800\"}}/>\n            </IconButton>\n          </Tooltip>\n        </div>\n\n        <Grid container>\n        <Grid item xs={(12 - tempoControlColumns) / 2} />\n        <Grid item xs={tempoControlColumns}>\n        <Slider\n          defaultValue={100}\n          min={60}\n          step={1}\n          max={180}\n          onChange={onSetTempo}\n          valueLabelDisplay=\"auto\"\n        />\n        </Grid>\n        <Grid item xs={(12 - tempoControlColumns ) / 2} />\n        </Grid>\n\n      </React.Fragment>\n   );\n};\n\nexport default React.memo(PlaybackControls);\n","import React from \"react\";\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport TextField from '@material-ui/core/TextField';\n\nclass RenameDialog extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      currentValue : null\n    };\n  }\n\n  render()\n  {\n\n    const cancel = () => {\n      if(this.props.onCancel)\n      {\n        this.props.onCancel();\n      }\n      this.setState({currentValue: null});\n    };\n\n    const confirm = () => {\n      if(this.state.currentName !== null)\n      {\n        const instrumentName = this.state.currentValue.trim();\n        if( instrumentName.length > 0 )\n        {\n          if(this.props.onChange)\n          {\n            this.props.onChange(this.state.currentValue);\n          }\n          this.setState({currentValue: null});\n        }\n        else\n        {\n          // todo: prettier error communication?\n          alert(\n            \"You selected an invalid name \\\"\" + this.state.currentValue + \"\\\".\\n\" +\n            \"Must be non-empty.\"\n          );\n        }\n      }\n      else\n      {\n        cancel();\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {this.props.instruction}\n          </DialogContentText>\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentValue ?? this.props.value}\n            onChange={(e)=>{this.setState({currentValue: e.target.value});}}\n            onKeyDown={handleEnter}\n            autoFocus\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n};\n\nexport default RenameDialog;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport RenameDialog from \"./RenameDialog\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport ClickNHold from 'react-click-n-hold';\nimport Slider from '@material-ui/core/Slider';\n\nimport {isMobile} from \"./Mobile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nconst ThinFormControlLabel = withStyles({\n  root: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n})(FormControlLabel);\n\nconst InlinableIconButton = withStyles({\n  root: {\n    padding: 2\n  }\n})(IconButton);\n\nconst NoDividerCenterTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: \"none\",\n    textAlign: \"center\",\n    paddingBottom: theme.spacing(0) // make instrument titles bunch up with their controls a little more\n  }\n}))(TableCell);\n\nconst CenterTableCell = withStyles((theme) => ({\n  root: {\n    textAlign: \"center\"\n  }\n}))(TableCell);\n\nfunction VolumeWidget(props)\n{\n  const [active, setActive] = React.useState(false);\n  const [sliderValue, setSliderValue] = React.useState(100);\n  const [muted, setMuted] = React.useState(props.muted);\n  const sliderRef = React.useRef(null);\n  const height = props.height ? props.height / 3 : 24;\n  const FixedHeightStylings = {\n    height: 3*height,\n    position: \"absolute\",\n    top: -height\n  };\n  const SliderStyles = Object.assign(active? {} : {\"visibility\": \"hidden\", paddingLeft: \"0px\"}, FixedHeightStylings);\n  const IconStyles = active ?  {\"visibility\":\"hidden\"} : {};\n\n  // currently: updating based on the normal volume event isn't nearly performant enough\n  // (because the app's state update is really sluggish)\n  // potential fixes - seperate the audio and the visual state and/or create smaller state objects\n  const setVolume = (event, value) =>\n  {\n    setSliderValue(value);\n    if( props.onChange )\n    {\n      props.onChange( value );\n    }\n  };\n\n  // for mobile\n  // we click'n'hold which opens the volume slider, but don't propagate focus\n\n  // for desktop/tablet\n  // we click'n'hold and propagate focus to the slider, so that our drag\n  // will pull the slider up and down\n  const holdDesktop = (start, event)=>{\n    if(!active){ setActive(true); }\n    if(sliderRef){ sliderRef.current.dispatchEvent(event.nativeEvent);}\n  };\n\n  const holdMobile= (start, event)=>{\n    if(!active){ setActive(true); }\n  };\n\n  const holdEndDesktop = (e)=>{\n    setActive(false);\n  };\n\n  const commitVolume = (event,value)=>\n  {\n    if( isMobile ){ setActive(false); }\n    setVolume(event,value);\n  };\n\n  const onMuteChange = () =>\n  {\n    setMuted(!muted);\n    props.onMuteEvent(!muted);\n  };\n\n  return (\n    <ClickNHold\n      time={0.5} // Time to keep pressing. Default is 2\n      onClickNHold={isMobile ? holdMobile : holdDesktop}\n      onEnd={isMobile ? null : holdEndDesktop} >\n      <InlinableIconButton disableRipple disableFocusRipple onClick={onMuteChange} >\n        <div style={SliderStyles}>\n          <Slider\n            defaultValue={100}\n            orientation=\"vertical\"\n            aria-labelledby=\"vertical-slider\"\n            onChange={commitVolume}\n            ref={sliderRef}\n          />\n        </div>\n        <div style={IconStyles}>\n          { muted ?  <VolumeOffIcon fontSize=\"small\" />\n          : sliderValue < 10 ? <VolumeMuteIcon fontSize=\"small\" />\n          : sliderValue < 50 ? <VolumeDownIcon fontSize=\"small\" />\n                             : <VolumeUpIcon fontSize=\"small\"/> }\n        </div>\n      </InlinableIconButton>\n    </ClickNHold>\n  );\n}\n\nclass RawInstrumentEditDialog extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSymbol : null\n    };\n  }\n\n  render() {\n\n    const cancel = (e) => {\n      this.setState({currentSymbol : null});\n      if(this.props.onCancel){\n        this.props.onCancel();\n      }\n    };\n\n    const confirm = (e) => {\n      if(this.state.currentSymbol !== null && this.state.currentSymbol.length === 1)\n      {\n        if(this.props.onChange){\n          this.props.onChange(this.state.currentSymbol);\n          this.setState({currentSymbol: null});\n        }\n      }\n      else\n      {\n        // todo: prettier error communication?\n        alert(\n          \"You selected an invalid symbol \\\"\" + this.state.currentSymbol + \"\\\".\\n\" +\n          \"Symbols must be precisely 1 character.\"\n        );\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter notation symbol\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentSymbol ?? this.props.value}\n            onChange={(e)=>{this.setState({currentSymbol: e.target.value});}}\n            onKeyDown={handleEnter}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nfunction InstrumentTable(props)\n{\n  const classes = useStyles();\n\n  const editRow = (y)=>{ if( props.onEditRow ){ props.onEditRow(y); }};\n  const editColumn = (x)=>{ if( props.onEditColumn ){ props.onEditColumn(x); }};\n  const addRow = ()=>{ if( props.onAddRow ){ props.onAddRow(); }};\n  const removeRow = (y)=>{ if( props.onRemoveRow ){ props.onRemoveRow(y); }};\n\n  const handleChange = (x,y, event) => {\n    const instrumentID = props.instrumentIndex[x].id;\n    const oldInstrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const dstInstrumentIndex = y;\n    if( oldInstrumentIndex === dstInstrumentIndex )\n    {\n      return;\n    }\n    const oldInstrument = props.instruments[oldInstrumentIndex];\n    let replacedSrcInstrument = [\n      \"\",\n      {}\n    ];\n    if( oldInstrument != null )\n    {\n      replacedSrcInstrument[0] = oldInstrument[0];\n      for( const key of Object.keys(oldInstrument[1]) )\n      {\n        if( key !== instrumentID.toString() )\n        {\n          replacedSrcInstrument[1][key] = oldInstrument[1][key];\n        }\n      }\n    }\n    let dstInstrument = [\n      props.instruments[dstInstrumentIndex][0],\n      Object.assign({}, props.instruments[dstInstrumentIndex][1] )\n    ];\n    if(oldInstrument != null )\n    {\n      dstInstrument[1][instrumentID.toString()] = oldInstrument[1][instrumentID];\n    }\n    else\n    {\n      dstInstrument[1][instrumentID.toString()] = \"X\";\n    }\n\n    let replacedInstruments = [];\n\n    for(let instrumentIndex = 0; instrumentIndex < props.instruments.length; ++instrumentIndex)\n    {\n      if( instrumentIndex === oldInstrumentIndex )\n      {\n        replacedInstruments.push( replacedSrcInstrument );\n      }\n      else if( instrumentIndex === dstInstrumentIndex )\n      {\n        replacedInstruments.push( dstInstrument )\n      }\n      else\n      {\n        replacedInstruments.push( props.instruments[instrumentIndex] );\n      }\n    }\n    props.onChange(replacedInstruments);\n  };\n\n  let [open, setOpen] = React.useState( false );\n\n  const createCell = (x,y) =>\n  {\n      return (\n        <TableCell\n          align=\"center\"\n          key={\"instrumentPanel-cell-\" + y.toString() + \"-\" + x.toString()}\n        >\n          <ThinFormControlLabel\n            control={<Checkbox checked={props.instrumentMask[x] === y} onChange={(e) =>{handleChange(x,y,e);}} name={x + \",\" + y.toString()} />}\n          />\n        </TableCell>\n      );\n  }\n\n  const createMatchingRow = (y) =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-\" + y.toString()}>\n          <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-\" + y.toString() + \"-name\"}>\n            <Typography>{props.instruments[y][0]}</Typography>\n            <InlinableIconButton onClick={(e)=>{editRow(y);}}><EditIcon fontSize=\"small\"/></InlinableIconButton>\n            <InlinableIconButton onClick={(e)=>{removeRow(y);}}><ClearIcon fontSize=\"small\"/></InlinableIconButton>\n          </TableCell>\n          {[...Array(props.instrumentMask.length).keys()].map(x=>createCell(x,y))}\n      </TableRow>\n    );\n  };\n\n  const createEditRow = () =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-edit\"}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-edit-cell\"}>\n          <IconButton onClick={(e)=>{addRow();}} aria-label=\"add\">\n            <AddBoxIcon/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  return (\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow key={\"instrumentPanel-row-header\"}>\n          { props.showAdvanced && <NoDividerCenterTableCell key={\"instrumentPanel-row-instrument\"}></NoDividerCenterTableCell> }\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <NoDividerCenterTableCell key={\"instrumentPanel-row-header-cell-\" + x.toString()}>\n                <Typography>{props.instrumentIndex[x].name}</Typography>\n              </NoDividerCenterTableCell>)}\n        </TableRow>\n        <TableRow key={\"instrumentPanel-row-controls\"}>\n          { props.showAdvanced &&\n            <CenterTableCell key={\"instrumentPanel-row-instrument\"}>\n              <IconButton aria-label=\"Show Instrument Matcher\" size=\"small\" onClick={() => setOpen(!open)}>\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n              </IconButton>\n            </CenterTableCell>\n          }\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <CenterTableCell key={\"instrumentPanel-row-controls-cell-\" + x.toString()}>\n                <Grid container>\n                <Grid item xs={6}>\n                <InlinableIconButton onClick={(e)=>{editColumn(x);}}>\n                  <EditIcon fontSize=\"small\"/>\n                </InlinableIconButton>\n                </Grid>\n                <Grid item xs={6}>\n                  <VolumeWidget\n                    muted={props.instrumentIndex[x].muted}\n                    onChange={(value)=>{props.onVolumeEvent( {instrument: x, volume: value / 100.0}); }}\n                    onMuteEvent={(muted)=>{props.onVolumeEvent( {instrument: x, muted: muted})}}\n                    />\n                </Grid>\n                </Grid>\n              </CenterTableCell>)}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {open && props.showAdvanced && [...Array(props.instruments.length).keys()].map(y=>createMatchingRow(y))}\n        {open && props.showAdvanced && createEditRow()}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction InstrumentConfig(props) {\n  const theme = useTheme();\n  const [editingSymbol, setEditingSymbol] = React.useState(null);\n  const [renamingInstrument, setRenamingInstrument] = React.useState(null);\n\n  const removeInstrument = (y) =>\n  {\n    let replacedInstruments = props.instruments.slice(0,y).concat(props.instruments.slice(y+1));\n    props.onChange(replacedInstruments);\n  };\n\n  const getSymbol = (x) => {\n    const instrumentID = props.instrumentIndex[editingSymbol].id;\n    const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    return props.instruments[instrumentIndex][1][instrumentID];\n  };\n\n  const endEditingSymbol = (resolvedSymbol) =>\n  {\n    if(resolvedSymbol !== null)\n    {\n      const instrumentID = props.instrumentIndex[editingSymbol].id;\n      const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n      let replacedInstruments = Array.from(props.instruments);\n      replacedInstruments[instrumentIndex][1][instrumentID] = resolvedSymbol;\n      props.onChange(replacedInstruments);\n    }\n    setEditingSymbol( null );\n  };\n\n  const getName = (y) => {\n    return y < props.instruments.length ? props.instruments[y][0] : \"\";\n  };\n\n  const renameInstrument = (instrumentName)  =>\n  {\n    // this function also deals with the addition of new instruments\n    if( renamingInstrument === props.instruments.length )\n    {\n      const extraInstrument = [ instrumentName, {} ];\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments.push(extraInstrument);\n      props.onChange(replacedInstruments);\n    }\n    else\n    {\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments[renamingInstrument][0] = instrumentName;\n      props.onChange(replacedInstruments);\n    }\n    setRenamingInstrument(null);\n  };\n\n  const containerStyle = {\n    \"border\": \"2px solid rgba(255, 255, 255, 0.5)\",\n    \"outline\": \"none\",\n    \"borderRadius\": \"8px\"\n  };\n  return (\n    <div style={{\"paddingBottom\" : theme.spacing(1)}}>\n      <RenameDialog\n        open={renamingInstrument !== null}\n        onCancel={()=>{setRenamingInstrument(null);}}\n        onChange={(s)=>{renameInstrument(s);}}\n        value={renamingInstrument !== null ? getName(renamingInstrument) : \"\"}\n        instruction=\"Enter instrument name\"\n      />\n      <RawInstrumentEditDialog\n        open={editingSymbol !== null}\n        onCancel={()=>{endEditingSymbol(null);}}\n        onChange={(s)=>{endEditingSymbol(s);}}\n        value={editingSymbol !== null ? getSymbol(editingSymbol) : \"\"}\n        />\n      <TableContainer component={Paper} style={containerStyle}>\n        <InstrumentTable\n          instrumentIndex={props.instrumentIndex}\n          instrumentMask={props.instrumentMask}\n          instruments={props.instruments}\n          onEditColumn={(x)=>{setEditingSymbol(x);}}\n          onEditRow={(y)=>{setRenamingInstrument(y);}}\n          onAddRow={()=>{setRenamingInstrument(props.instruments.length)}}\n          onRemoveRow={(y)=>{removeInstrument(y);}}\n          onVolumeEvent={props.onVolumeEvent}\n          onChange={props.onChange}\n          showAdvanced={props.showAdvanced}\n        />\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default React.memo( InstrumentConfig );\n","class Audio\n{\n\n  // todo: we replace a valid audioContext with a blank object, so that we can run tests in node\n  //       this should probably be replaced by https://github.com/audiojs/web-audio-api\n  //       and a test-suite written\n  static createWebContext()\n  {\n    return new (window.AudioContext || window.webkitAudioContext || Object)();\n  }\n\n  static determineMinResolution(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let minResolution = 48;\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && !t.empty()\n        )\n        {\n          minResolution = Math.min( minResolution, t.resolution );\n        }\n      }\n      return minResolution;\n  }\n\n  static determineTrackLength(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let trackLength = 48;\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && !t.empty()\n        )\n        {\n          trackLength = Math.max( trackLength, t.length() );\n        }\n      }\n      return trackLength;\n  }\n\n  static peakAmplitude(\n    combined\n  )\n  {\n    let peakValue = 0.0;\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for( let sample = 0; sample < combinedChannel.length; ++sample)\n      {\n        peakValue = Math.max( Math.abs(combinedChannel[sample]), peakValue );\n      }\n    }\n    return peakValue;\n  }\n\n  static normalizeAudioBuffer(\n    combined\n  )\n  {\n    const peakValue = Audio.peakAmplitude( combined );\n    if( peakValue > 1.0 )\n    {\n      for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n        let combinedChannel = combined.getChannelData(channel);\n        for( let sample = 0; sample < combinedChannel.length; ++sample)\n        {\n          combinedChannel[sample] = combinedChannel[sample] / peakValue;\n        }\n      }\n    }\n    return combined;\n  }\n\n  static createMasterTrack(\n    context,\n    tracks,\n    instrumentIndex,\n    sounds,\n    tempo\n  )\n  {\n    const trackLength = Audio.determineTrackLength( instrumentIndex, tracks );\n\n\n    const beatTime =  (60.0 / tempo) * 1000;\n    const timePerHydrogen = beatTime / 48.0;\n\n\n    // let's assume we can do some simple things\n\n    const sampleRate = 44100;\n    const channels = 2;\n    const trackLengthMs = trackLength * timePerHydrogen;\n    const trackLengthSamples = trackLengthMs * sampleRate / 1000.0;\n    const totalSamples = Math.floor(trackLengthSamples);\n    const samplesPerHydrogen = Math.floor( totalSamples / trackLength );\n    const combined = context.createBuffer(channels, totalSamples, sampleRate);\n\n    // populate blank buffer with sounds\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && selected[0].id in sounds\n          && !t.empty()\n        )\n        {\n          const audioBuffer = sounds[selected[0].id];\n          // fallback to copying the mono buffer across both channels\n          const audioChannel = audioBuffer.numberOfChannels === 2 ? audioBuffer.getChannelData(channel) : audioBuffer.getChannelData(0);\n          const trackPoints = t.toPoints();\n          for( const noteStart of trackPoints )\n          {\n            const sampleStart = noteStart * samplesPerHydrogen;\n            for( let sample = 0; sample < audioBuffer.length; ++sample )\n            {\n              // add sample to mega track\n              combinedChannel[sampleStart + sample] = combinedChannel[sampleStart + sample] + audioChannel[sample];\n            }\n          }\n        }\n      }\n    }\n\n    return Audio.normalizeAudioBuffer( combined );\n  }\n\n  static createAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=true;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n  static createOneShotAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=false;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n}\n\nexport default Audio;","\nimport Audio from \"./Audio\"\nimport * as Tone from \"tone\";\n\n// we schedule for a delay of 120ms to allow the audio context to catch up\nconst DEFAULT_AUDIO_DELAY = 0.05;\nlet AUDIO_DELAY = DEFAULT_AUDIO_DELAY;\n\nconst setAudioDelay = (value) => {\n  AUDIO_DELAY = value;\n};\n// these are the hydrogen drumkits available by GPL/CC\n\nconst DRUMKITS = [\n  \"circAfrique v4\",\n  \"DeathMetal\",\n  \"The Black Pearl 1.0\",\n  \"GMRockKit\",\n  \"TR808EmulationKit\",\n  \"Millo_MultiLayered3\",\n  \"BFS drumming\"\n];\n\nconst convertNormalToAudible = (value) => {\n  // add an intuitive feel to gain values, perception of sound is non-linear\n  // https://www.dr-lex.be/info-stuff/volumecontrols.html\n  // note: I tried x^4 and I tried using tone's DB directly but neither felt very good.\n  return Math.pow(value, 2.5);\n};\n\nconst chooseAppropriateUrlForInstrument = (drumkitName, instrumentName) =>\n{\n  const name = instrumentName.toLowerCase();\n  // this is currently very basic\n  if(name.includes(\"kick\"))\n  {\n      return \"The Black Pearl 1.0/PearlKick-Hard.wav\";\n  }\n  else if(name.includes(\"stick\"))\n  {\n      return \"DeathMetal/16297_ltibbits_sticks_low_pitch.wav\";\n  }\n  else if(name.includes(\"tom\"))\n  {\n      return \"Millo_MultiLayered3/ft_01.wav\"\n  }\n  else if(name.includes(\"clap\"))\n  {\n      return \"TR808EmulationKit/808_Clap.wav\";\n  }\n  else if(name.includes(\"snare\"))\n  {\n    return \"GMRockKit/Snare-Soft.wav\";\n  }\n  else if(name.includes(\"cowbell\"))\n  {\n    return \"GMRockKit/Cowbell-Softest.wav\";\n  }\n  else\n  {\n    // todo: snare, cymbals\n    return null;\n  }\n}\n\nconst createSequenceCallback = (pattern, sampleSource) =>\n{\n  let samplesReady = sampleSource.samplesReady();\n  const sequenceCallback = (time, indexFromStart) =>\n  {\n    // if we don't know samples are ready,\n    if(!samplesReady)\n    {\n      // update our knowledge, and early out if needed\n      samplesReady = sampleSource.samplesReady();\n      if(!samplesReady){ return; }\n    }\n    const trackLengthRes = ( pattern.length / pattern.resolution );\n    const index = indexFromStart % trackLengthRes;\n    if(window.trace)\n    {\n      window.trace(\"playing sequence callback at time \" + String(time) + \" index \" + String(indexFromStart) );\n    }\n    for(const [id,t] of Object.entries(pattern.tracks))\n    {\n        if( t.rep[index] )\n        {\n          const sampleData = sampleSource.samples[id];\n          if( sampleData !== undefined )\n          {\n            sampleData.player.stop(time + AUDIO_DELAY);\n            sampleData.player.start(time + AUDIO_DELAY);\n          }\n        }\n    }\n    if(sampleSource.onPatternTimeChange)\n    {\n      Tone.getDraw().schedule(\n        ()=>{\n          if(Tone.getTransport().state === \"started\")\n          {\n            const notePosition = (index * pattern.resolution) % pattern.length;\n            if(sampleSource.onPatternTimeChange)\n            {\n              sampleSource.onPatternTimeChange(notePosition);\n            }\n          }\n        },\n        time + AUDIO_DELAY\n      );\n    }\n  };\n  return sequenceCallback;\n};\n\nconst createSortedUnique = (failures) =>\n{\n  let sortedFailures = [];\n  for( const [drumkit, name] of failures )\n  {\n    let noMatch = true;\n    for( const [otherDrumkit, otherName] of sortedFailures )\n    {\n      if( drumkit === otherDrumkit && name === otherName )\n      {\n        noMatch = false;\n        break;\n      }\n    }\n    if( noMatch )\n    {\n      sortedFailures.push( [drumkit, name] );\n    }\n  }\n  sortedFailures.sort();\n  return sortedFailures;\n}\n\nclass ToneController\n{\n  constructor(\n    instrumentIndex,\n    patterns,\n    tempo,\n    onTimeChange,\n    latencyHint,\n    onLoadError\n  )\n  {\n\n    if(onLoadError)\n    {\n      const patternNames = patterns.map(p=>p.name);\n      const patternNameSet = new Set(patternNames);\n      if(patternNames.length !== patternNameSet.size)\n      {\n          onLoadError(\"Warning: tabit currently only supports inputs where all the pattern names are unique. Good luck!\");\n      }\n    }\n\n    if(latencyHint && Tone.context.latencyHint !== latencyHint)\n    {\n      let context = new Tone.Context({latencyHint: latencyHint});\n      Tone.setContext(context);\n    }\n\n    // also configure a larger audio delay, if we're being requested to\n    // prioritise playback over latency\n    if(latencyHint === \"playback\")\n    {\n      // value in seconds (relatively arbitrary)\n      setAudioDelay(0.2)\n    }\n    else\n    {\n      setAudioDelay(DEFAULT_AUDIO_DELAY);\n    }\n\n    this.latencyHint = latencyHint;\n\n    // this thing has a lot of state, eh?\n    // would love if this state was a bit more structured\n    this.samples = {};\n    this.currentPattern = null;\n    this.gain = new Tone.Gain();\n    this.gain.toDestination();\n    this.onPatternTimeChange = onTimeChange;\n    Tone.getTransport().bpm.value = tempo;\n    Tone.getTransport().loop = true;\n\n    this.sampleCount = 0;\n    this.expectedSampleCount = 0;\n    this.patternDetails = {};\n    let failures = []\n    for( let p of patterns )\n    {\n      this.patternDetails[p.name] = {\n        resolution: Audio.determineMinResolution(instrumentIndex, p.instrumentTracks ),\n        length : Audio.determineTrackLength(instrumentIndex, p.instrumentTracks ),\n        name: p.name,\n        tracks: p.instrumentTracks,\n        pattern: p\n      };\n      this.populateSamples(instrumentIndex, p.instrumentTracks, failures);\n    }\n    this.currentPatternName = null;\n    this.instrumentIndex = instrumentIndex;\n\n    if(failures.length > 0 && onLoadError)\n    {\n      const sortedFailures = createSortedUnique(failures);\n      const plural = sortedFailures.length > 1 ;\n      const s = plural ? \"s\" : \"\";\n      let message = \"Failed to load sample\" + s + \" for instrument\" + s + \": \" + (plural ? \"{\" : \"\");\n      for( let failureIndex = 0; failureIndex < sortedFailures.length; ++failureIndex )\n      {\n        const [drumkit, name] = sortedFailures[failureIndex];\n        message += name;\n        if( drumkit !== \"\" ){ message += \" (\" + drumkit + \")\"; }\n        if(failureIndex !== sortedFailures.length - 1){ message += \", \"; }\n        else{ message += (plural ? \"}\" : \"\") + \".\" }\n      }\n      message += \"\\n\" +\n       \"tabit's supported drumkits are \" + DRUMKITS.join( \", \" ) + \".\";\n\n      onLoadError(message);\n    }\n  }\n\n  teardown()\n  {\n    this.stop();\n    // cancel all future events\n    // note: it's unclear if this will appropriately dispose of all sequences & samples\n    // so this may be a performance problem in the long term\n    Tone.getTransport().cancel();\n  }\n\n  samplesReady()\n  {\n    return this.sampleCount === this.expectedSampleCount;\n  }\n\n  updatePattern = (p) =>\n  {\n    this.patternDetails[p.name] = {\n      resolution: Audio.determineMinResolution(this.instrumentIndex, p.instrumentTracks ),\n      length : Audio.determineTrackLength(this.instrumentIndex, p.instrumentTracks ),\n      name: p.name,\n      tracks: p.instrumentTracks,\n      pattern: p\n    };\n\n    if( p.name === this.currentPatternName)\n    {\n      const updatedSequence = this.createSequenceForPattern(this.instrumentIndex, this.patternDetails[p.name].pattern);\n      this.sequence._part.mute = true;\n      this.sequence = updatedSequence;\n      updatedSequence._part.mute = false;\n    }\n  }\n\n  removePattern = (patternName) =>\n  {\n    if(patternName === this.currentPatternName)\n    {\n      // todo: we could support this, but it should be unnecessary\n      // the above class should always change away first\n      throw new Error(\"Can't delete the current pattern!\");\n    }\n    this.patternDetails[patternName] = undefined;\n  }\n\n  populateSamples(instrumentIndex, tracks, failures)\n  {\n    this.sampleCount = 0;\n    for(const [id,] of Object.entries(tracks))\n    {\n      const selected = instrumentIndex.filter(inst => inst.id.toString() === id);\n      if( selected.length > 0)\n      {\n        const selectedInstrument = selected[0];\n        const clampedVolume = convertNormalToAudible( Math.min( Math.max( 0.0 , selectedInstrument.volume ), 1.0 ) );\n        if( selectedInstrument.id in this.samples )\n        {\n          continue;\n        }\n        if(\n          \"drumkit\" in selectedInstrument &&\n          \"filename\" in selectedInstrument &&\n          DRUMKITS.includes(selectedInstrument.drumkit) )\n        {\n          const filename = selectedInstrument.filename.replace(\".flac\", \".wav\");\n          let player = new Tone.Player(\n            process.env.PUBLIC_URL + \"/wav/\" + selectedInstrument.drumkit + \"/\" + filename,\n            () => { this.sampleCount++; }\n          );\n          player.mute = selectedInstrument.muted;\n          player.name = selectedInstrument.name;\n          const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n          player.connect(gain)\n          gain.connect(this.gain);\n          this.samples[selectedInstrument.id] = { player : player, gain : gain }\n          this.expectedSampleCount++;\n        }\n        else if( \"drumkit\" in selectedInstrument )\n        {\n          const relativeUrl = chooseAppropriateUrlForInstrument( selectedInstrument.drumkit, selectedInstrument.name );\n          if(relativeUrl !== null)\n          {\n            let player = new Tone.Player(\n              process.env.PUBLIC_URL + \"/wav/\" + relativeUrl,\n              () => { this.sampleCount++; }\n            );\n            player.mute = selectedInstrument.muted;\n            player.name = selectedInstrument.name;\n            const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n            player.connect(gain);\n            gain.connect(this.gain);\n            this.samples[selectedInstrument.id] = { player : player, gain : gain }\n            this.expectedSampleCount++;\n          }\n          else\n          {\n            failures.push( [selectedInstrument.drumkit, selectedInstrument.name] );\n          }\n        }\n        else\n        {\n            failures.push( [\"\", selectedInstrument.name] );\n        }\n      }\n    }\n  }\n\n  createSequenceForPattern(instrumentIndex, pattern)\n  {\n      const patternResolution = this.patternDetails[pattern.name].resolution;\n      const patternLength = this.patternDetails[pattern.name].length;\n      const callback = createSequenceCallback(\n        this.patternDetails[pattern.name],\n        this\n      );\n      let seq = new Tone.Sequence(\n        callback,\n        [...Array(patternLength / patternResolution).keys()],\n        Tone.Time(\"4n\") * ( patternResolution / 48.0 )\n      );\n      // start the sequence, but the ticks won't be triggered when muted\n      // note: setting mute on the sequence directly seems to have no effect\n      seq._part.mute = true;\n      seq.start(0);\n      return seq;\n  }\n\n  createSequences(instrumentIndex, patterns)\n  {\n    let sequences = {};\n    for( let p of patterns )\n    {\n      sequences[p.name] = this.createSequenceForPattern(instrumentIndex, p);\n    }\n    return sequences;\n  }\n\n  setActivePattern( patternName )\n  {\n    if(patternName === this.currentPatternName)\n    {\n      return;\n    }\n    const oldPatternName = this.currentPatternName !== null ? this.currentPatternName : null;\n    const length = this.patternDetails[patternName].length;\n    const oldLength = oldPatternName !== null ? this.patternDetails[oldPatternName] : null\n\n    // TODO: Since introducing a scheduling delay, this fudge factor is less reliable\n    // Particularly, the transition gets queued but the first beat is a little sloppy\n    // it's possible the whole transition functor needs to be faster\n\n    // we have a little fudge in here... if we're transitioning from a 4 beat loop\n    // to an 8 beat pattern ... we probably really wanted to hit the start of that pattern,\n    // not to transition at 3.75 beats and play the latter half\n    const timeFromBarEnd = Tone.getTransport().loopEnd - ( Tone.getTransport().toSeconds(Tone.getTransport().position) - AUDIO_DELAY );\n\n    // if we've been told playback speed should be prioritised, let's just pause as we change\n    const stopToChange = this.latencyHint === \"playback\";\n    const queueTransition = !stopToChange\n      && oldPatternName !== null\n      && Tone.getTransport().state === \"started\"\n      && ( timeFromBarEnd > 0 && timeFromBarEnd < Tone.getTransport().toSeconds(Tone.Time(\"8n\")));\n\n    // create this before starting the \"transaction\"\n    const nextSequence = this.createSequenceForPattern(this.instrumentIndex, this.patternDetails[patternName].pattern);\n\n    const enableNewTrack = (time) => {\n      if(oldPatternName !== null)\n      {\n        // note: setting mute on the sequence directly seems to have no effect\n        this.sequence._part.mute = true;\n      }\n      if(oldPatternName === null || oldLength !== length )\n      {\n\n        Tone.getTransport().setLoopPoints(0, Tone.Time(\"4n\") * (length / 48.0));\n      }\n      this.sequence = nextSequence;\n      this.sequence._part.mute = false;\n      this.currentPatternName = patternName;\n    };\n\n    const playing = Tone.getTransport().state === \"started\";\n    if(stopToChange && playing)\n    {\n      this.stop();\n    }\n\n    if( queueTransition ) {\n      Tone.getTransport().scheduleOnce(\n        enableNewTrack,\n        Tone.Time(\"0\")\n      );\n    }\n    else\n    {\n      enableNewTrack();\n    }\n    if(stopToChange && playing)\n    {\n      this.play();\n    }\n  }\n\n  isPlaying()\n  {\n      const playing = Tone.getTransport().state === \"started\";\n      return playing;\n  }\n  \n  play()\n  {\n    // Tone.start is needed to be triggered from a user interaction\n    // (web-audio-context policy of not playing until a user interaction)\n    Tone.start().then(()=>{Tone.getTransport().start();});\n  }\n\n  stop()\n  {\n    // it's slightly unclear what the synchronisation semantics of this Tone.getTransport().stop() call are.\n    // If a tick is currently in flight on Tone.getTransport() we have to ensure that\n    // the reset of patternTime occurs *afterwards*.\n    // The below calls seem to work for this, but I couldn't tell you why.\n    if( Tone.getTransport().state === \"started\")\n    {\n      Tone.getTransport().stop();\n      if( this.onPatternTimeChange )\n      {\n        Tone.getDraw().schedule(\n          ()=>{\n            this.onPatternTimeChange( null );\n          },\n          Tone.getTransport().now()\n        );\n      }\n    }\n  }\n\n  setAnimateCallback(onPatternTimeChange)\n  {\n    if(this.onPatternTimeChange)\n    {\n      this.onPatternTimeChange(null);\n    }\n    this.onPatternTimeChange = onPatternTimeChange;\n  }\n\n  setMutedForInstrument(instrumentID, muted)\n  {\n    this.samples[instrumentID].player.mute = muted;\n  }\n\n  setVolumeForInstrument(instrumentID, volume)\n  {\n    this.samples[instrumentID].gain.set( {gain : convertNormalToAudible(volume) } );\n  }\n\n  setTempo(tempo)\n  {\n    Tone.getTransport().bpm.value = tempo;\n  }\n\n  getTempo()\n  {\n    return Tone.getTransport().bpm.value;\n  }\n};\n\n\n\nexport default ToneController;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport copy from \"copy-to-clipboard\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n\nfunction SharingDialog(props)\n{\n  return <Dialog\n    open={props.open}\n    onClose={props.onClose}\n    aria-labelledby=\"sharing-dialog\"\n    aria-describedby=\"sharing-dialog\"\n  >\n    <DialogContent>\n      <DialogContentText>\n      Your song is available at\n      </DialogContentText>\n      <DialogContentText>\n      {props.url}\n      <IconButton onClick={(e)=>{ copy(props.url); }}>\n        <FileCopyIcon />\n      </IconButton>\n      </DialogContentText>\n      <DialogActions>\n        <Button onClick={props.onClose}>\n          Close\n        </Button>\n      </DialogActions>\n    </DialogContent>\n  </Dialog>\n}\n\nSharingDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  url: PropTypes.string\n}\n\nexport default React.memo(SharingDialog);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplayIcon from '@material-ui/icons/Replay';\n\n/*\n  This file is based on the transfer-list example available in material UI.\n  https://material-ui.com/components/transfer-list/\n*/\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"auto\"\n  },\n  paper: {\n    width: 200,\n    height: 230,\n    overflow: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  }\n}));\n\nexport default function TransferList({items, selectedItems, onChange}) {\n  const classes = useStyles();\n\n  const [checked, setChecked] = React.useState(items.map(item => false));\n\n  const handleChecked = (itemIndex) => {\n    const newChecked = [...checked.keys()].map(index=>(index===itemIndex ? !checked[index] : checked[index]));\n    setChecked( newChecked );\n  };\n\n  const handleCheckedRight = () => {\n    const newValues = selectedItems.concat( items.filter(item=>checked[item.value]) );\n    if(onChange){ onChange(newValues); }\n    setChecked(items.map(item => false))\n  };\n\n  const handleReset = () => {\n    if(onChange){ onChange([]); }\n    setChecked(items.map(item => false))\n  };\n\n  const customList = (items, checkable) => (\n    <Paper className={classes.paper}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map((item) => {\n          const labelId = `transfer-list-item-${item.value}-label`;\n\n          return (\n            <ListItem\n              key={item.value}\n              role=\"listitem\"\n              button\n              onClick={()=>{handleChecked(item.value)}}\n            >\n              { checkable &&\n                <ListItemIcon>\n                <Checkbox\n                  checked={checked[item.value]}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ \"aria-labelledby\": labelId }}\n                />\n                </ListItemIcon>\n              }\n              <ListItemText id={labelId} primary={item.label} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      justify=\"center\"\n      alignItems=\"center\"\n      className={classes.root}\n    >\n      <Grid item>{customList(items, true)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <IconButton\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedRight}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </IconButton>\n          <IconButton\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleReset}\n            aria-label=\"reset\"\n          >\n            <ReplayIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(selectedItems, false)}</Grid>\n    </Grid>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CustomTransferList from \"./CustomTransferList\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      backgroundColor: \"#111111\"\n    },\n  }),\n);\n\nfunction PatternCreateDialog(props)\n{\n  let [patternName, setPatternName] = React.useState(null);\n  let [patternRecipe, setPatternRecipe] = React.useState([]);\n  let [createExpanded, setCreateExpanded] = React.useState(true);\n  let [combineExpanded, setCombineExpanded] = React.useState(false);\n  let [timeSignatureNumString, setTimeSignatureNumString] = React.useState(\"\");\n  let [timeSignatureDenom, setTimeSignatureDenom] = React.useState(4);\n  let [patternResolution, setPatternResolution] = React.useState(16);\n\n  const resetState = () => {\n    setPatternName(null);\n    setPatternRecipe([]);\n    setCreateExpanded(true);\n    setCombineExpanded(false);\n    setTimeSignatureNumString(\"\");\n    setTimeSignatureDenom(4);\n    setPatternResolution(16);\n  };\n\n  const closeAndCommit = (commit)=>{\n    if(!commit)\n    {\n      // we're cancelling\n      resetState();\n      props.onClose();\n      return;\n    }\n    if(createExpanded)\n    {\n\n    }\n    else if(combineExpanded)\n    {\n      // validate all fields and generate errors\n      if(patternRecipe && patternName)\n      {\n        props.onChange({name: patternName, recipe: patternRecipe});\n      }\n\n    }\n    else\n    {\n      console.error(\"unreachable code in closeAndCommit\");\n    }\n  };\n\n  const patternChoices = [...props.patterns.keys()].map(\n    index =>{ return {value: index, label: props.patterns[index]}; }\n  );\n\n  const invalidPatternName = !patternName || props.patterns.indexOf(patternName) !== -1;\n  const timeSignatureNum = parseInt( timeSignatureNumString );\n  const timeSignatureNaN = isNaN(timeSignatureNum)\n  const timeSignatureNonPositive = !timeSignatureNaN && timeSignatureNum <= 1;\n  const createOptionsCommitable = !timeSignatureNaN && !timeSignatureNonPositive;\n\n  const createExpandedToggle = (event, enabled) =>\n  {\n    setCreateExpanded(enabled);\n    if(combineExpanded)\n    {\n      setCombineExpanded(!enabled);\n    }\n  };\n  const combineExpandedToggle = (event, enabled) =>\n  {\n    if(createExpanded)\n    {\n      setCreateExpanded(!enabled);\n    }\n    setCombineExpanded(enabled);\n  };\n  const classes = useStyles();\n\n  const timeSignatureDenomOptions = [2, 4, 8, 16, 32];\n  // onKeyDown={handleEnter}\n\n  const resolutionOptions = [\n    \"8\",\n    \"16\",\n    \"32\",\n    \"8T\",\n    \"16T\",\n    \"32T\"\n  ];\n\n  const combineOptionsCommitable = patternRecipe.length >= 1;\n  const canCommit = !invalidPatternName && (\n    ( combineExpanded && combineOptionsCommitable)\n    || (createExpanded && createOptionsCommitable)\n  );\n\n  // FIXME: This essentially needs tooltips everywhere\n\n  return <Dialog\n    open={props.open}\n    onClose={props.onClose}\n    aria-labelledby=\"pattern-edit-dialog\"\n    aria-describedby=\"pattern-edit-dialog\"\n  >\n    <DialogContent>\n      <Accordion expanded={createExpanded} onChange={createExpandedToggle}>\n      <AccordionSummary\n        aria-controls=\"option-create\"\n        id=\"panel-create\"\n        expandIcon={<ExpandMoreIcon />}\n        className={classes.root}\n      >\n        <Typography>Create new pattern</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <FormGroup aria-label=\"time-signature-controls\" row>\n          <Typography style={{\"padding\": 5}}>PatternLength</Typography>\n          <TextField\n            error={timeSignatureNumString.length > 0 && (timeSignatureNonPositive || timeSignatureNaN)}\n            helperText={\n              timeSignatureNumString.length > 0 && (timeSignatureNonPositive || timeSignatureNaN) ?\n                (timeSignatureNonPositive ? \"Please enter a number >= 1.\" : \"Please enter a number.\")\n                : undefined\n            }\n            value={timeSignatureNumString}\n            variant=\"outlined\"\n            onChange={(event)=>{\n              console.log(\"setting ts-num string \" + event.target.value)\n              setTimeSignatureNumString(event.target.value);\n            }}\n          />\n          <div style={{alignItems: \"center\", display: \"inline-flex\"}}>\n            <Typography style={{paddingLeft: 5, paddingRight: 5}}>/</Typography>\n          </div>\n          <Select\n            labelId={\"time-signature-denom-label\"}\n            id={\"time-signature-denom\"}\n            onChange={(e) => setTimeSignatureDenom( e.target.value )}\n            value={timeSignatureDenom}\n            IconComponent={()=><React.Fragment/>}\n          >\n            {timeSignatureDenomOptions.map((op) => <MenuItem\n              key={\"ts-\" + op.toString()}\n              value={op}\n            >\n                {op.toString()}\n              </MenuItem>)}\n          </Select>\n        </FormGroup>\n      </AccordionDetails>\n      </Accordion>\n      <Accordion expanded={combineExpanded} onChange={combineExpandedToggle}>\n      <AccordionSummary\n        aria-controls=\"option-combine\"\n        id=\"panel-combine\"\n        expandIcon={<ExpandMoreIcon />}\n        className={classes.root}\n      >\n        <Typography>Combine Patterns</Typography>\n      </AccordionSummary>\n      <AccordionDetails style={{display: \"flex\", flexDirection: \"column\"}}>\n        <CustomTransferList\n          items={patternChoices}\n          selectedItems={patternRecipe}\n          onChange={setPatternRecipe}\n        />\n      </AccordionDetails>\n      </Accordion>\n      <Box style={{display: \"flex\", flexDirection: \"column\"}}>\n        <TextField\n          error={patternName && invalidPatternName}\n          label=\"Pattern Name\"\n          helperText={patternName && invalidPatternName ? \"Pattern names must be unique.\" : undefined}\n          variant=\"outlined\"\n          onChange={(event)=>{setPatternName(event.target.value);}}\n          style={{alignSelf: \"flex-end\"}}\n        />\n      </Box>\n      <DialogActions>\n        <Button onClick={()=>{closeAndCommit(true)}} disabled={!canCommit}>\n          Confirm\n        </Button>\n        <Button onClick={()=>{closeAndCommit(false)}}>\n          Close\n        </Button>\n      </DialogActions>\n    </DialogContent>\n  </Dialog>\n}\n\nPatternCreateDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  patterns: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default PatternCreateDialog;\n","import React from 'react';\nimport Pattern from \"./Pattern\";\nimport PlaybackControls from \"./PlaybackControls\";\nimport notation from \"./notation\";\nimport InstrumentConfig from \"./instrumentConfig\";\nimport { createInstrumentMask } from \"./instrumentation\";\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TabitBar from \"./TabitBar\";\nimport PatternDrawer from \"./PatternDrawer\"\nimport ToneController from \"./ToneController\"\nimport SettingsDrawer from \"./SettingsDrawer\"\nimport { isMobile } from \"./Mobile\";\nimport SharingDialog from \"./SharingDialog\";\nimport PatternCreateDialog from \"./PatternCreateDialog\";\nimport Toolbar from '@material-ui/core/Toolbar';\n// todo: pass the needed .put function via a prop?\nimport * as SongStorage from \"./SongStorage\";\nimport memoizeOne from 'memoize-one';\n\nconst makeResolvedSettings = memoizeOne( (globalSettings, patternSettings) => {\n  let resolvedSettings = Object.assign({}, globalSettings);\n  if(patternSettings)\n  {\n    resolvedSettings = Object.assign(resolvedSettings, patternSettings);\n  }\n  return resolvedSettings;\n});\n\nclass SongView extends React.Component\n{\n\n  state = {\n    selectedPattern: 0,\n    patternSettings: this.props.songData.patternSettings,\n    formatSettings: this.props.songData.formatSettings,\n    songData: {instruments: this.props.songData.instruments,\n        instrumentIndex: this.props.songData.instrumentIndex,\n        instrumentMask: this.props.songData.instrumentMask,\n        patterns: this.props.songData.patterns,\n        title: this.props.songData.title\n    },\n    settingsOpen: false,\n    patternsOpen: true,\n    sharingDialogOpen: false,\n    patternCreateDialogOpen: false,\n    patternTime: null,\n    errorAlert: null,\n    locked: true,\n    animating: true,\n    interactive: false\n  }\n\n  componentDidMount()\n  {\n    window.app = this;\n    this.createController();\n    // save our work when we navigate away via tab-close\n    window.addEventListener('beforeunload', this.onSave);\n    if(isMobile){ window.addEventListener(\"visibilitychange\", this.onHideView); }\n\n  }\n  createAnimateCallback()\n  {\n    const animateCallback = (time)=>{\n      if(window.trace)\n      {\n        window.trace(\"animate step \" + String(time));\n      }\n      const nullCheck = (this.state.patternTime === null) !== (time === null);\n      const currentBeatResolution = this.state.patternSettings[this.state.selectedPattern].beatResolution;\n      const currentBeat = Math.floor(this.state.patternTime / currentBeatResolution);\n      const nextBeat =  Math.floor(time / currentBeatResolution);\n      if( nullCheck || currentBeat !== nextBeat )\n      {\n        if(window.trace)\n        {\n          window.trace(\n            \"setting pattern time (currentBeat, nextBeat, state.patternTime, time) (\"\n            + String(currentBeat) + \", \" + String(nextBeat) + \",\" + String(this.state.patternTime) + \",\" + String(time)\n            +  \")\"\n          );\n        }\n\n        this.setState( {patternTime: time } );\n      }\n    };\n    return animateCallback;\n  }\n\n  createController()\n  {\n    let tempo = 100.0; // default\n    if(this.audio){\n      tempo = this.audio.getTempo();\n      this.audio.teardown();\n    }\n    const latencyHint = isMobile ? \"playback\" : null;\n    const animateCallback = this.createAnimateCallback();\n    this.audio = new ToneController(\n      this.state.songData.instrumentIndex,\n      this.state.songData.patterns,\n      tempo,\n      animateCallback,\n      latencyHint,\n      this.setError\n    );\n    this.audio.setActivePattern( this.state.songData.patterns[this.state.selectedPattern].name );\n  }\n\n  removePattern = (index) =>\n  {\n    if(this.audio){this.audio.stop();}\n\n    if( this.state.songData.patterns.length === 1 )\n    {\n      // don't let the app get into a bad state\n      return this.setError(\"Can't delete the last pattern\")\n    }\n\n    const indices = [...Array(this.state.songData.patterns.length).keys()].filter(ix => ix !== index);\n    const newPatterns = indices.map( ix => this.state.songData.patterns[ix] );\n    const patternSettings =  indices.map( ix => this.state.patternSettings[ix] );\n    const updatedSongData = Object.assign(\n      Object.assign({}, this.state.songData),\n      {patterns: newPatterns}\n    );\n    // if ix === selected, use the lower pattern index\n    // ix < selected shift down by one to keep the same pattern\n    // ix > selected, keep the same index\n    const samePatternIndex = index <= this.state.selectedPattern ? this.state.selectedPattern - 1 : this.state.selectedPattern;\n    // note that since we sometimes shift down, let's just bound ourselves sanely\n    const boundedPatternIndex = Math.min( Math.max( 0, samePatternIndex ), indices.length - 1 );\n\n    const oldActivePatternName = this.state.selectedPattern;\n\n    this.setState(\n      {\n        songData: updatedSongData,\n        patternSettings: patternSettings,\n        selectedPattern: boundedPatternIndex\n      },\n      () => {\n        // we change away before removing the pattern, this is currently enforced by the ToneController\n        this.audio.setActivePattern( this.state.songData.patterns[this.state.selectedPattern].name );\n        this.audio.removePattern(oldActivePatternName);\n      }\n    );\n\n  }\n\n  // cells will be at hydrogen-esque-resolution\n  cycleCellContent = (modificationCells, instrument) =>\n  {\n    // note: we'll be provided multiple cells in the case where a pattern is like AAAB\n    // we only support the case where all the cells we're updating have identical content\n    // and will switch to identical content\n\n    const representativeCell = modificationCells[0];\n    // sort by the symbol content, to get intuitive behaviour\n    const entries = [...Object.entries(instrument)].sort( (e1, e2)=>{return e1[1] < e1[2];} );\n\n    const currentPattern = notation.clonePattern(\n      this.state.songData.patterns[ this.state.selectedPattern ].name,\n      this.state.songData.patterns[ this.state.selectedPattern ]\n    );\n\n    // so there's redundancy in the songData\n    // we have instrumentTracks and also\n    // \"notes\" which contains everything, we should keep notes in sync\n    // but at the moment we don't\n\n    let currentActiveTrackIndex = null;\n    for( let entryIndex = 0; entryIndex < entries.length; ++entryIndex)\n    {\n      const entry = entries[entryIndex];\n      const trackID = entry[0];\n      // first point should be representative, see note above\n      if(currentPattern.instrumentTracks[trackID].queryPoint(representativeCell) === 1)\n      {\n        currentActiveTrackIndex = entryIndex;\n        break;\n      }\n    }\n    // increment (allowing for \"null\")\n    const targetTrackIndex = currentActiveTrackIndex === null ? 0\n                          : currentActiveTrackIndex === entries.length - 1 ? null\n                          : currentActiveTrackIndex + 1;\n\n    const currentTrack = currentActiveTrackIndex === null ? null : currentPattern.instrumentTracks[ entries[currentActiveTrackIndex][0] ];\n    const targetTrack = targetTrackIndex === null ? null : currentPattern.instrumentTracks[ entries[targetTrackIndex][0] ];\n    for( const cell of modificationCells )\n    {\n      if( currentTrack )\n      {\n        currentTrack.setPoint( cell, 0 );\n      }\n      if(targetTrack)\n      {\n        targetTrack.setPoint( cell, 1 );\n      }\n    }\n    const modifiedPatterns =\n      this.state.songData.patterns.slice(0, this.state.selectedPattern).concat(\n      [currentPattern]\n    ).concat(\n      this.state.songData.patterns.slice(this.state.selectedPattern+1)\n    );\n    const updatedSongData = Object.assign(\n      Object.assign({}, this.state.songData),\n      {patterns: modifiedPatterns}\n    );\n    this.setState(\n      {songData: updatedSongData},\n      () => {\n        if(this.audio)\n        {\n          this.audio.updatePattern( this.state.songData.patterns[this.state.selectedPattern] );\n        }\n      }\n    );\n  }\n\n  addCombinedPattern = (name, recipe) =>\n  {\n    let pattern = notation.clonePattern(name, this.state.songData.patterns[recipe[0].value]);\n    for(let recipeIndex = 1; recipeIndex < recipe.length; ++recipeIndex)\n    {\n      pattern = notation.combinePatterns(name, pattern, this.state.songData.patterns[recipe[recipeIndex].value])\n    }\n\n    const patternSettings = notation.guessPerPatternSettings(pattern.instrumentTracks);\n\n    const updatedSongData = Object.assign(\n      Object.assign({}, this.state.songData),\n      {patterns: this.state.songData.patterns.concat(pattern)}\n    );\n\n    this.setState(\n      {songData: updatedSongData, patternSettings: this.state.patternSettings.concat(patternSettings)},\n      () => {\n        if(this.audio)\n        {\n          this.audio.updatePattern( pattern );\n        }\n      }\n    );\n  }\n\n  createNewPattern = (name, timeSignatureTop, timeSignatureBottom, resolution, patternBars) =>\n  {\n    const beatLength = ( 4 / timeSignatureBottom) *  48;\n    const barLength = timeSignatureTop * beatLength;\n    const patternLength = patternBars * timeSignatureTop;\n    const representativePattern = this.state.songData.patterns[ this.state.selectedPattern ];\n    const repTrackKeys = Array.from(Object.keys(representativePattern.instrumentTracks))[0];\n    const something = notation.createEmptyPattern(\n      name,\n      resolution,\n      patternLength,\n      repTrackKeys\n    );\n    /*\n    let pattern = notation.clonePattern(name, this.state.songData.patterns[recipe[0].value]);\n    const patternSettings = notation.guessPerPatternSettings(pattern.instrumentTracks);\n\n    const updatedSongData = Object.assign(\n      Object.assign({}, this.state.songData),\n      {patterns: this.state.songData.patterns.concat(pattern)}\n    );\n\n    this.setState(\n      {songData: updatedSongData, patternSettings: this.state.patternSettings.concat(patternSettings)},\n      () => {\n        if(this.audio)\n        {\n          this.audio.updatePattern( pattern );\n        }\n      }\n    );\n    */\n  }\n\n  componentWillUnmount()\n  {\n    // todo: I'd like to detect dev/production and choose not to save in dev, but\n    // I seem to be having issues using process.env.NODE_ENV on the client,\n    // I could define it apparently but for now just *always* save\n    // (It's unclear if this should be available, create-react-app might be set up to provide it\n    // and I still seem to have issues during webpack's reload, for modules assuming process exists...\n    // if(!!process.env.NODE_ENV && process.env.NODE_ENV === 'production')\n    this.onSave();\n    window.removeEventListener('beforeunload', this.onSave);\n    if(isMobile){ window.removeEventListener(\"visibilitychange\", this.onHideView); }\n    if( this.audio )\n    {\n      this.audio.teardown();\n      delete this.audio;\n    }\n  }\n\n  getExportState()\n  {\n    return {\n      instruments : this.state.songData.instruments,\n      instrumentIndex : this.state.songData.instrumentIndex,\n      patterns : this.state.songData.patterns,\n      songName: this.state.songData.title,\n      formatSettings: this.state.formatSettings,\n      patternSettings : this.state.patternSettings,\n      version: \"1.1.0\"\n    };\n  }\n\n  // note these functions could cleanly be locally defined\n  // but react gives better performance by not doing this, sadly\n  changeInstruments = (instruments) =>\n  {\n    let songData = Object.assign({}, this.state.songData);\n    songData.instruments = instruments;\n    songData.instrumentMask = createInstrumentMask(this.state.songData.instrumentIndex, instruments);\n    this.setState( {\n      songData: songData\n    } );\n  }\n\n  sendVolumeEvent = (event) =>\n  {\n    // TODO: volume & muted should not be ephemeral, they should go into\n    // exportState so that a mixing-profile can be preserved\n    if(\"volume\" in event)\n    {\n      const instrumentID = this.state.songData.instrumentIndex[ event.instrument ].id;\n      if(this.audio){ this.audio.setVolumeForInstrument( instrumentID, event.volume ); }\n    }\n    else if(\"muted\" in event)\n    {\n      const instrumentID = this.state.songData.instrumentIndex[ event.instrument ].id;\n      if(this.audio){ this.audio.setMutedForInstrument( instrumentID, event.muted ); }\n    }\n  }\n\n  handleSettingsChange = (change) =>\n  {\n    // manipulate audio's state directly\n    if(change.key === \"animate\")\n    {\n      if(change.value === true)\n      {\n        this.setState(\n          {animating: true},\n          () => {\n            if(this.audio){ this.audio.setAnimateCallback(this.createAnimateCallback()); }\n          }\n        )\n      }\n      else\n      {\n        this.setState(\n          {animating: false},\n          () => {\n            if(this.audio) { this.audio.setAnimateCallback(null); }\n          }\n        )\n      }\n      return;\n    }\n    else if(change.key === \"interactive\")\n    {\n      this.setState( {interactive: change.value} );\n    }\n    // change returns an object with .key, .value and .local\n    if(change.local)\n    {\n      const updateState = (state) => {\n        const modifiedSettings = state.patternSettings.map( (settings, index) => {\n          if(index !== state.selectedPattern){ return settings; }\n          else {\n            return Object.assign(\n              {},\n              state.patternSettings[state.selectedPattern],\n              {[change.key]: change.value}\n            );\n          }\n        });\n        return {patternSettings: modifiedSettings};\n      };\n      this.setState(updateState);\n    }\n    else\n    {\n      const updatedSettings = Object.assign(\n        {},\n        this.state.formatSettings,\n        {[change.key]: change.value}\n      );\n      this.setState(\n        {formatSettings: updatedSettings}\n      )\n    }\n  };\n\n  handlePatternsToggle = (e) => {\n    this.setState( { patternsOpen : !this.state.patternsOpen } );\n  };\n\n  handleSettingsToggle = (e) => {\n    this.setState( { settingsOpen : !this.state.settingsOpen } );\n  };\n\n  selectPattern = (patternIndex) =>\n  {\n    // it's important to do this before we re-render components\n    if(this.audio)\n    {\n      this.audio.setActivePattern(\n        this.state.songData.patterns[patternIndex].name\n      );\n    }\n\n    this.setState(\n      { selectedPattern: patternIndex }\n    );\n  };\n\n  onShare = () => {\n    SongStorage.put(this.getExportState())\n      .then(songID =>{\n        const permanentUrl = window.origin + process.env.PUBLIC_URL + \"/song/\" + songID;\n        this.setState({permanentUrl: permanentUrl, sharingDialogOpen: true});\n      })\n      .catch((err)=>{alert(\"Couldn't contact external server at this time.\")});\n  };\n\n  onDownload = () => {\n    SongStorage.download(this.getExportState())\n  }\n\n  closePatternCreateDialog = () => {\n    this.setState({patternCreateDialogOpen: false});\n  }\n\n  openPatternCreateDialog = () => {\n    this.setState({patternCreateDialogOpen: true});\n  }\n\n  onSave = () => {\n    SongStorage.saveToLocalHistory(this.getExportState());\n  }\n\n  onHideView = () => {\n      this.onStop();\n  }\n\n  handleSettingsToggle = (e)=>{\n    this.setState({settingsOpen: !this.state.settingsOpen});\n  }\n\n  handlePatternsToggle = (e)=>{\n    this.setState({patternsOpen: !this.state.patternsOpen})\n  }\n\n  closeSharingDialog = ()=>{\n    this.setState({sharingDialogOpen:false});\n  }\n\n  onPlay = () => {\n    if(this.audio){ this.audio.play(); }\n  }\n\n  onStop = () => {\n    if(this.audio){ this.audio.stop(); }\n    // this in most cases seems to be already covered by the animation\n    // but not all cases\n    this.setState({patternTime: null});\n  }\n\n  onSetTempo = (tempo) => {\n    if(this.audio){ this.audio.setTempo(tempo); }\n  }\n\n  setError = (message) => {\n    this.setState({errorAlert: message});\n  }\n\n  onToggleLocked = () => {\n    this.setState(\n      (state)=>{\n        const nowLocked = !state.locked;\n        if(!nowLocked && this.audio){ this.audio.stop(); }\n        // if we're unlocking the patterns, pop open the pattern drawer\n        return {locked: nowLocked, patternsOpen: state.patternsOpen || !nowLocked};\n      }\n    );\n  }\n\n  onToggleCompact = ()  => {\n    this.setState(\n      (state)=>{\n        const nowCompact = !this.state.formatSettings.compactDisplay;\n        const updatedSettings = {\n          ...this.state.formatSettings,\n          compactDisplay: nowCompact\n        };\n        return {formatSettings: updatedSettings};\n      }\n    );\n  }\n\n  render()\n  {\n    const pattern = this.state.songData.patterns[\n      this.state.selectedPattern\n    ];\n    const patternSpecifics = ( this.state.songData && this.state.patternSettings) ? this.state.patternSettings[this.state.selectedPattern] : null;\n    const resolvedSettings = makeResolvedSettings( this.state.formatSettings, patternSpecifics );\n    const instrumentConfigColumns = isMobile ? 12 : 8;\n    // todo: make this Toolbar unnecessary, it ensures pattern renders in the right place right now\n\n    const bars = 4;\n    const resolution = 16;\n    const totalLength = resolution * bars * 4;\n    this.createNewPattern(\"test\", 4, 4, resolution, totalLength);\n\n\n    return (\n      <div className=\"App\">\n        <Toolbar variant=\"dense\"/>\n        <TabitBar\n          title={this.state.songData.title}\n          settingsToggle={this.handleSettingsToggle}\n          patternsToggle={this.handlePatternsToggle}\n          onShare={this.onShare}\n          locked={this.state.locked}\n          onLockUnlock={this.onToggleLocked}\n          compact={this.state.formatSettings.compactDisplay}\n          onToggleCompact={this.onToggleCompact}\n        />\n        {this.state.errorAlert &&\n        <Snackbar severity=\"error\" open={true} autoHideDuration={5000} onClose={() => {this.setState({errorAlert: null})}}>\n          <Alert severity=\"error\"  onClose={() => {this.setState({errorAlert: null})}}>\n            <AlertTitle>Error</AlertTitle>\n            <Box>\n            {this.state.errorAlert.split(\"\\n\").map(line=><Box>{line}</Box>)}\n            </Box>\n          </Alert>\n        </Snackbar>\n        }\n        <div style={{display: \"flex\", flexGrow : 1}} />\n        <div style={{\n          display: \"flex\",\n          overflowX: \"auto\",\n          flexDirection: \"column\",\n          justifyContent: \"safe center\",\n          width: \"100%\",\n          maxWidth: \"100%\"\n        }}>\n          <Pattern\n            instruments={this.state.songData.instruments}\n            tracks={pattern.instrumentTracks}\n            config={resolvedSettings}\n            patternTime={this.state.patternTime}\n            modifyPatternLocation={this.state.interactive ? this.cycleCellContent : undefined}\n          />\n        </div>\n        <div style={{display: \"flex\", flexGrow : 1}} />\n        <PlaybackControls\n          onPlay={this.onPlay}\n          onStop={this.onStop}\n          onTempoChange={this.onSetTempo}\n          disabled={!this.state.locked}\n        />\n        <div style={{\n          display: \"flex\",\n          overflowX: \"auto\",\n          flexDirection: \"column\",\n          justifyContent: \"safe center\",\n          width: \"100%\",\n          maxWidth: \"100%\"\n        }}>\n        <Grid container>\n        {instrumentConfigColumns < 12 ? <Grid item xs={(12 - instrumentConfigColumns) / 2} /> : null}\n        <Grid item xs={instrumentConfigColumns}>\n          <InstrumentConfig\n              instruments={this.state.songData.instruments}\n              instrumentIndex={this.state.songData.instrumentIndex}\n              instrumentMask={this.state.songData.instrumentMask}\n              onChange={this.changeInstruments}\n              onVolumeEvent={this.sendVolumeEvent}\n              showAdvanced={!this.state.locked}\n            />\n        </Grid>\n        {instrumentConfigColumns < 12 ? <Grid item xs={(12 - instrumentConfigColumns) / 2} /> : null}\n        </Grid>\n        </div>\n        <PatternDrawer\n          open={this.state.patternsOpen}\n          onOpen={this.handlePatternsToggle}\n          onClose={this.handlePatternsToggle}\n          patterns={this.state.songData.patterns}\n          selectPattern={this.selectPattern}\n          onRemove={!this.state.locked ? this.removePattern : undefined}\n          // onAdd={this.openPatternCreateDialog}\n        />\n        <SettingsDrawer\n          open={this.state.settingsOpen}\n          onOpen={this.handleSettingsToggle}\n          onClose={this.handleSettingsToggle}\n          anchor=\"right\"\n          pattern={pattern}\n          settings={resolvedSettings}\n          onChange={this.handleSettingsChange}\n          onSave={this.onDownload}\n          animating={this.state.animating}\n          interactive={this.state.interactive}\n         />\n        <SharingDialog\n          open={this.state.sharingDialogOpen}\n          onClose={this.closeSharingDialog}\n          url={this.state.permanentUrl}\n          />\n        <PatternCreateDialog\n          open={this.state.patternCreateDialogOpen}\n          onClose={this.closePatternCreateDialog}\n          onChange={(change)=>{this.addCombinedPattern(change.name, change.recipe)}}\n          patterns={[...this.state.songData.patterns.keys()].map(index=>this.state.songData.patterns[index].name)}\n        />\n      </div>\n    );\n  }\n};\n\nexport default SongView;\n","// h2.js\n\nimport track from \"./track\";\nimport {XMLParser} from \"fast-xml-parser\";\nimport { calculateResolution } from \"./utilities\";\n\nfunction calculatePatternResolution(pattern, size)\n{\n  const positions = Array.from(pattern.notes, note => note.position)\n  return calculateResolution(positions, size);\n}\n\nfunction parseHydrogen(dom)\n{\n  // fixme:\n  // this parsing often assumes there's >=2 elements\n  // note: this code has undergone a significant refactoring, as port of changing\n  // the underlying parser, this fixme may no longer apply\n\n  // this \"zero\" here is presumably an artefact of xml --> json representation\n  const instrumentElements = dom.song.instrumentList.instrument;\n\n  // [  { id, name } ]\n  const instrumentArray = Array.from(\n    instrumentElements,\n    function(element){\n      const instrumentComponent = element.instrumentComponent;\n      let inst = {\n        \"id\" : parseInt(element.id),\n        // sometimes strings can be parsed as integers, ensure this is not the case\n        \"name\" : element.name.toString(),\n        \"volume\" : parseFloat(element.volume),\n        \"muted\" : element.isMuted,\n        \"gain\" : parseFloat(element.gain),\n        \"drumkit\" : element.drumkit.toString()\n      };\n      if(instrumentComponent.layer)\n      {\n        // fixme:\n        // we can have multiple layers (indicating multiple samples) in an instrument\n        // we currently just take the first one\n        const layers = [].concat(instrumentComponent.layer);\n        if(layers[0].filename)\n        {\n          inst[\"filename\"] = layers[0].filename.toString();\n        }\n      }\n      return inst;\n    }\n  );\n\n\n  const patternElements = dom.song.patternList.pattern;\n  // patterns\n  // [  { name, size, notes } ]\n  const patternArray = Array.from(\n    patternElements,\n    function(element){\n      const patternSize = parseInt(element.size);\n      // for an empty pattern, noteList may be an empty string and note will be undefined\n      const noteElements = element.noteList.note;\n      let notes = [];\n      if( noteElements )\n      {\n        // notes\n        // [ {position, instrument(id}]\n        notes = Array.from(\n          noteElements,\n          function(noteElement){\n            return {\"position\" : parseInt(noteElement.position), \"instrument\" : parseInt(noteElement.instrument)};\n          }\n        );\n\n        // hydrogen permits you to have notes that reach past the pattern size,\n        // they then get revealed when you extend the pattern,\n        // here's an easy point to get rid of them, we don't want them to factor into any calculations\n        notes = notes.filter( n => n.position < patternSize );\n      }\n      return {\n        \"size\" : patternSize,\n        \"name\" : element.name.toString(),\n        \"notes\" : notes\n      };\n    }\n  );\n\n\n  // transform pattern to a managable data\n  const patternsWithTracks = Array.from(\n    patternArray,\n    function(pattern)\n    {\n      const resolution = calculatePatternResolution(pattern, pattern.size);\n      let instrumentTracks = {};\n      for( const instrument of instrumentArray )\n      {\n        const relevantNotes = pattern.notes.filter(\n          note => (note.instrument === instrument.id)\n        );\n        const relevantHits = Array.from(\n          relevantNotes,\n          note => note.position\n        );\n        instrumentTracks[ instrument.id.toString() ] = track.fromPositions( relevantHits, pattern.size, resolution);\n      }\n      pattern.resolution = resolution;\n      pattern.instrumentTracks = instrumentTracks;\n      return pattern;\n    }\n  );\n\n  // todo: refactor into (at least one) separate function\n  if(dom.song.virtualPatternList)\n  {\n    // so unfortunately, virtualPatternGroup represents a directional graph and we have to build\n    // the tree of dependencies for each node, we implement this in a very simplistic way\n    // let's build a mapping( name -> [ names ] ) and continue to resolve it\n    // until we're done\n    const virtualPatternGroups = dom.song.virtualPatternList.pattern;\n    if( virtualPatternGroups )\n    {\n      // each element looks like\n      //\n      // <pattern>\n      // <name>p2-a-djembe</name>\n      // <virtual>p2-a-bass</virtual>\n      // <virtual>p2-snare</virtual>\n      // </pattern>\n\n      let patternToRelated = {};\n\n      // record initial relations\n      for( const virtualGroup of Array.from(virtualPatternGroups) )\n      {\n        const rootPatternName = virtualGroup.name;\n        if( typeof virtualGroup.virtual === 'string')\n        {\n          patternToRelated[rootPatternName] = new Set([virtualGroup.virtual]);\n        }\n        else\n        {\n          patternToRelated[rootPatternName] = new Set(Array.from(virtualGroup.virtual));\n        }\n      }\n\n      // expand connections until our object stops changing, brute-force\n      // this is a relatively large limit but is better than the potential of an infinite loop\n      // I think 3 layers would be pushing this feature\n      const MAX_ITERATIONS = 20;\n      for(let iteration = 0; iteration < MAX_ITERATIONS; ++iteration)\n      {\n        let expandedObject = {};\n        // we could do a check at the end of each loop, but it's easier to track object equality this way\n        let objectHasExpanded = false;\n        for(const [root, related] of Object.entries(patternToRelated))\n        {\n          let expandedNodeSet = new Set(related);\n          for( const node of expandedNodeSet )\n          {\n            if( node in patternToRelated )\n            {\n              // set union\n              expandedNodeSet = new Set([...expandedNodeSet, ...patternToRelated[node]]);\n            }\n          }\n          objectHasExpanded = objectHasExpanded || ( expandedNodeSet.size !== related.size );\n          expandedObject[ root ] = expandedNodeSet;\n\n        }\n        // exit if no change\n        if(!objectHasExpanded)\n        {\n          break;\n        }\n        // throw if we've failed to resolve all the connections by now, morelikely something has gone wrong\n        if( iteration === MAX_ITERATIONS )\n        {\n          throw new Error(\"Reached max virtual_pattern recursion depth.\");\n        }\n        // otherwise update mapping and continue\n        patternToRelated = expandedObject;\n      }\n\n      for( const [rootPatternName, relatedPatternSet] of Object.entries(patternToRelated) )\n      {\n        // could do filter, and assert on length?\n        let rootPattern = patternsWithTracks.find(p => p.name === rootPatternName);\n        for( const patternToMergeName of relatedPatternSet )\n        {\n          const patternToMerge = patternsWithTracks.find(p => p.name === patternToMergeName );\n          for( const [id, t] of Object.entries(patternToMerge.instrumentTracks) )\n          {\n            if( id in rootPattern.instrumentTracks )\n            {\n              const merged = rootPattern.instrumentTracks[ id ].aggregate( t );\n              // we match hydrogen's implementation here and discard values past the length of the original track\n              merged.rep.length = rootPattern.size  / merged.resolution;\n              rootPattern.instrumentTracks[ id ] = merged;\n            }\n            else\n            {\n              // ensure track is the appropriate length & res\n              let copiedTrack = t.format(rootPattern.resolution);\n              copiedTrack.length = rootPattern.size  / rootPattern.resolution;\n              rootPattern.instrumentTracks[id] = copiedTrack;\n            }\n          }\n        }\n        // reassess resolution and apply to all tracks\n        // this may not be necessary but it's probably nice\n        const resolution = calculatePatternResolution(rootPattern, rootPattern.size);\n        rootPattern.resolution = resolution;\n        for( const [id, track] of Object.entries(rootPattern.instrumentTracks) )\n        {\n          // ensure that\n          rootPattern[id] = track.format( resolution );\n        }\n      }\n\n    }\n  }\n\n  return {\n    \"instruments\" : instrumentArray,\n    \"patterns\" : patternsWithTracks\n  }\n}\n\nasync function parseHydrogenPromise(xmlString)\n{\n  const promise = new Promise((resolve, reject) => {\n    const dom = new XMLParser().parse(xmlString)\n    return resolve(parseHydrogen(dom));\n  });\n  return promise;\n}\n\nconst moduleExports = { parseHydrogenPromise };\n\nexport default moduleExports;\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport SongLoaders from \"./SongLoaders\"\nimport * as SongStorage from \"./SongStorage\";\nimport SongView from \"./SongView\"\nimport {decodeState} from \"./SongStorage\";\nimport hash from \"object-hash\";\nimport h2 from \"./h2\"\nimport {\n  Navigate\n} from \"react-router-dom\";\n\nfunction WaitingMessage(props)\n{\n  return (\n    <div className=\"App\">\n      <div>\n        <CircularProgress color=\"secondary\"/>\n        <Typography> Loading song... </Typography>\n      </div>\n    </div>\n  );\n}\n\nclass ExampleSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const navigateHomeWithError = (err) => {\n      this.setState(\n        {\n          error: \"Failed to load example data. \" +\n          \"This likely represents a bug - please raise an issue in github!\"\n        }\n      );\n    };\n    SongLoaders.LoadExample().then(\n      (songData) => {\n        this.setState(\n          { songData : songData }\n        );\n      }\n    ).catch(navigateHomeWithError);\n  }\n\n  render()\n  {\n    return this.state.error ? <Navigate to=\"/\" state={{error: this.state.error}} />\n         : this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\nfunction SongNameFromFile(filename)\n{\n  if(filename === null || filename === undefined)\n  {\n    return null;\n  }\n  if( filename.includes(\".\") )\n  {\n    const songTitle = filename.split('.').slice(0, -1).join('.');\n    return songTitle;\n  }\n  else\n  {\n    return filename;\n  }\n}\n\nclass FileImportSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n    const navigateHomeWithError = (err) => {\n      this.setState(\n        {\n          error: \"Failed to load \" + this.props.filename + \". \" +\n          \"If you're sure this is a Hydrogen file, please consider raising an issue in github!\"\n        }\n      );\n    };\n    // if we haven't been provided a filename, early out and\n    // redirect home in the render pass\n    if(!this.props.filename)\n    {\n      return;\n    }\n    if(this.props.filename.includes(\"h2song\"))\n    {\n      // assume it's a() tabit file!\n        h2.parseHydrogenPromise(this.props.content)\n          .then(h => {\n            return SongLoaders.LoadJSON(\n              h,\n              SongNameFromFile(this.props.filename),\n              this.props.filename,\n              true // fromHydrogen\n            );\n          })\n          .then(setState)\n          .catch(navigateHomeWithError);\n    }\n    else\n    {\n      Promise.resolve(this.props.content)\n        .then((content)=>{\n          // in the case of localStorage API content will be an object already\n          return typeof(content) === \"string\" ? JSON.parse(content) : content;\n        })\n        .then( data => {\n          return SongLoaders.LoadJSON(\n            data,\n            data.songName ? data.songName : SongNameFromFile(this.props.filename),\n            this.props.filename,\n            false // fromHydrogen\n          );\n        } )\n        .then(setState)\n        .catch(navigateHomeWithError);\n    }\n  }\n\n  render()\n  {\n    return !this.props.filename ? <Navigate to=\"/\"/>\n          : this.state.error ? <Navigate to=\"/\" state={{error: this.state.error}} />\n          : this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\n\nclass SongStorageSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n    const navigateHomeWithError = (err) => {\n      this.setState(\n        {\n          error: \"Failed to load song \" + this.props.songID + \" from database. \" +\n          \"This could represent a corrupted entry/a bug in our software. Please consider raising an issue in github!\"\n        }\n      );\n    };\n    SongStorage.get(this.props.songID)\n      .then( data => {\n        return SongLoaders.LoadJSON(\n          data,\n          data.songName,\n          data.loadedFile,\n          false // fromHydrogen\n        );\n      } )\n      .then(setState)\n      .catch(navigateHomeWithError);\n  }\n\n  render()\n  {\n    return this.state.error ? <Navigate to=\"/\" state={{error: this.state.error}} />\n         : this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\nclass LocalStorageSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const navigateHomeWithError = (err) => {\n      this.setState(\n        {\n          error: \"Failed to load recently viewed song \" + this.props.name + \". \"\n        }\n      );\n    };\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n\n    const history = SongStorage.getLocalHistory();\n    const matches = history.filter( song => ( song.id === this.props.songID ) );\n    if(matches.length < 1)\n    {\n      navigateHomeWithError();\n    }\n\n    Promise.resolve(matches[0])\n      .then( (song)=>{\n        const stateHash = hash(song.content);\n        if( stateHash !== this.props.songID )\n        {\n          throw new Error(\"Hash did not match\");\n        }\n        const decodedState = decodeState(song.content);\n        return decodedState;\n      }).then( data => {\n        return SongLoaders.LoadJSON(\n          data,\n          data.songName,\n          data.songName,\n          false // fromHydrogen\n        );\n      }).then(setState)\n      .catch(navigateHomeWithError);\n    }\n\n    render()\n    {\n      return this.state.error ? <Navigate to=\"/\" state={{error: this.state.error}} />\n           : this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                                 : <WaitingMessage />;\n    }\n}\n\nexport {\n  ExampleSongView,\n  FileImportSongView,\n  SongStorageSongView,\n  LocalStorageSongView\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useParams,\n  useLocation,\n  useNavigate\n} from \"react-router-dom\";\nimport TitleScreen from \"./TitleScreen\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  ExampleSongView,\n  FileImportSongView,\n  SongStorageSongView,\n  LocalStorageSongView\n} from \"./LazySongViews\";\n\n\nconst MakeTitleScreen = (props) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const locationState = location.state || {}\n  return (\n    <TitleScreen\n      navigate={navigate}\n      location={location}\n      error={locationState.error}\n    />\n  );\n};\n\nconst MakeExample = (props) => {\n  const location = useLocation();\n  return <ExampleSongView\n    location={location}\n  />\n};\n\nconst MakeSongStorageSongView = (props) => {\n  const {songID} = useParams();\n  const location = useLocation();\n  return <SongStorageSongView\n    location={location}\n    songID={songID}\n  />\n};\n\nconst MakeFileImportSongView = (props) => {\n  const location = useLocation();\n  return <FileImportSongView\n    location={location}\n    filename={location.state.filename}\n    content={location.state.content}\n  />\n};\n\nconst MakeLocalStorageSongView = (props) => {\n    const {songID} = useParams();\n    const location = useLocation();\n    const locationState = location.state || {};\n    return <LocalStorageSongView\n      location={location}\n      songID={songID}\n      name={locationState.songName}\n    />\n};\n\nexport default function TabitRoutes(props) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = responsiveFontSizes( React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: '#d7ccc8'\n          },\n          secondary: {\n            main: '#00acc1'\n          }\n        },\n      }),\n    [prefersDarkMode]\n  ) );\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={<MakeTitleScreen />}\n          />\n          <Route\n            exact\n            path=\"/example\"\n            element={<MakeExample />}\n          />\n          <Route\n            path=\"/song/:songID\"\n            element={<MakeSongStorageSongView />}\n          />\n          <Route\n            path=\"/import\"\n            element={ <MakeFileImportSongView />}\n          />\n          <Route\n            path=\"/recent/:songID\"\n            element={<MakeLocalStorageSongView />}\n          />\n        </Routes>\n      </ThemeProvider>\n    </Router>\n  )\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import hash from \"object-hash\";\nimport zlib from \"zlib\";\nimport { saveAs } from 'file-saver';\n\nconst storageAvailable = (type) => {\n    // this is code copied from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage;\n    try {\n        storage = window[type];\n        let x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch(e) {\n    // accept certain types of exceptions as legitimate consequences of the feature working\n        return e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n};\n\nconst encodeState = (songData) =>\n{\n  // json\n  const js = JSON.stringify(songData);\n  // compress\n  const compressedState = zlib.deflateSync(js).toString(\"base64\");\n  return { state : compressedState };\n}\n\nconst decodeState = (state) =>\n{\n  const binaryBuffer = new Buffer(state.state, \"base64\");\n  const decompressedString = zlib.inflateSync(binaryBuffer);\n  return JSON.parse(decompressedString);\n};\n\nconst JSON_BIN_API = \"https://api.jsonbin.io\";\nconst JSON_BIN_API_BINS = JSON_BIN_API + \"/b\";\nconst JSON_BIN_API_SECRET = \"$2b$10$Z2eAUT2PfRKn5RB55/Y30ujW8aUB1CCgRuUua3Jo9JX2WTetZRfIG\";\nconst TABIT_SONG_COLLECTION_ID = \"60218fa606934b65f53046ad\";\n\nconst put = (exportState, name) =>\n{\n  const binName = name ? name : exportState.songName;\n  // names are limited to 128 characters, let's be safe\n  const binShort = binName.slice(0, 64);\n  const stateToShare = encodeState(exportState);\n  const metadata = {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      \"secret-key\": JSON_BIN_API_SECRET,\n      \"collection-id\": TABIT_SONG_COLLECTION_ID,\n      private: false,\n      name: binShort\n    },\n    body: JSON.stringify(stateToShare)\n  };\n  return fetch( JSON_BIN_API_BINS, metadata )\n    .then(response => {\n      if(!response.ok)\n      {\n        throw new Error(\"Failed to upload song\");\n      }\n      else\n      {\n        return response.json();\n      }\n    }).then(data => {\n      return data.id;\n    });\n}\n\nconst get = (binID) =>\n{\n  const metadata = {\n    headers: { 'Content-Type': 'application/json' },\n  };\n  return fetch( JSON_BIN_API_BINS + \"/\" + binID, metadata )\n    .then( response => {\n      if(!response.ok)\n      {\n        throw new Error(\"Failed to upload song\");\n      }\n      else\n      {\n        return response.json();\n      }\n    } )\n    .then( js => {\n      return decodeState(js);\n    });\n};\n\nconst getLocalHistory = () => {\n  if(!storageAvailable('localStorage'))\n  {\n    return [];\n  }\n  const jsonHistory = localStorage.getItem(\"tabit-history\");\n  const songHistory = jsonHistory ? JSON.parse(jsonHistory).sort( (a,b) =>(b.date - a.date) ) : [];\n  return songHistory;\n};\n\nconst saveToLocalHistory = (exportState) => {\n    const stateToShare = encodeState(exportState);\n    const stateHash = hash(stateToShare);\n    let history = getLocalHistory();\n    const relevantHistory = history.filter( song => ( song.id === stateHash && song.name === exportState.songName ) );\n    if( relevantHistory.length !== 0 )\n    {\n      // found at least one history entry identical to this one ...\n      // update one, so it's the most recent entry\n      relevantHistory[0].date = Date.now();\n    }\n    else\n    {\n      // add history entry\n      const historyEntry = {\n        name: exportState.songName,\n        id: stateHash,\n        date: Date.now(),\n        content: stateToShare\n      };\n      history.push(historyEntry);\n    }\n\n    // resort & cap how many files we remember\n    const restrictedHistory = history.sort( (a,b) =>(b.date - a.date)  ).slice(0, 30);\n    localStorage.setItem(\"tabit-history\", JSON.stringify(restrictedHistory));\n};\n\nconst download = (exportState) => {\n  const destFilename = exportState.songName + \".tabit\";\n  const js = JSON.stringify(exportState, null, 4);\n  const blob = new Blob([js], {type: \"application/json\"});\n  saveAs(blob, destFilename);\n};\n\nexport {\n  decodeState,\n  get,\n  put,\n  download,\n  getLocalHistory,\n  saveToLocalHistory\n};\n","import { calculateResolution } from \"./utilities\"\n\n// stolen from https://studymaths.co.uk/topics/findingHCFWithJavaScript.php\nfunction findHCF(x, y) {\n\n   // If the input numbers are less than 1 return an error message.\n   if (x < 1 || y < 1) {\n    throw new Error(\"x<1 || y<1\");\n      // return \"Please enter values greater than zero.\";\n   }\n\n   // Now apply Euclid's algorithm to the two numbers.\n   while (Math.max(x, y) % Math.min(x, y) !== 0) {\n      if (x > y) {\n         x %= y;\n      }\n      else {\n         y %= x;\n      }\n   }\n\n   // When the while loop finishes the minimum of x and y is the HCF.\n   return Math.min(x, y);\n}\n\nclass track\n{\n\n  constructor(patternArray, resolution)\n  {\n    if(patternArray.length === 0)\n    {\n      throw new Error(\"patternArray must not be zero length\");\n    }\n    this.rep = patternArray;\n    this.resolution = resolution;\n  }\n\n  length()\n  {\n    return this.rep.length * this.resolution;\n  }\n\n  empty()\n  {\n    return this.rep.reduce( (a,b) => ( a + b ) ) === 0;\n  }\n\n  _sumOverlapsOfArrays(a,b)\n  {\n    let count = 0;\n    for( let i = 0; i < a.length; ++i)\n    {\n      if(a[i] && b[i])\n      {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  queryPoint(h)\n  {\n    if((h % this.resolution) === 0)\n    {\n      return this.rep[ h / this.resolution];\n    }\n    return false;\n  }\n\n  setPoint(h, value)\n  {\n    if((h % this.resolution) !== 0)\n    {\n      // we don't support this yet, possibly unnecessary\n      throw new Error(\"attempting to set point \" + h.toString() + \" but track has resolution \" + this.resolution.toString());\n    }\n    this.rep[ h / this.resolution ] = value;\n  }\n\n  static optimalResolution(a,b)\n  {\n    return findHCF(a,b);\n  }\n\n  countOverlaps(other)\n  {\n    if( this.resolution === other.resolution )\n    {\n      return this._sumOverlapsOfArrays( this.rep, other.rep );\n    }\n    else\n    {\n      const hcf = track.optimalResolution(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return this._sumOverlapsOfArrays( a.rep, b.rep );\n    }\n  }\n\n  aggregate(other)\n  {\n\n    if( this.resolution === other.resolution )\n    {\n      // when we aggregate, we specifically\n      const length = Math.max( this.rep.length, other.rep.length );\n      const pat = new Array(length).fill(0);\n      for(let index = 0; index < pat.length; ++index)\n      {\n        pat[index] = ( ( index < this.rep.length ) ? this.rep[index] : 0 )\n                  || ( ( index < other.rep.length ) ? other.rep[index] : 0 );\n      }\n      return new track( pat, this.resolution );\n    }\n    else\n    {\n      const hcf = track.optimalResolution(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return a.aggregate(b);\n    }\n  }\n\n  static representPoints(points, resolution, size)\n  {\n    if( size <= 0 )\n    {\n      throw new Error(\"size must be greater than zero\");\n    }\n    if( size < resolution || (size % resolution) !== 0)\n    {\n      throw new Error(\"resolution must be less than size and divide it evenly\");\n    }\n    let s = new Array(size / resolution).fill(0);\n    for( const p of points )\n    {\n      if( (p % resolution) !== 0)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" at resolution \" + resolution.toString());\n      }\n      if (p >= size)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" for invalid specified size \" + size.toString());\n      }\n      const arrayIndex = p / resolution;\n      s[arrayIndex] = 1;\n    }\n    return s;\n  }\n\n  compatible(formatResolution)\n  {\n    const points = this.toPoints();\n    if(this.length() % formatResolution !== 0)\n    {\n      return false;\n    }\n    for(const point of points)\n    {\n      if( point % formatResolution !== 0)\n      {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  format(formatResolution)\n  {\n    // formatResolution must cleanly divide for every hit & the length of the pattern\n\n    const totalLength = (this.resolution * this.rep.length);\n    const points = this.toPoints();\n    const rep = track.representPoints(points, formatResolution, totalLength);\n    if(!rep)\n    {\n      return null;\n    }\n    return new track(\n      rep,\n      formatResolution\n    );\n  }\n\n  toPoints()\n  {\n    let points = [];\n    for( const arrayIndex of Array(this.rep.length).keys() )\n    {\n      const indicator = this.rep[arrayIndex];\n      if(indicator)\n      {\n        points.push( this.resolution * arrayIndex )\n      }\n    }\n    return points;\n  }\n\n  static fromPositions(positions, size, resolution = null)\n  {\n    const resolutionToUse = resolution ?? calculateResolution( positions, size );\n    return new track(\n      track.representPoints(positions, resolutionToUse, size),\n      resolutionToUse\n    );\n  }\n\n  static combine(a, b, size, resolution)\n  {\n    if(!a && !b)\n    {\n      throw new Error(\"Can't combine two null tracks\");\n    }\n    if(!size || !resolution)\n    {\n      throw new Error(\"Need size and resolution parameters to be set\");\n    }\n    const pointsA = a ? a.toPoints() : [];\n    const sizeA = a ? a.length() : size - b.length();\n    const pointsB = b ? b.toPoints().map(ix => ix + sizeA) : [];\n    const allPoints = [ ...pointsA, ...pointsB ];\n    return track.fromPositions(allPoints, size, resolution);\n  }\n\n  clone()\n  {\n    return new track( [...this.rep], this.resolution );\n  }\n}\n\nexport default track;\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ShareIcon from '@material-ui/icons/Share';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: theme.palette.secondary\n  }\n}));\n\nfunction TabitBar(props) {\n  const classes = useStyles(props);\n  // we need to render \"null\" appbars for spacing purposes\n  // support them here, so that we can maintain layout parity in one place\n  if(props.placeholder)\n  {\n\n    return (\n\n      // <AppBar position=\"fixed\" // todo: I'd like to include the AppBar,\n      // className={classes.root}> // but it doesn't have the correct effect#\n        <Toolbar variant=\"dense\">\n        </Toolbar>\n      // </AppBar>\n    );\n  }\n\n  return (\n    <AppBar position=\"fixed\"\n      className={classes.root}\n    >\n\n      <Toolbar variant=\"dense\">\n        {props.patternsToggle && <IconButton\n          color=\"inherit\"\n          aria-label=\"open pattern list\"\n          edge=\"start\"\n          onClick={props.patternsToggle}\n          >\n          <MenuIcon />\n        </IconButton>\n        }\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"home\"\n          edge=\"start\"\n          component={Link}\n          to='/'\n          >\n          <HomeIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap style={{\"flexGrow\": 1, \"textOverflow\": \"ellipsis\"}}>\n          {props.title}\n        </Typography>\n        {props.onLockUnlock && <IconButton\n          color=\"inherit\"\n          aria-label={props.locked ? \"unlock\" : \"lock\"}\n          edge=\"start\"\n          onClick={props.onLockUnlock}\n          >\n          {props.locked ? <LockIcon /> : <LockOpenIcon />}\n        </IconButton>\n        }\n        {props.onToggleCompact && <IconButton\n          color=\"inherit\"\n          aria-label={props.compact ? \"toggle-to-dense-view\" : \"toggle-to-compact-view\"}\n          edge=\"start\"\n          onClick={props.onToggleCompact}\n          >\n          {props.compact ? <ViewListIcon /> : <CalendarViewDayIcon />}\n        </IconButton>\n        }\n        {props.onShare && <IconButton\n          color=\"inherit\"\n          aria-label=\"share\"\n          edge=\"start\"\n          onClick={props.onShare}\n          >\n          <ShareIcon />\n        </IconButton>\n        }\n        {props.onDownload && <IconButton\n          color=\"inherit\"\n          aria-label=\"download\"\n          edge=\"start\"\n          onClick={props.onDownload}\n          >\n          <SaveAltIcon />\n        </IconButton>\n        }\n        {props.settingsToggle && <IconButton\n          color=\"inherit\"\n          aria-label=\"open settings\"\n          edge=\"end\"\n          onClick={props.settingsToggle}\n        >\n          <SettingsIcon />\n        </IconButton>\n        }\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default React.memo(TabitBar);\n"],"sourceRoot":""}
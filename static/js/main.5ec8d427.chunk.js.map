{"version":3,"sources":["track.js","utilities.js","Mobile.js","Audio.js","ToneBoard.js","App.js","formatSettings.js","FileImport.js","h2.js","PlaybackControls.js","History.js","Part.js","PartWithTitle.js","Pattern.js","Routes.js","serviceWorker.js","index.js","notation.js","instrumentation.js","instrumentConfig.js"],"names":["findHCF","x","y","Error","Math","max","min","track","patternArray","resolution","length","this","rep","reduce","a","b","count","i","other","_sumOverlapsOfArrays","hcf","formatResolution","pat","Array","fill","index","aggregate","totalLength","points","toPoints","representPoints","keys","arrayIndex","push","size","s","p","toString","positions","resolutionToUse","calculateResolution","implicitPositions","concat","allNotesPass","isMobile","userAgent","navigator","vendor","window","opera","some","toMatchItem","match","Audio","AudioContext","webkitAudioContext","Object","instrumentIndex","tracks","minResolution","id","t","filter","inst","empty","entries","trackLength","combined","peakValue","channel","numberOfChannels","combinedChannel","getChannelData","sample","abs","peakAmplitude","context","sounds","tempo","determineTrackLength","trackLengthSamples","totalSamples","floor","samplesPerHydrogen","createBuffer","selected","audioBuffer","audioChannel","trackPoints","sampleStart","normalizeAudioBuffer","buffer","source","createBufferSource","loop","playbackRate","value","connect","destination","DRUMKITS","convertNormalToAudible","pow","createSequenceCallback","pattern","sampleSource","samplesReady","time","indexFromStart","sampleData","samples","undefined","player","start","onPatternTimeChange","Tone","schedule","notePosition","ToneController","patterns","onTimeChange","sequences","currentPattern","gain","toDestination","bpm","sampleCount","expectedSampleCount","patternDetails","failures","name","determineMinResolution","instrumentTracks","populateSamples","createSequences","currentPatternName","message","sortedFailures","drumkit","noMatch","otherDrumkit","otherName","sort","createSortedUnique","join","alert","selectedInstrument","clampedVolume","volume","includes","filename","replace","process","mute","muted","relativeUrl","drumkitName","instrumentName","toLowerCase","chooseAppropriateUrlForInstrument","patternResolution","patternLength","callback","_part","patternName","oldPatternName","oldLength","timeFromBarEnd","loopEnd","toSeconds","position","enableNewTrack","setLoopPoints","state","scheduleOnce","then","stop","now","instrumentID","set","theme","responsiveFontSizes","createMuiTheme","palette","type","primary","main","secondary","ignoreEvent","event","key","getJsonStorageUrl","slug","getJsonDestinationUrl","modalStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","background","border","boxShadow","shadows","padding","spacing","App","props","previousHistory","localStorage","getItem","instruments","instrumentMask","formatSettings","assign","DefaultSettings","patternSettings","loadedFile","selectedPattern","settingsOpen","patternsOpen","progress","showSharingDialog","showTitleOptions","params","song","songName","permanentUrl","history","JSON","parse","date","React","createRef","document","app","exportState","getExportState","stateToShare","encodeState","stateHash","hash","from","relevantHistory","Date","historyEntry","content","restrictedHistory","slice","setState","setItem","stringify","songID","songTitle","fetch","response","json","js","decodedState","decodeState","handleJson","catch","e","fetchSong","version","destFilename","fileParts","split","blob","Blob","saveAs","zlib","deflateSync","binaryBuffer","Buffer","decompressedString","inflateSync","uploadUrl","metadata","method","headers","body","origin","err","notation","guessPerPatternSettings","title","prevState","createInstrumentMask","patternData","replacedTracks","trackData","patternWithTracks","createTracks","songNameFromFile","audio","ToneBoard","setActivePattern","recordSongVisited","file","h2","parseHydrogenPromise","h","assessedInstruments","figureInstruments","DEFAULT_INSTRUMENT_SYMBOLS","activeInstrumentation","figurePatternSettings","error","Promise","resolve","k","createObjects","kuva","patternIndex","resolvedSettings","Fragment","config","active","ref","onPlay","play","onStop","onTempoChange","setTempo","current","optionalAlert","severity","controls","variant","onClick","loadExample","bind","style","margin","onImport","handleFileImport","accept","waitingMessage","bottom","href","data","piece","loadLocalSong","iOS","mobile","classes","handlePatternsClose","disableBackdropTransition","disableDiscovery","className","drawer","open","onOpen","onClose","drawerHeader","drawerContainer","map","button","selectPattern","patternConfig","handleDrawerClose","patternToRender","getTrackLength","anchor","drawerPaper","onChange","existingPatternSettings","existingGlobalSettings","v","settings","color","default","save","share","aria-labelledby","aria-describedby","copy","renderTitlePage","patternContent","renderPattern","browser","test","instrumentConfigColumns","renderSharingDialog","width","aria-label","edge","clsx","hide","flexGrow","container","item","xs","onVolumeEvent","instrument","setVolumeForInstrument","setMutedForInstrument","renderPatternDrawer","renderSettingsDrawer","mainContent","renderMainContent","Component","withStyles","withRouter","useStyles","makeStyles","formControl","minWidth","camelToReadable","spacedString","toUpperCase","FormatSettings","useTheme","tokenStateToItem","tokenItemToState","handleOptionChange","updatedState","handleCheckedChange","target","checked","createOptionMenu","options","itemToState","stateToItem","idString","labelId","op","lineLengths","beatResolution","beatResolutions","c","lineResolution","root","FORMAT_CONFIG_STRINGS","prev","curr","FORMAT_CONFIG_BOOLS","control","label","parseInt","r","DEFAULT_FORMAT_CONFIG","FileImport","hiddenFileInput","fileObject","files","reader","FileReader","onload","loadEvent","result","readAsText","buttonProps","click","hidden","calculatePatternResolution","notes","note","parseHydrogenJs","instrumentElements","instrumentList","instrumentArray","element","instrumentComponent","parseFloat","isMuted","layer","patternElements","patternList","noteElements","noteList","patternSize","noteElement","n","patternsWithTracks","relevantNotes","relevantHits","fromPositions","virtualPatternList","virtualPatternGroups","patternToRelated","virtualGroup","rootPatternName","relatedPatterns","virtual","Set","iteration","expandedObject","objectHasExpanded","related","expandedNodeSet","node","relatedPatternSet","rootPattern","find","patternToMergeName","patternToMerge","merged","copiedTrack","format","xmlString","parser","xml2js","Parser","parseStringPromise","moduleExports","PlaybackControls","defaultValue","step","valueLabelDisplay","height","maxWidth","demoData","History","items","maxHeight","overflow","toLocaleDateString","renderRow","styles","whiteSpace","fontFamily","fontSize","PreTypography","Typography","Part","values","formatPatternString","restMark","patternLines","chunkArray","beatsPerLine","beatChunkSize","linesWithBeats","line","lineIndices","formatLine","startBeat","beats","component","lineMark","beat","activeNote","showBeatMark","beatMark","numberLine","createNumberMarker","numberRestMark","beatChunks","showBeatNumbers","lineIndex","PartWithTitle","Title","headingLevel","defaultLevel","safeHeading","getTitleType","Pattern","patternTime","instrumentIndices","textAlign","Routes","basename","path","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","console","formatConfig","propName","hasOwnProperty","str","chunkSize","RegExp","chunks","lineLength","beatCount","ceil","numberMarkerArray","asHTML","validateConfig","formatSymbol","symbol","numericPosition","formattedLine","charAt","lineWithBeats","chunkString","trackDict","defaultLineResolution","charIndex","trackID","trackSymbol","trackInstance","resolveConfig","patternString","lineArray","formattedLineArray","formatLineWithMarkers","normalizeInstrumentsForFiguring","nInst","manageAccentOrGhost","accentSymbol","ghostSymbol","outputInstruments","t0","t1","zeroLouder","mapping","activeInstruments","nonTrivialInstruments","add","has","defaultSymbolForSingleInstrument","symbolConfig","lowerName","instrumentsRaw","output","worthwhileInstruments","relevantTracks","trackIsClick","tomIndex","bassIndex","collated","candidate","clickTrack","hitTrack","instrumentIsTom","rawInstrumentName","lastTrack","figureClickyInstruments","djembeTracks","slapArray","toneArray","bassArray","djembeMapping","figureDjembes","figureSnares","figureShakers","instrumentUsed","ThinFormControlLabel","marginLeft","marginRight","FormControlLabel","InlinableIconButton","IconButton","NoDividerCenterTableCell","borderBottom","paddingBottom","TableCell","CenterTableCell","VolumeWidget","useState","setActive","sliderValue","setSliderValue","setMuted","sliderRef","useRef","FixedHeightStylings","top","SliderStyles","paddingLeft","IconStyles","onClickNHold","dispatchEvent","nativeEvent","onEnd","disableRipple","disableFocusRipple","onMuteEvent","orientation","setVolume","RawInstrumentEditDialog","currentSymbol","cancel","onCancel","autoFocus","fullWidth","InstrumentRenameDialog","currentName","trim","InstrumentTable","createCell","align","oldInstrumentIndex","findIndex","dstInstrumentIndex","oldInstrument","replacedSrcInstrument","dstInstrument","replacedInstruments","handleChange","createMatchingRow","scope","onEditRow","editRow","onRemoveRow","removeRow","table","onEditColumn","editColumn","onAddRow","InstrumentConfig","editingSymbol","setEditingSymbol","renamingInstrument","setRenamingInstrument","endEditingSymbol","resolvedSymbol","extraInstrument","renameInstrument","getSymbol","removeInstrument","baseInstrumentIndex","baseInstrumentId","targetInstrumentIndex"],"mappings":"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","file":"static/js/main.5ec8d427.chunk.js","sourcesContent":["import { calculateResolution } from \"./utilities\"\n\n// stolen from https://studymaths.co.uk/topics/findingHCFWithJavaScript.php\nfunction findHCF(x, y) {\n\n   // If the input numbers are less than 1 return an error message.\n   if (x < 1 || y < 1) {\n    throw new Error(\"x<1 || y<1\");\n      // return \"Please enter values greater than zero.\";\n   }\n\n   // Now apply Euclid's algorithm to the two numbers.\n   while (Math.max(x, y) % Math.min(x, y) !== 0) {\n      if (x > y) {\n         x %= y;\n      }\n      else {\n         y %= x;\n      }\n   }\n   \n   // When the while loop finishes the minimum of x and y is the HCF.\n   return Math.min(x, y);\n}\n\nclass track\n{\n  \n  constructor(patternArray, resolution)\n  {\n    if(patternArray.length === 0)\n    {\n      throw new Error(\"patternArray must not be zero length\");\n    }\n    this.rep = patternArray;\n    this.resolution = resolution;\n  }\n\n  length()\n  {\n    return this.rep.length * this.resolution;\n  }\n\n  empty()\n  {\n    return this.rep.reduce( (a,b) => ( a + b ) ) === 0;\n  }\n\n  _sumOverlapsOfArrays(a,b)\n  {\n    let count = 0;\n    for( let i = 0; i < a.length; ++i)\n    {\n      if(a[i] && b[i])\n      {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  countOverlaps(other)\n  {\n    if( this.resolution === other.resolution )\n    {\n      return this._sumOverlapsOfArrays( this.rep, other.rep );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return this._sumOverlapsOfArrays( a.rep, b.rep );\n    }\n  }\n\n  aggregate(other)\n  {\n\n    if( this.resolution === other.resolution )\n    {\n      // when we aggregate, we specifically\n      const length = Math.max( this.rep.length, other.rep.length );\n      const pat = new Array(length).fill(0);\n      for(let index = 0; index < pat.length; ++index)\n      {\n        pat[index] = ( ( index < this.rep.length ) ? this.rep[index] : 0 )\n                  || ( ( index < other.rep.length ) ? other.rep[index] : 0 );\n      }\n      return new track( pat, this.resolution );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return a.aggregate(b);\n    }\n  }\n\n  static representPoints(points, resolution, size)\n  {\n    if( size <= 0 )\n    {\n      throw new Error(\"size must be greater than zero\");\n    }\n    if( size < resolution || (size % resolution) !== 0)\n    {\n      throw new Error(\"resolution must be less than size and divide it evenly\");\n    }\n    let s = new Array(size / resolution).fill(0);\n    for( const p of points )\n    {\n      if( (p % resolution) !== 0)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" at resolution \" + resolution.toString());\n      }\n      if (p >= size)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" for invalid specified size \" + size.toString());\n      }\n      const arrayIndex = p / resolution;\n      s[arrayIndex] = 1;\n    }\n    return s;\n  }\n\n  format(formatResolution)\n  {\n    // formatResolution must cleanly divide for every hit & the length of the pattern\n\n    const totalLength = (this.resolution * this.rep.length);\n    const points = this.toPoints();\n    const rep = track.representPoints(points, formatResolution, totalLength);\n    if(!rep)\n    {\n      return null;\n    }\n    return new track(\n      rep,\n      formatResolution\n    );\n  }\n\n  toPoints()\n  {\n    let points = [];\n    for( const arrayIndex of Array(this.rep.length).keys() )\n    {\n      const indicator = this.rep[arrayIndex];\n      if(indicator)\n      {\n        points.push( this.resolution * arrayIndex )\n      }\n    }\n    return points;\n  }\n\n  static fromPositions(positions, size, resolution = null)\n  {\n    const resolutionToUse = resolution ?? calculateResolution( positions, size );\n    return new track( \n      track.representPoints(positions, resolutionToUse, size), \n      resolutionToUse\n    );\n  }\n}\n\nexport default track;","// utilities.js\n\nfunction calculateResolution(positions, size)\n{\n  // hydrogen treats 48 as a beat\n  const basesToTry = [\n    48, // beat\n    24, // 1/2 beat\n    16, // 1/3 beat\n    12, // 1/4\n    8, // 1/6 \n    6, // 1/8\n    4, // 1/12\n    3, // 1/16\n    2, // 1/24\n    1 // 1/48\n  ];\n\n  // note that, fundamentally the size of the pattern is a \"keypoint\"\n  // that needs to be properly recorded by the resolution\n  const implicitPositions = positions.concat( [size] );\n\n  for( const b of basesToTry )\n  {\n    let allNotesPass = true;\n    for( const p of implicitPositions )\n    {\n      if( (p % b) !== 0 )\n      {\n        allNotesPass = false;\n        break;\n      }\n    }\n    if(allNotesPass)\n    {\n      return b;\n    }\n  }\n  throw new Error(\"Failed to predict base\");\n}\n\nexport { calculateResolution };","// Mobile.js\n\nfunction  isMobile()\n{\n  // the simple version from\n  // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n  const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n  const toMatch = [\n      /Android/i,\n      /webOS/i,\n      /iPhone/i,\n      /iPad/i,\n      /iPod/i,\n      /BlackBerry/i,\n      /Windows Phone/i\n  ];\n\n  return toMatch.some((toMatchItem) => {\n      return userAgent.match(toMatchItem);\n  });\n}\n\nexport { isMobile };","class Audio\n{\n\n  // todo: we replace a valid audioContext with a blank object, so that we can run tests in node\n  //       this should probably be replaced by https://github.com/audiojs/web-audio-api \n  //       and a test-suite written\n  static createWebContext()\n  {\n    return new (window.AudioContext || window.webkitAudioContext || Object)();\n  }\n\n  static determineMinResolution(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let minResolution = 48; \n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty()\n        )\n        {\n          minResolution = Math.min( minResolution, t.resolution );\n        }\n      }\n      return minResolution;\n  }\n\n  static determineTrackLength(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let trackLength = 48;\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty() \n        )\n        {\n          trackLength = Math.max( trackLength, t.length() );\n        }\n      }\n      return trackLength;\n  }\n\n  static peakAmplitude(\n    combined\n  )\n  {\n    let peakValue = 0.0;\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for( let sample = 0; sample < combinedChannel.length; ++sample)\n      {\n        peakValue = Math.max( Math.abs(combinedChannel[sample]), peakValue );\n      }\n    }\n    return peakValue;\n  }\n\n  static normalizeAudioBuffer(\n    combined\n  )\n  {\n    const peakValue = Audio.peakAmplitude( combined );\n    if( peakValue > 1.0 )\n    {\n      for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n        let combinedChannel = combined.getChannelData(channel);\n        for( let sample = 0; sample < combinedChannel.length; ++sample)\n        {\n          combinedChannel[sample] = combinedChannel[sample] / peakValue;\n        }\n      }\n    }\n    return combined;\n  }\n\n  static createMasterTrack(\n    context,\n    tracks,\n    instrumentIndex,\n    sounds,\n    tempo\n  )\n  {\n    const trackLength = Audio.determineTrackLength( instrumentIndex, tracks );\n\n\n    const beatTime =  (60.0 / tempo) * 1000;\n    const timePerHydrogen = beatTime / 48.0;\n\n\n    // let's assume we can do some simple things\n\n    const sampleRate = 44100;\n    const channels = 2;\n    const trackLengthMs = trackLength * timePerHydrogen;\n    const trackLengthSamples = trackLengthMs * sampleRate / 1000.0;\n    const totalSamples = Math.floor(trackLengthSamples);\n    const samplesPerHydrogen = Math.floor( totalSamples / trackLength );\n    const combined = context.createBuffer(channels, totalSamples, sampleRate);\n\n    // populate blank buffer with sounds\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && selected[0].id in sounds\n          && !t.empty()\n        )\n        {\n          const audioBuffer = sounds[selected[0].id];\n          // fallback to copying the mono buffer across both channels\n          const audioChannel = audioBuffer.numberOfChannels === 2 ? audioBuffer.getChannelData(channel) : audioBuffer.getChannelData(0);\n          const trackPoints = t.toPoints();\n          for( const noteStart of trackPoints )\n          {\n            const sampleStart = noteStart * samplesPerHydrogen;\n            for( let sample = 0; sample < audioBuffer.length; ++sample )\n            {\n              // add sample to mega track\n              combinedChannel[sampleStart + sample] = combinedChannel[sampleStart + sample] + audioChannel[sample];\n            }\n          }\n        }\n      }\n    }\n\n    return Audio.normalizeAudioBuffer( combined );\n  }\n\n  static createAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=true;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n  static createOneShotAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=false;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n}\n\nexport default Audio;","\nimport Audio from \"./Audio\"\nimport * as Tone from \"tone\";\n\n// these are the hydrogen drumkits available by GPL/CC\n\nconst DRUMKITS = [\n  \"circAfrique v4\",\n  \"DeathMetal\",\n  \"The Black Pearl 1.0\",\n  \"GMRockKit\",\n  \"TR808EmulationKit\"\n];\n\nconst convertNormalToAudible = (value) => {\n  // add an intuitive feel to gain values, perception of sound is non-linear\n  // https://www.dr-lex.be/info-stuff/volumecontrols.html\n  // note: I tried x^4 and I tried using tone's DB directly but neither felt very good.\n  return Math.pow(value, 2.5);\n};\n\nconst chooseAppropriateUrlForInstrument = (drumkitName, instrumentName) =>\n{\n  const name = instrumentName.toLowerCase();\n  // this is currently very basic\n  if(name.includes(\"kick\"))\n  {\n      return \"The Black Pearl 1.0/PearlKick-Hard.wav\";\n  }\n  else if(name.includes(\"stick\"))\n  {\n      return \"DeathMetal/16297_ltibbits_sticks_low_pitch.wav\";\n  }\n  else if(name.includes(\"tom\"))\n  {\n      return \"TR808EmulationKit/808_Tom_Mid.wav\"\n  }\n  else if(name.includes(\"clap\"))\n  {\n      return \"TR808EmulationKit/808_Clap.wav\";\n  }\n  else if(name.includes(\"snare\"))\n  {\n    return \"GMRockKit/Snare-Soft.wav\";\n  }\n  else if(name.includes(\"cowbell\"))\n  {\n    return \"GMRockKit/Cowbell-Softest.wav\";\n  }\n  else\n  {\n    // todo: snare, cymbals\n    return null;\n  }\n}\n\nconst createSequenceCallback = (pattern, sampleSource) =>\n{\n  let samplesReady = sampleSource.samplesReady();\n  const sequenceCallback = (time, indexFromStart) =>\n  {\n    // if we don't know samples are ready,\n    if(!samplesReady)\n    {\n      // update our knowledge, and early out if needed\n      samplesReady = sampleSource.samplesReady();\n      if(!samplesReady){ return; }\n    }\n    const trackLengthRes = ( pattern.length / pattern.resolution );\n    const index = indexFromStart % trackLengthRes;\n    for(const [id,t] of Object.entries(pattern.tracks))\n    {\n        if( t.rep[index] )\n        {\n          const sampleData = sampleSource.samples[id];\n          if( sampleData !== undefined )\n          {\n            sampleData.player.start(time);\n          }\n        }\n    }\n    if(sampleSource.onPatternTimeChange)\n    {\n      Tone.Draw.schedule(\n        ()=>{\n          const notePosition = (index * pattern.resolution) % pattern.length;\n          sampleSource.onPatternTimeChange(notePosition);\n        },\n        time\n      );\n    }\n  };\n  return sequenceCallback;\n};\n\nconst createSortedUnique = (failures) =>\n{\n  let sortedFailures = [];\n  for( const [drumkit, name] of failures )\n  {\n    let noMatch = true;\n    for( const [otherDrumkit, otherName] of sortedFailures )\n    {\n      if( drumkit === otherDrumkit && name === otherName )\n      {\n        noMatch = false;\n        break;\n      }\n    }\n    if( noMatch )\n    {\n      sortedFailures.push( [drumkit, name] );\n    }\n  }\n  sortedFailures.sort();\n  return sortedFailures;\n}\n\nclass ToneController\n{\n  constructor(instrumentIndex, patterns, tempo, onTimeChange)\n  {\n    // this thing has a lot of state, eh?\n    // would love if this state was a bit more structured\n    this.samples = {};\n    this.sequences = {};\n    this.currentPattern = null;\n    this.gain = new Tone.Gain();\n    this.gain.toDestination();\n    this.onPatternTimeChange = onTimeChange;\n    Tone.Transport.bpm.value = tempo;\n    Tone.Transport.loop = true;\n\n    this.sampleCount = 0;\n    this.expectedSampleCount = 0;\n    this.patternDetails = {};\n    let failures = []\n    for( let p of patterns )\n    {\n      this.patternDetails[p.name] = {\n        resolution: Audio.determineMinResolution(instrumentIndex, p.instrumentTracks ),\n        length : Audio.determineTrackLength(instrumentIndex, p.instrumentTracks ),\n        name: p.name,\n        tracks: p.instrumentTracks\n      };\n      this.populateSamples(instrumentIndex, p.instrumentTracks, failures);\n    }\n    this.sequences = this.createSequences(instrumentIndex, patterns);\n    this.currentPatternName = null;\n\n    if(failures.length > 0)\n    {\n      let message = \"Failed to load samples for instruments:\\n\";\n      let sortedFailures = createSortedUnique(failures);\n      for( const [drumkit, name] of sortedFailures )\n      {\n        message += \"    -\" + name;\n        if( drumkit !== \"\" ){ message += \" (\" + drumkit + \")\"; }\n        message += \"\\n\";\n      }\n      message += \"This is typically because they belong to commercial sound libraries. \" +\n       \"tabit's supported drumkits are\\n\" + DRUMKITS.join( \", \" ) + \".\";\n\n      alert(message);\n    }\n  }\n\n  samplesReady()\n  {\n    return this.sampleCount === this.expectedSampleCount;\n  }\n\n  populateSamples(instrumentIndex, tracks, failures)\n  {\n    this.sampleCount = 0;\n    for(const [id,] of Object.entries(tracks))\n    {\n      const selected = instrumentIndex.filter(inst => inst.id.toString() === id);\n      if( selected.length > 0)\n      {\n        const selectedInstrument = selected[0];\n        const clampedVolume = convertNormalToAudible( Math.min( Math.max( 0.0 , selectedInstrument.volume ), 1.0 ) );\n        if( selectedInstrument.id in this.samples )\n        {\n          continue;\n        }\n        if(\n          \"drumkit\" in selectedInstrument && \n          \"filename\" in selectedInstrument &&\n          DRUMKITS.includes(selectedInstrument.drumkit) )\n        {\n          const filename = selectedInstrument.filename.replace(\".flac\", \".wav\");\n          let player = new Tone.Player(\n            process.env.PUBLIC_URL + \"/wav/\" + selectedInstrument.drumkit + \"/\" + filename, \n            () => { this.sampleCount++; }\n          );\n          player.mute = selectedInstrument.muted;\n          const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n          player.connect(gain)\n          gain.connect(this.gain);\n          this.samples[selectedInstrument.id] = { player : player, gain : gain }\n          this.expectedSampleCount++;\n        }\n        else if( \"drumkit\" in selectedInstrument )\n        {\n          const relativeUrl = chooseAppropriateUrlForInstrument( selectedInstrument.drumkit, selectedInstrument.name );\n          if(relativeUrl !== null)\n          {\n            let player = new Tone.Player(\n              process.env.PUBLIC_URL + \"/wav/\" + relativeUrl, \n              () => { this.sampleCount++; }\n            );\n            player.mute = selectedInstrument.muted;\n            const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n            player.connect(gain)\n            gain.connect(this.gain);\n            this.samples[selectedInstrument.id] = { player : player, gain : gain }\n            this.expectedSampleCount++;\n          }\n          else\n          {\n            failures.push( [selectedInstrument.drumkit, selectedInstrument.name] );\n          }\n        }\n        else\n        {\n            failures.push( [\"\", selectedInstrument.name] );\n        }\n      }\n    }\n  }\n\n  createSequences(instrumentIndex, patterns)\n  {\n    let sequences = {};\n    for( let p of patterns )\n    {\n      const patternResolution = Audio.determineMinResolution(instrumentIndex, p.instrumentTracks);\n      const patternLength = Audio.determineTrackLength(instrumentIndex, p.instrumentTracks);\n      const callback = createSequenceCallback(\n        this.patternDetails[p.name],\n        this\n      );\n      sequences[ p.name ] = new Tone.Sequence(\n        callback,\n        [...Array(patternLength / patternResolution).keys()],\n        Tone.Time(\"4n\") * ( patternResolution / 48.0 )\n      );\n      // start the sequence, but the ticks won't be triggered when muted\n      // note: setting mute on the sequence directly seems to have no effect\n      sequences[ p.name ]._part.mute = true;\n      sequences[ p.name ].start(0);\n    }\n    return sequences;\n  }\n\n  setActivePattern( patternName )\n  {\n    const oldPatternName = this.currentPatternName !== null ? this.currentPatternName : null;\n    const length = this.patternDetails[patternName].length;\n    const oldLength = oldPatternName !== null ? this.patternDetails[oldPatternName] : null\n\n    // we have a little fudge in here... if we're transitioning from a 4 beat loop\n    // to an 8 beat pattern ... we probably really wanted to hit the start of that pattern,\n    // not to transition at 3.75 beats and play the latter half\n    const timeFromBarEnd = Tone.Transport.loopEnd -  Tone.Transport.toSeconds(Tone.Transport.position);\n    const queueTransition = oldPatternName !== null\n    && Tone.Transport.state === \"started\"\n    && ( timeFromBarEnd > 0 && timeFromBarEnd < Tone.Transport.toSeconds(Tone.Time(\"8n\")));\n\n    const enableNewTrack = (time) => {\n      if(oldPatternName !== null)\n      {\n        // note: setting mute on the sequence directly seems to have no effect\n        this.sequences[oldPatternName]._part.mute = true;\n      }\n      if(oldPatternName === null || oldLength !== length )\n      {\n\n        Tone.Transport.setLoopPoints(0, Tone.Time(\"4n\") * (length / 48.0));\n      }\n      this.sequences[patternName]._part.mute = false;\n      this.currentPatternName = patternName;\n    };\n\n    if( queueTransition ) {\n      Tone.Transport.scheduleOnce(\n        enableNewTrack,\n        Tone.Time(\"0\")\n      );\n    }\n    else\n    {\n      enableNewTrack();\n    }\n  }\n\n  play()\n  {\n    // Tone.start is needed to be triggered from a user interaction\n    // (web-audio-context policy of not playing until a user interaction)\n    Tone.start().then(()=>{Tone.Transport.start();});\n  }\n\n  stop()\n  {\n    // it's slightly unclear what the synchronisation semantics of this Tone.Transport.stop() call are.\n    // If a tick is currently in flight on Tone.Transport we have to ensure that\n    // the reset of patternTime occurs *afterwards*. \n    // The below calls seem to work for this, but I couldn't tell you why.\n    if( Tone.Transport.state === \"started\")\n    {\n      Tone.Transport.stop();\n      if( this.onPatternTimeChange )\n      {\n        Tone.Draw.schedule(\n          ()=>{\n            this.onPatternTimeChange( null );\n          },\n          Tone.Transport.now()\n        );\n      }\n    }\n  }\n\n  setMutedForInstrument(instrumentID, muted)\n  {\n    this.samples[instrumentID].player.mute = muted;\n  }\n\n  setVolumeForInstrument(instrumentID, volume)\n  {\n    this.samples[instrumentID].gain.set( {gain : convertNormalToAudible(volume) } );\n  }\n\n  setTempo(tempo)\n  {\n    Tone.Transport.bpm.value = tempo;\n  }\n};\n\n\n\nexport default ToneController;","import React from 'react';\nimport clsx from 'clsx';\nimport FileImport from \"./FileImport\";\nimport Pattern from \"./Pattern\";\nimport h2 from './h2';\nimport './App.css';\n\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// define mui theme, including responsiveFont\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\n\n// drawer\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { withStyles } from '@material-ui/core/styles';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n// notationSettings\n\nimport {FormatSettings, DefaultSettings} from \"./formatSettings\";\nimport {createInstrumentMask, InstrumentConfig} from \"./instrumentConfig\";\nimport { activeInstrumentation, figureInstruments, DEFAULT_INSTRUMENT_SYMBOLS } from \"./instrumentation\";\nimport notation from \"./notation\";\n\nimport Grid from '@material-ui/core/Grid';\n\n// load static data\nimport kuva from \"./kuva.json\";\nimport track from \"./track\";\n\nimport { saveAs } from 'file-saver';\n\nimport ToneBoard from \"./ToneBoard\";\nimport PlaybackControls from \"./PlaybackControls\";\nimport { withRouter } from \"react-router-dom\";\n\nimport hash from \"object-hash\";\nimport zlib from \"zlib\";\nimport copy from \"copy-to-clipboard\";\n\nimport { isMobile } from \"./Mobile\";\n\nimport History from \"./History\";\n\n// mui theme config\nlet theme = responsiveFontSizes( createMuiTheme( {\n  palette: { \n    type: 'dark',\n    primary: { main: '#36d9be' },\n    secondary: { main: '#f50057' }\n   } \n} ) );\n\nconst ignoreEvent = (event) => {\n  return event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift');\n};\n\nconst getJsonDestinationUrl = (slug) => {\n  const jsonbase_url = \"https://jsonbase.com/tabit-song/\" + slug;\n  return jsonbase_url;\n}\n\nconst getJsonStorageUrl = (slug) => {\n  // jsonbase doesn't give cross-origin headers, \n  // so we use cors-anywhere to add them\n\n  // this is obviously a hack, but it enables us to use jsonbase\n  // as a transitive (semi-permanent) database, on a static site!\n  const cors_url = \"https://cors-anywhere.herokuapp.com/\";\n  return cors_url + getJsonDestinationUrl(slug);\n}\n\nconst modalStyles = {\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n};\n\nclass App extends React.Component\n{\n  constructor(props) {\n    super(props);\n    const previousHistory = localStorage.getItem(\"tabit-history\");\n    this.state = {\n      // data\n      instruments : null,\n      instrumentIndex : null,\n      instrumentMask : null,\n      patterns : null,\n      formatSettings : Object.assign({}, DefaultSettings),\n      patternSettings : [],\n      // ui state\n      loadedFile : null,\n      selectedPattern : null,\n      settingsOpen : false,\n      patternsOpen : false,\n      progress : null,\n      showSharingDialog : false,\n      showTitleOptions : this.props.match.params.song === undefined,\n      songName: null,\n      permanentUrl : \"\",\n      history: previousHistory ? JSON.parse(previousHistory).sort( (a,b) =>(b.date - a.date) ) : []\n    };\n    this.pattern = React.createRef();\n    document.app = this;\n  }\n\n  recordSongVisited()\n  {\n    // require { id, name, content?? }\n    const exportState = this.getExportState();\n    const stateToShare = this.encodeState(exportState);\n    const stateHash = hash(stateToShare);\n\n    const history = Array.from(this.state.history);\n    const relevantHistory = history.filter( song => ( song.id === stateHash && song.name === exportState.songName ) );\n    if( relevantHistory.length !== 0 )\n    {\n\n      // found at least one history entry that matches our constraints ... let's update the most recent one\n      relevantHistory[0].date = Date.now();\n    }\n    else\n    {\n      // add history entry\n      const historyEntry = {\n        name: exportState.songName,\n        id: stateHash,\n        date: Date.now(),\n        content: stateToShare\n      };    \n      history.push(historyEntry);\n    }\n    // cap how many files we remember\n    const restrictedHistory = history.sort( (a,b) =>(b.date - a.date)  ).slice(0, 10);\n    this.setState(\n      { history : restrictedHistory },\n      () => {\n        localStorage.setItem(\"tabit-history\", JSON.stringify(restrictedHistory));\n      }\n    );\n  }\n\n  fetchSong(songID, songTitle)\n  {\n    fetch(getJsonStorageUrl(songID))\n    .then( response => { return response.json(); } )\n    .then( js => {\n      const decodedState = this.decodeState(js);\n      const stateHash = hash(js);\n      if( stateHash !== songID )\n      {\n        throw new Error(\"Hash did not match\");\n      }\n      this.handleJson(songTitle, decodedState);\n    }).catch( (e) => {\n      this.setState({showTitleOptions : true});\n      alert(\"Song \" + (songTitle ?? songID) + \" could not be found.\" );\n    } );\n  }\n\n  loadLocalSong(song)\n  {\n    const decodedState = this.decodeState(song.content);\n    const stateHash = hash(song.content);\n    if( stateHash !== song.id )\n    {\n      throw new Error(\"Hash did not match\");\n    }\n    this.handleJson(song.name, decodedState);\n  }\n\n  componentDidMount()\n  {\n    if( this.props.match.params.song )\n    {\n      this.fetchSong(this.props.match.params.song);\n    }\n  }\n\n  getExportState()\n  {\n    return {\n      instruments : this.state.instruments,\n      instrumentIndex : this.state.instrumentIndex,\n      patterns : this.state.patterns,\n      formatSettings: this.state.formatSettings,\n      patternSettings : this.state.patternSettings,\n      songName: this.state.songName,\n      version: \"1.1.0\"\n    }\n  }\n\n  save()\n  {\n    let destFilename = \"download.tabit\";\n    if(this.state.loadedFile)\n    {\n      const fileParts = this.state.loadedFile.split(\".\");\n      if( fileParts.length === 1 )\n      {\n        destFilename = fileParts[0] + \".tabit\";\n      }\n      else\n      {\n        destFilename = fileParts.slice(0, fileParts.length - 1).join(\".\") + \".tabit\";\n      }\n    }\n\n    const js = JSON.stringify(this.getExportState(), null, 4);\n    const blob = new Blob([js], {type: \"application/json\"});\n    saveAs(blob, destFilename);\n  }\n\n  encodeState(state)\n  {\n    // json\n    const js = JSON.stringify(this.getExportState());\n    // compress\n    const compressedState = zlib.deflateSync(js).toString(\"base64\");\n    return { state : compressedState };\n  }\n\n  decodeState(state)\n  {\n    const binaryBuffer = new Buffer(state.state, \"base64\");\n    const decompressedString = zlib.inflateSync(binaryBuffer);\n    return JSON.parse(decompressedString);\n  }\n\n  share()\n  {\n    const stateToShare = this.encodeState(this.getExportState());\n    const stateHash = hash(stateToShare);\n    const uploadUrl = getJsonStorageUrl(stateHash);\n\n    const metadata = {\n      method: \"PUT\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(stateToShare)\n    };\n\n    const permanentUrl = window.origin + process.env.PUBLIC_URL + \"/song/\" + stateHash;\n    fetch(uploadUrl, metadata).then(\n      e => {\n        this.setState({permanentUrl : permanentUrl, showSharingDialog: true})\n      }\n    ).catch(err => { alert(\"Couldn't upload song at this time. Sorry for any inconvenience.\"); });\n  }\n\n  figurePatternSettings(patterns)\n  {\n    return Array.from(\n      patterns,\n      (p) => notation.guessPerPatternSettings( p.instrumentTracks )\n    );\n  }\n\n  songNameFromFile(filename)\n  {\n    if(filename === null || filename === undefined)\n    {\n      return null;\n    }\n    if( filename.includes(\".\") )\n    {\n      const songTitle = filename.split('.').slice(0, -1).join('.');\n      return songTitle;\n    }\n    else\n    {\n      return filename;\n    }\n  }\n\n  handleJson(title, prevState)\n  {\n    const createTracks = (patternData) =>\n    {\n      // the instruments currently work as simple objects\n      // we need to create tracks!\n      let patterns = [];\n      for( let pattern of patternData )\n      {\n        let replacedTracks = {};\n        // todo: find a more compact way of doing this\n        for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n        {\n          replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n        }\n        let patternWithTracks = Object.assign({}, pattern);\n        patternWithTracks.instrumentTracks = replacedTracks;\n        patterns.push(patternWithTracks);\n      }\n      return patterns;\n    }\n\n    this.setState(\n      {\n        instrumentIndex : prevState.instrumentIndex,\n        instrumentMask : createInstrumentMask(prevState.instrumentIndex, prevState.instruments),\n        instruments : prevState.instruments,\n        patterns : createTracks(prevState.patterns),\n        formatSettings : prevState.formatSettings,\n        patternSettings : prevState.patternSettings,\n        // general app state\n        loadedFile : title ?? prevState.loadedFile,\n        selectedPattern : prevState.patterns.length === 0 ? null : 0,\n        patternsOpen : prevState.patterns.length !== 0,\n        songName: title ?? ( prevState.songName ?? ( prevState.loadedFile ? this.songNameFromFile(prevState.loadedFile) : \"untitled\" ) )\n      },\n      () => {\n        // always default tempo to 100bpm for now\n        this.audio = new ToneBoard( this.state.instrumentIndex, this.state.patterns, 100.0, (time)=>{this.onPatternTimeChange(time);});\n        this.audio.setActivePattern( this.state.patterns[this.state.selectedPattern].name );\n        this.recordSongVisited();\n      }\n    );\n  }\n\n  handleFileImport(e)\n  {\n    if( e.file.name.includes(\"h2song\") )\n    {\n      // e = { file : , content : }\n      h2.parseHydrogenPromise(e.content).then(h => {\n        const assessedInstruments = figureInstruments(h.instruments, DEFAULT_INSTRUMENT_SYMBOLS, h.patterns);\n        const instrumentIndex = activeInstrumentation(h.instruments, h.patterns);\n\n        // fixme: convert hydrogen volume/gain to normal values, somewhere\n        for( let instrument of instrumentIndex )\n        {\n          instrument.volume = 0.5;\n        }\n\n        this.setState(\n          {\n            // data\n            instrumentIndex : instrumentIndex,\n            instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n            instruments : assessedInstruments,\n            patterns : h.patterns,\n            patternSettings : this.figurePatternSettings(h.patterns),\n            // general app state\n            loadedFile : e.file.name,\n            patternsOpen : true,\n            selectedPattern : h.patterns.length === 0 ? null : 0,\n            songName: this.songNameFromFile(e.file.name)\n          },\n          ()=>{\n            // always default tempo to 100bpm for now\n            this.audio = new ToneBoard( this.state.instrumentIndex, this.state.patterns, 100.0, (time)=>{this.onPatternTimeChange(time);});\n            this.audio.setActivePattern( this.state.patterns[this.state.selectedPattern].name );\n            this.recordSongVisited();\n          }\n        );\n      }).catch( (error)=>{ alert(\"Failed to load file \" + e.file.name  + \" with error \" + error); } );\n    }\n    else\n    {\n\n      // assume it's a tabit file!\n      Promise.resolve(e.content)\n        .then(JSON.parse)\n        .then( prevState => { this.handleJson(this.songNameFromFile(e.file.name),prevState); } )\n        .catch( (error)=>{ alert(\"Failed to load file \" + e.file.name  + \" with error \" + error); } );\n    }\n  }\n\n  loadExample()\n  {\n    const createObjects = (state) => \n    {\n      // the instruments currently work as simple objects\n      // we need to create tracks!\n      for( let pattern of state.patterns )\n      {\n        let replacedTracks = {};\n        // todo: find a more compact way of doing this\n        for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n        {\n          replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n        }\n        pattern.instrumentTracks = replacedTracks;\n      }\n      return state;\n    }\n    const k = createObjects(kuva);\n    const assessedInstruments = figureInstruments(k.instruments, DEFAULT_INSTRUMENT_SYMBOLS, k.patterns);\n    const instrumentIndex = activeInstrumentation(k.instruments, k.patterns);\n\n    // fixme: convert hydrogen volume/gain to normal values, somewhere\n    for( let instrument of instrumentIndex )\n    {\n      instrument.volume = 0.5;\n    }\n\n    this.setState(\n      {\n        instrumentIndex : instrumentIndex,\n        instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n        instruments : assessedInstruments,\n        patterns : k.patterns,\n        selectedPattern : k.patterns.length === 0 ? null : 0,\n        loadedFile : \"kuva.example\",\n        patternsOpen : true,\n        patternSettings : this.figurePatternSettings(k.patterns),\n        songName : \"kuva\"\n      },\n      () => {\n        // always default tempo to 100bpm for now\n        this.audio = new ToneBoard( this.state.instrumentIndex, this.state.patterns, 100.0, (time)=>{this.onPatternTimeChange(time);});\n        this.audio.setActivePattern( this.state.patterns[this.state.selectedPattern].name );\n        // no need to record the example, it's embedded into the website anyway\n        // this.recordSongVisited();\n      }\n    );\n  }\n\n  selectPattern(patternIndex)\n  {\n    // it's important to do this before we re-render components\n    this.audio.setActivePattern(\n      this.state.patterns[patternIndex].name\n    );\n\n    this.setState(\n      { selectedPattern: patternIndex }\n    );\n  }\n\n  // todo: this is a separate component!\n  renderPattern(pattern, resolvedSettings)\n  {\n    return (\n      <React.Fragment>\n        <Pattern\n          instruments={this.state.instruments}\n          tracks={pattern.instrumentTracks}\n          config={resolvedSettings}\n          active={this.state.progress}\n          ref={this.pattern}\n        />\n        <PlaybackControls\n          onPlay={()=>{if(this.audio){this.audio.play();}}}\n          onStop={()=>{if(this.audio){this.audio.stop();}}}\n          onTempoChange={(tempo)=>{if(this.audio){this.audio.setTempo(tempo);}}}\n        />\n      </React.Fragment>\n    );\n  }\n\n  onPatternTimeChange(time)\n  {\n    this.pattern.current.onPatternTimeChange(time);\n  }\n\n  getTrackLength(pattern)\n  {\n    let trackLength = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        trackLength = Math.max( trackLength, t.length() );\n    }\n    return trackLength;\n  }\n\n  getResolution(pattern)\n  {\n    let resolution = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        resolution = Math.min( resolution, t.resolution );\n    }\n    return resolution;\n  }\n\n  renderTitlePage()\n  {\n    const showAlert = this.state.patterns != null && this.state.patterns.length === 0;\n    const optionalAlert = showAlert ? ( <Alert severity=\"error\">{this.state.loadedFile} contained no patterns! Try another.</Alert> )\n                                    : \"\";\n    // if a load of a song is in flight don't show file open buttons\n    const controls = (\n      <React.Fragment>\n        <Button variant=\"contained\" onClick={this.loadExample.bind(this)} style={{margin: \"1em\"}}>Load example</Button>\n        <FileImport\n          style={{margin: \"1em\"}}\n          variant=\"contained\"\n          onImport={this.handleFileImport.bind(this)}\n          accept=\".tabit,.h2song\"\n          />\n          {optionalAlert}\n      </React.Fragment>\n    );\n    const waitingMessage = (<React.Fragment>\n        <p> Loading song... </p>\n        <CircularProgress />\n      </React.Fragment>\n    );\n    return (\n      <React.Fragment>\n      <div>\n        <h2>tabit</h2>\n        <p>I read .h2songs and write tab</p>\n        {this.state.showTitleOptions ? controls : waitingMessage}\n      </div>\n      <div style={{ position:\"absolute\", bottom:0 }} >\n        <p>tabit relies on publicly available sound libraries listed at <a href=\"https://github.com/andrew-murray/tabit\">https://github.com/andrew-murray/tabit</a></p>\n      </div>\n      { this.state.history.length > 0 ? <History data={this.state.history} onClick={(piece)=>{this.loadLocalSong(piece);}}/> : \"\" }\n      </React.Fragment>\n    );\n  }\n\n  renderPatternDrawer(iOS, mobile)\n  {\n    const classes = this.props;\n    const handlePatternsClose = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( { patternsOpen : false } );\n    };\n    const handlePatternsOpen = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( { patternsOpen : true } );\n    };\n\n    return (\n      <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n      className={classes.drawer}\n      variant={ mobile ? undefined : \"persistent\" }\n      open={this.state.patternsOpen}\n      onOpen={handlePatternsOpen}\n      onClose={handlePatternsClose}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handlePatternsClose}>\n              <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>\n            {(this.state.patterns ?? []).map( (pattern, index) => (\n              <ListItem button key={\"drawer-pattern\" + index.toString()} onClick={() => this.selectPattern(index)}>\n                  <ListItemText primary={pattern.name} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </SwipeableDrawer>\n    );\n  }\n\n\n\n  renderSettingsDrawer(iOS, mobile, patternConfig)\n  {\n    const classes = this.props;\n    const settingsChangeCallback = (config) => {\n      let existingPatternSettings = Array.from( this.state.patternSettings );\n      let existingGlobalSettings = Object.assign( {}, this.state.formatSettings );\n      for( let [k,v] of Object.entries(config) )\n      {\n        if( k in existingPatternSettings[this.state.selectedPattern] )\n        {\n          existingPatternSettings[this.state.selectedPattern][k] = v;\n        }\n        else\n        {\n          existingGlobalSettings[k] = v;\n        }\n      }\n      this.setState( { formatSettings: existingGlobalSettings, patternSettings : existingPatternSettings } );\n    };\n\n    const handleDrawerOpen = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( {settingsOpen : true} );\n    };\n\n    const handleDrawerClose = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( {settingsOpen : false} );\n    };\n\n    const patternToRender = this.state.patterns[this.state.selectedPattern];\n\n    const patternDetails = {\n      name : patternToRender.name,\n      resolution : patternToRender.resolution,\n      \"length\" : this.getTrackLength(patternToRender)\n    };\n\n    return (\n      <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n        className={classes.drawer}\n        variant={ mobile ? undefined : \"persistent\" }\n        anchor=\"right\"\n        open={this.state.settingsOpen}\n        onOpen={handleDrawerOpen}\n        onClose={handleDrawerClose}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n              <ChevronRightIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <FormatSettings\n          onChange={settingsChangeCallback}\n          settings={patternConfig}\n          pattern={patternDetails}\n          />\n        <Button\n          style={{backgroundColor : \"white\", color : theme.palette.background.default}}\n          onClick={(e) => { this.save(); } }\n        >Download</Button>\n        <Divider />\n        <Button\n          style={{backgroundColor : \"white\", color : theme.palette.background.default}}\n          onClick={(e) => { this.share(); } }\n        >Share</Button>\n      </SwipeableDrawer>\n    );\n  }\n\n  renderSharingDialog()\n  {\n    return (\n      <Dialog\n        open={this.state.showSharingDialog}\n        onClose={(e)=>{this.setState({showSharingDialog: false});}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n          Your song is available at\n          </DialogContentText>\n          <DialogContentText>\n          {this.state.permanentUrl}\n          <IconButton onClick={(e)=>{ copy(this.state.permanentUrl); }}>\n            <FileCopyIcon />\n          </IconButton>\n          </DialogContentText>\n          <DialogActions>\n            <Button onClick={(e)=>{this.setState({showSharingDialog: false})}}>\n              Close\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  renderMainContent()\n  {\n    if(this.state.patterns == null || this.state.patterns.length === 0)\n    {\n      return this.renderTitlePage();\n    }\n    else\n    {\n      const patternToRender = this.state.patterns[this.state.selectedPattern];\n      const patternConfig = Object.assign(\n        Object.assign({}, this.state.formatSettings), // global settings\n        this.state.patternSettings[this.state.selectedPattern] // then apply per-pattern settings\n      );\n      const patternContent = this.renderPattern(patternToRender, patternConfig);\n       \n\n      const changeInstrumentsCallback = (instruments) => {\n        this.setState( {\n          instruments : instruments,\n          instrumentMask : createInstrumentMask(this.state.instrumentIndex, instruments)\n        } );\n      }\n\n      const classes = this.props;\n      const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n      const mobile = isMobile();\n\n      const instrumentConfigColumns = mobile ? 12 : 8;\n\n      const sendVolumeEvent = (event) =>\n      {\n        if(\"volume\" in event)\n        {\n          const instrumentID = this.state.instrumentIndex[ event.instrument ].id;\n          this.audio.setVolumeForInstrument( instrumentID, event.volume );\n        }\n        else if(\"muted\" in event)\n        {\n          const instrumentID = this.state.instrumentIndex[ event.instrument ].id;\n          this.audio.setMutedForInstrument( instrumentID, event.muted );\n        }\n      };\n\n      return (\n        <React.Fragment>\n          {this.renderSharingDialog()}\n          <div style={{display:\"flex\", width: \"95%\"}}> \n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open pattern list\"\n              edge=\"start\"\n              onClick={(e)=>{ this.setState( {patternsOpen: true } )}}\n              className={clsx({\n                [classes.hide] : !this.state.patternsOpen\n              })}\n            >\n              <ChevronRightIcon />\n            </IconButton>\n            <div className=\"content-title\" style={{flexGrow:1}}>\n            </div>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open settings\"\n              edge=\"end\"\n              onClick={(e)=>{ this.setState( {settingsOpen: true } )}}\n              className={clsx(this.state.settingsOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n          {patternContent}\n          <Grid container>\n          <Grid item xs={(12 - instrumentConfigColumns ) / 2} />\n          <Grid item xs={instrumentConfigColumns}>\n            <InstrumentConfig\n              instruments={this.state.instruments}\n              instrumentIndex={this.state.instrumentIndex}\n              instrumentMask={this.state.instrumentMask}\n              onChange={changeInstrumentsCallback}\n              onVolumeEvent={sendVolumeEvent}\n            />\n          </Grid>\n          <Grid item xs={(12 - instrumentConfigColumns ) / 2} />\n          </Grid>\n          {this.renderPatternDrawer(iOS,mobile)}\n          {this.renderSettingsDrawer(iOS,mobile, patternConfig)}\n        </React.Fragment>\n      );\n    }\n  }\n\n  render() {\n    const mainContent = this.renderMainContent();\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          {mainContent}\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(modalStyles)(withRouter(App));\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport notation from \"./notation\";\nimport HelpIcon from '@material-ui/icons/HelpOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nfunction camelToReadable(s)\n{\n  const spacedString = s.replace(/([A-Z])/g, ' $1');\n  return spacedString[0].toUpperCase() + spacedString.slice(1);\n}\n\nfunction FormatSettings(props) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  // todo: change to multiple useState calls?\n\n  function tokenStateToItem(value)\n  {\n    return value === \" \" ? \"space\" : value;\n  }\n\n  function tokenItemToState(value)\n  {\n    return value === \"space\" ? \" \" : value;\n  }\n\n  const handleOptionChange = (name, value) => {\n    const updatedState = {...props.settings, [name]: value};\n    props.onChange(updatedState);\n  };\n\n  const handleCheckedChange = (event) => {\n    const updatedState = {...props.settings, [event.target.name]: event.target.checked};\n    props.onChange(updatedState);\n  };\n\n  function createOptionMenu(\n    name,\n    options,\n    itemToState = tokenItemToState,\n    stateToItem = tokenStateToItem\n  )\n  {\n    const idString = \"form-control-\" + name + \"-id\";\n    return (\n      <FormControl variant=\"filled\" className={classes.formControl} key={idString} id={idString}>\n        <InputLabel id=\"settings-option-{name}\">{name}</InputLabel>\n        <Select\n          labelId={\"settings-option-\" + name + \"-labelID\"}\n          id={\"settings-option-\" + name + \"-id\"}\n          value={stateToItem(props.settings[name])}\n          name={name}\n          onChange={(e) => handleOptionChange( e.target.name, itemToState(e.target.value))}\n        >\n          {options.map((op) => <MenuItem key={\"settings-menu-item-\" + name + \"-\" + op} value={stateToItem(op)}>{stateToItem(op)}</MenuItem>)}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  function createBoolControl(name)\n  {\n    return (\n      <FormControlLabel\n        control={<Switch checked={props.settings[name]} onChange={handleCheckedChange} name={name} />}\n        label={camelToReadable(name)}\n        key={\"switch-\"+name}\n      />\n    );\n  };\n\n  const resolutionToBeatString = (r) => ( r / props.settings.beatResolution ).toString();\n  const beatStringToResolution = (b) => props.settings.beatResolution * parseInt(b);\n  \n  const candidateLineLengths = [ 2, 3, 4, 5, 6, 7, 8, 14, 16, 32 ];\n  let lineLengths = [];\n  for( const c of candidateLineLengths )\n  {\n    const resolution = c * 48;\n    if( (resolution % props.settings.beatResolution) === 0\n      && (resolution <= props.pattern.length)\n     )\n    {\n      lineLengths.push( resolution );\n    }\n  }\n\n  if( !lineLengths.includes( props.pattern.length ) )\n  {\n    lineLengths.push( props.pattern.length );\n    lineLengths.sort();\n  }\n\n  const candidateBeatResolutions = [24, 36, 48, 72, 96];\n  let beatResolutions = [];\n  for( const c of candidateBeatResolutions )\n  {\n    if( (c % props.pattern.resolution) === 0 && ( props.settings.lineResolution % c ) === 0)\n    {\n      beatResolutions.push( c );\n    }\n  }\n  const beatLineHelp = \"Only options that produce lines made up of 'n' whole beats (no part-beats) are shown. \"\n  + \"If the options displayed for either lineResolution or beatResolution are too restrictive, try changing the other option. \"\n  + \"If lineResolution only results in one line, more options for beatResolution will be shown.\"\n  return (\n    <FormGroup className={classes.root}>\n      {notation.FORMAT_CONFIG_STRINGS.map( op => createOptionMenu( op[0], op[1] ) ).reduce((prev, curr) => [prev, curr])}\n      {notation.FORMAT_CONFIG_BOOLS.map( op => createBoolControl( op )).reduce((prev, curr) => [prev, curr]) }\n      <div style={{backgroundColor : \"white\", color : theme.palette.background.default}}><p> {props.pattern.name + \" Options\"} </p></div>\n      {\n        createOptionMenu(\n          \"beatResolution\",\n          beatResolutions,\n          (v) => v.toString(), // stateToItem\n          (v) => parseInt(v) // itemToState\n        )\n      }\n      {createOptionMenu(\n        \"lineResolution\",\n        lineLengths,\n        beatStringToResolution,\n        resolutionToBeatString\n      )}\n      <Grid container>\n        <Grid item xs={8}/>\n        <Grid item xs={4}>\n          <Tooltip title={beatLineHelp} aria-label=\"help\">\n            <Icon>\n              <HelpIcon />\n            </Icon>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </FormGroup>\n  );\n}\n\nconst DefaultSettings = notation.DEFAULT_FORMAT_CONFIG; \n\n\nexport { FormatSettings, DefaultSettings }\nexport default FormatSettings;","// FileUpload.react.js\n\n// inspired by https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n// and https://stackoverflow.com/questions/55830414/how-to-read-text-file-in-react\n\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\n\nclass FileImport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.hiddenFileInput = React.createRef();\n  }\n\n  onChange(e) {\n    const fileObject = e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = loadEvent => {\n      if( this.props.onImport )\n      {\n        this.props.onImport(\n          { file: fileObject, content : loadEvent.target.result}\n        );\n      }\n    }\n    reader.readAsText(fileObject);\n  }\n\n  render() {\n    const clickFile = (e) => {\n      this.hiddenFileInput.current.click();\n    }\n\n    const {onImport, accept, ...buttonProps} = {...this.props};\n    return (\n      <React.Fragment>\n        <Button onClick={clickFile} {...buttonProps}>Import File</Button>\n        <input\n          type=\"file\"\n          hidden\n          accept={accept}\n          onChange={(e) => this.onChange(e)} ref={this.hiddenFileInput}\n          />\n      </React.Fragment>\n   )\n  }\n}\n\nexport default FileImport;\n","// h2.js\n\nimport track from \"./track\";\nimport xml2js from \"xml2js\";\nimport { calculateResolution } from \"./utilities\";\n\n// TODO: This file was written with the hope that using xml2js would make things cleaner\n// it didn't, purely because xml2js is an okay library doing a difficult task\n// it ensures to produce a good json file but in doing so muddles the data a bit.\n// Should replace this with dom-parser and window.DOMParser\n\n// let's think about the data representation needed\n\nfunction calculatePatternResolution(pattern, size)\n{\n  const positions = Array.from(pattern.notes, note => note.position)\n  return calculateResolution(positions, size);\n}\n\nfunction parseHydrogenJs(result)\n{\n    // fixme:\n    // this parsing often assumes there's >=2 elements\n\n    // this \"zero\" here is presumably an artefact of xml --> json representation\n    const instrumentElements = result.song.instrumentList[0].instrument;\n\n    // instruments\n    // [  { id, name } ]\n    const instrumentArray = Array.from(\n      instrumentElements,\n      function(element){\n        const instrumentComponent = element.instrumentComponent[0];\n        let inst = {\n          \"id\" : parseInt(element.id), \n          \"name\" : element.name[0],\n           \"volume\" : parseFloat(element.volume), \n           \"muted\" : element.isMuted[0] === \"true\",\n           \"gain\" : parseFloat(element.gain),\n           \"drumkit\" : element.drumkit[0]\n        };\n        if( \"layer\" in instrumentComponent )\n        {\n          inst[\"filename\"] = instrumentComponent.layer[0].filename[0];\n        }\n        return inst;\n      }\n    );\n\n    const patternElements = result.song.patternList[0].pattern;\n    // patterns\n    // [  { name, size, notes } ]\n    const patternArray = Array.from(\n      patternElements,\n      function(element){\n        const noteElements = element.noteList[0].note;\n        const patternSize = parseInt(element.size);\n        let notes = [];\n        if( noteElements )\n        {\n          // notes \n          // [ {position, instrument(id}]\n          notes = Array.from(\n            noteElements,\n            function(noteElement){\n              return {\"position\" : parseInt(noteElement.position), \"instrument\" : parseInt(noteElement.instrument)};\n            }\n          );\n\n          // hydrogen permits you to have notes that reach past the pattern size, \n          // they then get revealed when you extend the pattern, \n          // here's an easy point to get rid of them, we don't want them to factor into any calculations\n          notes = notes.filter( n => n.position < patternSize );\n        }\n        return {\n          \"size\" : patternSize, \n          \"name\" : element.name[0],\n          \"notes\" : notes\n        };\n      }\n    );\n\n    // transform pattern to a managable data\n    const patternsWithTracks = Array.from(\n      patternArray,\n      function(pattern)\n      { \n        const resolution = calculatePatternResolution(pattern, pattern.size);\n        let instrumentTracks = {};\n        for( const instrument of instrumentArray )\n        {\n          const relevantNotes = pattern.notes.filter( \n            note => (note.instrument === instrument.id)\n          );\n          const relevantHits = Array.from(\n            relevantNotes,\n            note => note.position\n          );\n          instrumentTracks[ instrument.id.toString() ] = track.fromPositions( relevantHits, pattern.size, resolution);\n        }\n        pattern.resolution = resolution;\n        pattern.instrumentTracks = instrumentTracks;\n        return pattern;\n      }\n    );\n\n    // todo: refactor into (at least one) separate function\n    if(result.song.virtualPatternList)\n    {\n      // so unfortunately, virtualPatternGroup represents a directional graph and we have to build\n      // the tree of dependencies for each node, we implement this in a very simplistic way\n      // let's build a mapping( name -> [ names ] ) and continue to resolve it\n      // until we're done\n      const virtualPatternGroups = result.song.virtualPatternList[0].pattern;    \n      if( virtualPatternGroups )\n      {\n        // each element looks like\n        //\n        // <pattern>\n        // <name>p2-a-djembe</name>\n        // <virtual>p2-a-bass</virtual>\n        // <virtual>p2-snare</virtual>\n        // </pattern>\n\n        let patternToRelated = {};\n\n        // record initial relations\n        for( const virtualGroup of Array.from(virtualPatternGroups) )\n        {\n          const rootPatternName = virtualGroup.name[0];\n          const relatedPatterns = Array.from(virtualGroup.virtual);\n          patternToRelated[rootPatternName] = new Set(relatedPatterns);\n        }\n\n        // expand connections until our object stops changing, brute-force\n        // this is a relatively large limit but is better than the potential of an infinite loop\n        // I think 3 layers would be pushing this feature\n        const MAX_ITERATIONS = 20;\n        for(let iteration = 0; iteration < MAX_ITERATIONS; ++iteration)\n        {\n          let expandedObject = {};\n          // we could do a check at the end of each loop, but it's easier to track object equality this way\n          let objectHasExpanded = false;\n          for(const [root, related] of Object.entries(patternToRelated))\n          {\n            let expandedNodeSet = new Set(related);\n            for( const node of expandedNodeSet )\n            {\n              if( node in patternToRelated )\n              {\n                // set union\n                expandedNodeSet = new Set([...expandedNodeSet, ...patternToRelated[node]]);\n              }\n            }\n            objectHasExpanded = objectHasExpanded || ( expandedNodeSet.size !== related.size );\n            expandedObject[ root ] = expandedNodeSet;\n\n          }\n          // exit if no change\n          if(!objectHasExpanded)\n          {\n            break;\n          }\n          // throw if we've failed to resolve all the connections by now, morelikely something has gone wrong\n          if( iteration === MAX_ITERATIONS )\n          {\n            throw new Error(\"Reached max virtual_pattern recursion depth.\");\n          }\n          // otherwise update mapping and continue\n          patternToRelated = expandedObject;\n        }\n\n        for( const [rootPatternName, relatedPatternSet] of Object.entries(patternToRelated) )\n        {\n          // could do filter, and assert on length?\n          let rootPattern = patternsWithTracks.find(p => p.name === rootPatternName);\n          for( const patternToMergeName of relatedPatternSet )\n          {\n            const patternToMerge = patternsWithTracks.find(p => p.name === patternToMergeName );\n            for( const [id, t] of Object.entries(patternToMerge.instrumentTracks) )\n            {\n              if( id in rootPattern.instrumentTracks )\n              {\n                const merged = rootPattern.instrumentTracks[ id ].aggregate( t );\n                // we match hydrogen's implementation here and discard values past the length of the original track\n                merged.rep.length = rootPattern.size  / merged.resolution;\n                rootPattern.instrumentTracks[ id ] = merged; \n              }\n              else\n              {\n                // ensure track is the appropriate length & res\n                let copiedTrack = t.format(rootPattern.resolution);\n                copiedTrack.length = rootPattern.size  / rootPattern.resolution;\n                rootPattern.instrumentTracks[id] = copiedTrack;\n              }\n            }\n          }\n          // reassess resolution and apply to all tracks\n          // this may not be necessary but it's probably nice\n          const resolution = calculatePatternResolution(rootPattern, rootPattern.size);\n          rootPattern.resolution = resolution;\n          for( const [id, track] of Object.entries(rootPattern.instrumentTracks) )\n          {\n            // ensure that \n            rootPattern[id] = track.format( resolution );\n          }\n        }\n\n      }\n    }\n\n\n    return {\n      \"instruments\" : instrumentArray,\n      \"patterns\" : patternsWithTracks\n    }\n}\n\nasync function parseHydrogenPromise(xmlString)\n{\n  let parser = new xml2js.Parser();\n\n  return parser.parseStringPromise(xmlString).then(parseHydrogenJs);\n}\n\nconst moduleExports = { parseHydrogenPromise };\n\nexport default moduleExports;","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\n\nfunction PlaybackControls(props)\n{\n  const tempoControlColumns = 4;\n\n  const onPlay = ()=>{ if(props.onPlay){ props.onPlay(); }; };\n  const onStop = ()=>{ if(props.onStop){ props.onStop(); }; };\n  const onSetTempo = (event, tempo)=>{ if(props.onTempoChange){ props.onTempoChange(tempo); } };\n\n  return (\n      <React.Fragment>\n        <div>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"play\"\n            onClick={onPlay}\n          >\n            <PlayArrowIcon />\n          </IconButton>\n          <IconButton\n            color=\"secondary\"\n            aria-label=\"stop\"\n            onClick={onStop}\n          >\n            <StopIcon />\n          </IconButton>\n        </div>\n\n        <Grid container>\n        <Grid item xs={(12 - tempoControlColumns) / 2} />\n        <Grid item xs={tempoControlColumns}>\n        <Slider\n          defaultValue={100}\n          min={60}\n          step={1}\n          max={180}\n          onChange={onSetTempo}\n          valueLabelDisplay=\"auto\"\n        />\n        </Grid>\n        <Grid item xs={(12 - tempoControlColumns ) / 2} />\n        </Grid>\n\n      </React.Fragment>\n   );\n};\n\nexport default PlaybackControls;","// History.js\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 300,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n\nfunction renderRow(props) {\n  return (\n    <ListItem button style={props.style} key={props.index} onClick={props.onClick}>\n      <ListItemText primary={props.name} secondary={new Date(props.date).toLocaleDateString()}/>\n    </ListItem>\n  );\n}\n\nconst demoData = [\n  {name: \"roudesann\", id: \"3b415c320894e531f4daa93711949e78c0aef281\", \"date\": Date.now()},\n  {name: \"groovy\", id: \"f23c52481af0c08f5037d820a0cf33e886061ffc\", \"date\": Date.now()},\n  {name: \"too_much\", id: \"e7db6989c558e201bceff225d796f0d6073047a9\", \"date\": Date.now()}\n];\n\nfunction History(props)\n{\n  const classes = useStyles();\n  const items = props.data ?? demoData;\n  return (\n    <div style={{maxHeight: 200, overflow: 'auto'}} className={classes.root}>\n      <div>Recently viewed</div>\n      <List>\n            {[...items.keys()].map ( x => renderRow({ \n              index : x, \n              name: items[x].name, \n              id: items[x].id, \n              date: items[x].date,\n              onClick: ()=>{if(props.onClick){props.onClick(items[x]);}}\n            }))}\n      </List>\n    </div>\n  );\n};\n\nexport default History;\n","import React from 'react';\nimport notation from \"./notation\"\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme)=>({\n  root: {\n    whiteSpace: \"pre\",\n    fontFamily: \"Roboto Mono\",\n    fontSize: '0.8rem',\n    '@media (min-width:800px)': {\n      fontSize: '1rem',\n    },\n  }\n});\nconst PreTypography = withStyles(styles)(Typography);\n\nclass Part extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const tracks = Object.values(this.props.tracks);\n    if(tracks.length === 0 )\n    {\n      return <React.Fragment />\n    }\n    const patternArray = notation.formatPatternString(\n      this.props.instrument,\n      this.props.tracks,\n      this.props.config.restMark\n    );\n    // don't support a multi-line pattern, that doesn't divide the beatResolution\n    // because it's a nightmare!\n    const patternResolution = tracks[0].resolution;\n    if( (this.props.config.lineResolution % this.props.config.beatResolution) !== 0\n        && ( patternArray.length * patternResolution > this.props.config.lineResolution ) )\n    {\n      throw new Error(\"This code only supports a beatResolution that divides the lineResolution\");\n    }\n    // this code has got very convoluted\n    const patternLines = notation.chunkArray(patternArray, this.props.config.lineResolution / patternResolution, 0);\n    const beatsPerLine = this.props.config.lineResolution / this.props.config.beatResolution;\n    const beatChunkSize = this.props.config.beatResolution / patternResolution;\n    const linesWithBeats = patternLines.map(\n      line => notation.chunkArray( line, beatChunkSize )\n    );\n    const lineIndices = [...patternLines.keys()];\n    const formatLine = (key, line, startBeat)=>{\n      const beats = [...line.keys()];\n      return (\n        <PreTypography key={\"pattern-line-\" + key}>\n          <PreTypography variant=\"subtitle1\" component=\"span\" key={\"line-start-\" + key}>{this.props.config.lineMark}</PreTypography>\n          {\n            beats.map( beat => <React.Fragment key={\"fragment-beat-\"+ (beat + startBeat).toString()}>\n              <PreTypography variant=\"subtitle1\" component=\"span\" key={\"span-beat-\" + (beat + startBeat).toString()} className={(beat + startBeat) === this.props.activeNote ? \"activeNote\" : \"\"}>{line[beat].join(\"\")}</PreTypography>\n              <PreTypography variant=\"subtitle1\" component=\"span\" key={\"span-beat-marker-\" + (beat + startBeat).toString()}>{(this.props.config.showBeatMark && beat !== beats[beats.length-1]) ? this.props.config.beatMark : \"\"}</PreTypography>\n            </React.Fragment>\n            )\n          }\n          <PreTypography variant=\"subtitle1\" component=\"span\" key={\"line-end-\" + key}>{this.props.config.lineMark}</PreTypography>\n        </PreTypography>\n      );\n    };\n\n    const numberLine = notation.createNumberMarker(\n      this.props.config.numberRestMark,\n      this.props.config.beatResolution,\n      patternResolution,\n      Math.min( this.props.config.lineResolution, patternLines[0].length * patternResolution )\n    );\n    const beatChunks = notation.chunkArray(\n      numberLine,\n      this.props.config.beatResolution / patternResolution\n    );\n    return (\n      <React.Fragment>\n        {this.props.config.showBeatNumbers ? formatLine(\"beat\", beatChunks, 0) : \"\" }\n        {lineIndices.map(lineIndex=>formatLine(lineIndex.toString(), linesWithBeats[lineIndex], beatsPerLine * lineIndex))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(Part);","import React from 'react';\nimport Part from \"./Part\";\n\nfunction getTitleType(headingLevel, defaultLevel)\n{\n    const validHeadingLevels = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    const safeHeading = headingLevel ? headingLevel.toLowerCase() : '';\n    const Title = validHeadingLevels.includes(safeHeading) ? safeHeading : defaultLevel;\n    return Title;\n}\n\nclass PartWithTitle extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const Title = getTitleType(this.props.headingLevel, \"h4\");\n    return (\n      <article>\n        <Title>{this.props.instrumentName}</Title>\n        <Part \n          instrument={this.props.instrument}\n          tracks={this.props.tracks}\n          config={this.props.config}\n          activeNote={this.props.activeNote}\n        />\n      </article>\n    );\n  }\n}\n\nexport default PartWithTitle;","import React from 'react';\nimport PartWithTitle from \"./PartWithTitle\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    \"margin-bottom\": theme.spacing(2),\n    fontFamily: \"Roboto Mono\",\n    textAlign: \"left\",\n    whiteSpace:\"pre\",\n    \"& .activeNote\": {\n      color : theme.palette.primary.main\n    }\n  },\n});\n\nclass Pattern extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      patternTime : undefined\n    };\n  }\n\n  onPatternTimeChange(patternTime)\n  {\n    if( patternTime !== null && patternTime !== undefined )\n    {\n      this.setState({patternTime : patternTime});\n    }\n    else\n    {\n      this.setState({patternTime : undefined });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const instrumentIndices = [...this.props.instruments.keys()];\n    const beatResolution = this.props.config.beatResolution;\n    return (\n      <div className={classes.root} >\n        { instrumentIndices.map( \n            (instrumentIndex) => ( <PartWithTitle \n              key={\"part-\" + instrumentIndex.toString()}\n              instrumentName={this.props.instruments[instrumentIndex][0]}\n              instrument={this.props.instruments[instrumentIndex][1]}\n              tracks={this.props.tracks}\n              config={this.props.config}\n              activeNote={this.state.patternTime !== undefined ? Math.floor(this.state.patternTime / beatResolution) : undefined}\n            /> )\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Pattern);","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport App from \"./App\";\n\n\nexport default function Routes() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/song/:song\">\n            <App/>\n          </Route>\n          <Route path=\"/\">\n            <App/>\n          </Route>\n        </Switch>\n    </Router>\n  )\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nclass notation\n{\n\n  static DEFAULT_FORMAT_CONFIG = {\n    \"restMark\" : \"-\",\n    \"beatMark\" : \"|\",\n    \"lineMark\" : \"|\",\n    \"numberRestMark\" : \"-\",\n    \"beatResolution\" : 48,\n    \"showBeatMark\" : true,\n    \"showBeatNumbers\" : true,\n    // lineResolution is typically determined on a per-pattern basis\n    // however it used to be in here, and some tests still rely on this\n    \"lineResolution\" : 48 * 8\n  };\n\n  static FORMAT_CONFIG_STRINGS = [\n    [\"restMark\",[\"-\", \".\", \" \"]],\n    [\"numberRestMark\",[\"-\", \".\", \" \"]]\n  ];\n\n  static FORMAT_CONFIG_BOOLS = [\n    \"showBeatMark\",\n    \"showBeatNumbers\"\n  ];\n\n  static validateConfig(config, patternResolution) {\n    if( patternResolution != null && ( config.beatResolution % patternResolution ) !== 0 )\n    {\n      throw new Error(\"patternResolution doesn't divide beatResolution\");\n    }\n    if( config.lineResolution <= 0 )\n    {\n      throw new Error(\"config.lineResolution must be greater than zero\");\n    }\n  }\n\n  static resolveConfig(formatConfig)\n  {\n    for( const propName of Object.keys(formatConfig))\n    {\n      if(!notation.DEFAULT_FORMAT_CONFIG.hasOwnProperty(propName))\n      {\n        throw new Error(\"passed unrecognised property \" + propName);\n      }\n    }\n\n    return Object.assign( Object.assign({}, notation.DEFAULT_FORMAT_CONFIG), formatConfig );\n  }\n\n  static chunkString(str, chunkSize) {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    return str.match(new RegExp('.{1,' + chunkSize + '}', 'g'));\n  }\n\n  static chunkArray(a, chunkSize)\n  {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    let chunks = [];\n    for( let i = 0; i < a.length; i += chunkSize )\n    {\n      chunks.push( a.slice(i, Math.min( i + chunkSize, a.length) ) );\n    }\n    return chunks;\n  }\n\n  static createNumberMarker(numberRestMark, beatResolution, patternResolution, lineLength)\n  {\n    if( lineLength <= 0 )\n    {\n      throw new Error(\"lineLength <= 0\");\n    }\n\n    if( ( beatResolution % patternResolution ) !== 0)\n    {\n      throw new Error(\"patternResolution \" + patternResolution.toString() + \" does not divide beatResolution \" + beatResolution.toString());\n    }\n\n    let beatCount = Math.ceil(lineLength / beatResolution);\n    let numberMarkerArray = Array.from( Array(lineLength / patternResolution), e => numberRestMark );\n\n    for( let beat = 0; beat < beatCount; beat++ )\n    {\n      numberMarkerArray[ beat * ( beatResolution / patternResolution ) ] = ( (beat+1) % 10 ).toString();\n    }\n    return numberMarkerArray;\n  }\n\n  static formatLineWithMarkers(config, line, patternResolution, asHTML)\n  {\n    notation.validateConfig(config);\n\n    const beatChunkSize = config.beatResolution / patternResolution;\n\n    const padZero = (n, width) => {\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    };\n    const formatSymbolAsSpans = (symbol, numericPosition) => {\n      return \"<span class='note-\" + padZero(numericPosition, 4) + \"'>\" +  symbol + \"</span>\";\n    };\n\n    const formatSymbol = asHTML ? formatSymbolAsSpans : (symbol, numericPosition) => symbol;\n\n    let formattedLine = \"\";\n    for( let index = 0; index < line.length; ++ index )\n    {\n      const numericPosition = patternResolution * index;\n      formattedLine += formatSymbol(line.charAt(index), numericPosition);\n    }\n\n\n    const lineWithBeats = config.showBeatMark ? notation.chunkString(formattedLine, beatChunkSize * formatSymbol(\"X\", 0).length).join(config.beatMark) : formattedLine;\n    // note: we choose to always show the lineMarker even if it doesn't match the line resolution\n    return config.lineMark + lineWithBeats + config.lineMark;\n  }\n\n  static defaultLineResolution(\n    trackDict,\n    beatResolution\n  )\n  {\n    const instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return 48 * 8;\n    }\n    const trackLength = instrumentTracks[0].length();\n    const beatCount = trackLength / beatResolution;\n    if( beatCount <= 12 )\n    {\n      return trackLength;\n    }\n    else if( beatCount > 32 )\n    {\n      return 48 * 16; // let's just be laazeee\n    }\n    else\n    {\n      // let's just apply a simple mapping, rather than think through logics\n      const mapping = [\n        trackLength, // 13 \n        trackLength / 2, // 14\n        trackLength / 3, // 15\n        trackLength / 2, // 16\n        trackLength, // 17\n        trackLength / 3, // 18\n        trackLength, // 19\n        trackLength / 4, // 20\n        trackLength / 3, // 21\n        trackLength / 2, // 22\n        trackLength, // 23\n        trackLength / 3, // 24\n        trackLength / 5, // 25\n        trackLength, // 26\n        trackLength / 3, // 27\n        trackLength / 4, // 28\n        trackLength, // 29\n        trackLength / 6, // 30\n        trackLength, // 31\n        trackLength / 4, // 32\n      ];\n      return mapping[ beatCount - 13 ];\n    }\n  }\n\n  static guessPerPatternSettings(\n    trackDict\n  )\n  {\n    return {\n      \"lineResolution\" : notation.defaultLineResolution(trackDict, 48), // beatResolution (default)\n      \"beatResolution\" : 48 // should cover all the cases hopefully\n    };\n  }\n\n  static formatPatternString(\n    instrument,\n    trackDict,\n    restMark\n  )\n  {\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    const patternSize = instrumentTracks[0].length();\n    const patternResolution = instrumentTracks[0].resolution;\n    const notationLength = patternSize / patternResolution;\n\n    let patternArray = Array(notationLength).fill(restMark);\n    for( let charIndex = 0; charIndex < patternArray.length; ++charIndex)\n    {\n      // todo: handle collisions\n      for( const [trackID, trackSymbol] of Object.entries(instrument) )\n      {\n        const trackInstance = trackDict[trackID];\n        if( trackInstance != null && trackInstance.rep[charIndex] === 1 )\n        {\n          patternArray[charIndex] = trackSymbol;\n        }\n      }\n    }\n    return patternArray;\n  }\n\n  static fromInstrumentAndTrack(\n    instrument,\n    trackDict,\n    asHTML,\n    formatConfig = {}\n  )\n  {\n    const config = notation.resolveConfig(formatConfig);\n\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    // turn the tracks, into one char string\n    const patternArray = notation.formatPatternString( instrument, trackDict, config.restMark );\n    const patternString = patternArray.join(\"\");\n    const patternResolution = instrumentTracks[0].resolution;\n    const patternSize = instrumentTracks[0].length();\n\n    // handle lines and beatMarkers\n    let lineArray = notation.chunkString( patternString, config.lineResolution / patternResolution );\n\n    let formattedLineArray = [];\n    // add numbers on the first line\n    if( config.showBeatNumbers )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( \n        config, \n        notation.createNumberMarker(config.numberRestMark, config.beatResolution, patternResolution, Math.min(config.lineResolution, patternSize)).join(\"\"),\n        patternResolution,\n        asHTML\n      ) );\n    }\n    for( let i = 0; i < lineArray.length; ++i )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( config, lineArray[i], patternResolution, asHTML ) );\n    }\n\n    return formattedLineArray.join(\"\\n\");\n  }\n};\n\nexport default notation;","const DEFAULT_INSTRUMENT_SYMBOLS = {\n  \"Djembe Slap\" : \"S\",\n  \"Djembe Tone\" : \"t\",\n  \"Djembe Bass\" : \"O\",\n  \"Snare Ghost\" : \"x\",\n  \"Snare Accent\" : \"X\",\n  \"Shaker Ghost\" : \"x\",\n  \"Shaker Accent\" : \"X\",\n  \"Click\" : \"X\",\n  \"Bass\" : \"O\",\n  \"Tom\" : \"O\",\n  \"Default\" : \"X\"\n};\n\nfunction normalizeInstrumentsForFiguring(instruments)\n{\n  let n = [];\n  for(const inst of instruments)\n  {\n    let nInst = Object.assign({}, inst);\n    // for some reason these instruments are one-size arrays, and one id ... the track id from hydrogen\n    // this should be fixed, this doesn't make sense\n    nInst.name = nInst.name.toLowerCase();\n    n.push( nInst );\n  }\n  return n;\n}\n\nfunction figureDjembes(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const djembeTracks = instruments.filter( (inst) => inst.name.includes(\"djembe\") );\n  if(djembeTracks.length === 0)\n  {\n    return [];\n  }\n  else if(djembeTracks.length <= 3)\n  {\n    // let's lazily assume we have a slap, tone, bass\n    const slapArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"slap\") );\n    const toneArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"tone\") );\n    const bassArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"bass\") );\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      let parityCheck = slapArray[i] + toneArray[i] + bassArray[i];\n      // failed to figure out how djembes work return empty array\n      if(parityCheck !== 1)\n      {\n        return [];\n      }\n    }\n    let djembeMapping = {};\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      if( slapArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Slap\"];\n      }\n      else if( toneArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Tone\"];\n      }\n      else if( bassArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Bass\"];\n      }\n    }\n    return [ [ \"Djembe\", djembeMapping ] ];\n  }\n  else\n  {\n    // TODO: support more than one djembe\n    return []\n  }\n}\n\n// used by snare/shaker\nfunction manageAccentOrGhost(instrumentTracks, instrumentName, accentSymbol, ghostSymbol)\n{\n  let outputInstruments = [];\n  if(instrumentTracks.length === 2)\n  {\n    const t0 = instrumentTracks[0];\n    const t1 = instrumentTracks[1];\n    // attempt to determine ghost/accent\n    const zeroLouder = t0.volume > t1.volume || (t0.volume === t1.volume && t0.gain > t1.gain);\n    let mapping = {};\n    mapping[ t0.id.toString() ] = zeroLouder ? accentSymbol : ghostSymbol;\n    mapping[ t1.id.toString() ] = zeroLouder ? ghostSymbol : accentSymbol;\n    outputInstruments.push([instrumentName, mapping] );  \n  }\n  else // if 1 it must be an accent, if >= 3 ... I don't want to try and assign ghosts/accents\n  {\n    // I don't want to support ghost/accent here right now\n    for( const track of instrumentTracks )\n    {\n      let mapping = {};\n      mapping[ track.id.toString() ] = accentSymbol;\n      outputInstruments.push([instrumentName, mapping] );  \n    }\n  }\n  return outputInstruments;\n\n}\n\nfunction figureShakers(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  // todo: support common alternative shakers? Tambourine?\n  const shakerTracks = instruments.filter( (inst) => ( inst.name.includes(\"shaker\") ) );\n  return manageAccentOrGhost( \n    shakerTracks, \n    \"Shaker\", \n    symbolConfig[\"Shaker Accent\"],\n    symbolConfig[\"Shaker Ghost\"]\n  );\n}\n\nfunction figureSnares(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const snareTracks = instruments.filter( (inst) => ( inst.name.includes(\"snare\") ) );\n  // todo: we currently assume 2 snares is accent/ghost ... but I think it's relatively\n  // common to be 2 snare parts too, I think the algorithm here is check patterns to\n  // see if they overlap ... if the \"ghosts\" overlap the \"hits\" sometimes, assume 2 parts\n  return manageAccentOrGhost( \n    snareTracks, \n    \"Snare\", \n    symbolConfig[\"Snare Accent\"],\n    symbolConfig[\"Snare Ghost\"]\n  );\n}\n\n\nfunction activeInstruments(patterns)\n{\n  let nonTrivialInstruments = new Set();\n  for( const p of patterns )\n  {\n    for(const [instrumentID, part] of Object.entries(p.instrumentTracks))\n    {\n      if( !part.empty() )\n      {\n        nonTrivialInstruments.add(parseInt(instrumentID));\n      }\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction activeInstrumentation(instrumentIndex, patterns)\n{\n  const active = activeInstruments(patterns);\n  let nonTrivialInstruments = [];\n  for( const inst of instrumentIndex)\n  {\n    if( active.has(inst.id) )\n    {\n      nonTrivialInstruments.push( inst );\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction figureClickyInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const worthwhileInstruments = activeInstruments(patterns);\n  const relevantTracks = instruments.filter( (inst) => ( worthwhileInstruments.has(inst.id) &&\n    !inst.name.includes(\"djembe\") &&\n    ( inst.name.includes(\"click\") || \n    inst.name.includes(\"stick\") || \n    inst.name.includes(\"tom\") || \n    inst.name.includes(\"bass\") ||\n    inst.name.includes(\"kick\") )\n  ) );\n\n  const trackIsClick = Array.from(\n    relevantTracks,\n    (t) => t.name.includes(\"click\") || t.name.includes(\"stick\")\n  );\n  // we prioritise the early tracks\n  // and hope for the best\n\n  let tomIndex = 1;\n  let bassIndex = 1;\n  let collated = [];\n  for( let candidate = 0; candidate < Math.floor(relevantTracks.length/2); ++candidate )\n  {\n    if( trackIsClick[candidate*2] !== trackIsClick[candidate*2+1] )\n    {\n      const clickTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2] : relevantTracks[candidate*2+1];\n      const hitTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2+1] : relevantTracks[candidate*2];\n      const instrumentIsTom = hitTrack.name.includes(\"tom\");\n      let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n      let instrumentName = \"\"\n      if( instrumentIsTom )\n      {\n        instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n        tomIndex = tomIndex + 1;\n      }\n      else\n      {\n        instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n        bassIndex = bassIndex + 1;\n      }\n      let mapping = {};\n      mapping[hitTrack.id.toString()] = symbolConfig[rawInstrumentName];\n      mapping[clickTrack.id.toString()] = symbolConfig[\"Click\"];\n      collated.push([instrumentName, mapping] );  \n    }\n  }\n\n  // If there's a remainder instrument and there's no click\n  if( ((relevantTracks.length % 2 ) !== 0) && !trackIsClick[ relevantTracks.length - 1 ] )\n  {\n    const lastTrack = relevantTracks[relevantTracks.length - 1];\n    const instrumentIsTom = lastTrack.name.includes(\"tom\");\n    let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n    let instrumentName = \"\"\n    if( instrumentIsTom )\n    {\n      instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n      tomIndex = tomIndex + 1;\n    }\n    else\n    {\n      instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n      bassIndex = bassIndex + 1;\n    }\n    let mapping = {};\n    mapping[lastTrack.id.toString()] = symbolConfig[rawInstrumentName];\n    collated.push([instrumentName, mapping] );  \n  }\n  return collated;\n}\n\nfunction defaultSymbolForSingleInstrument(symbolConfig, name)\n{\n  // we expect these keys\n  /*\n    \"Djembe Slap\" : \"S\",\n    \"Djembe Tone\" : \"t\",\n    \"Djembe Bass\" : \"O\",\n    \"Snare Ghost\" : \"-\",\n    \"Snare Accent\" : \"X\",\n    \"Shaker Ghost\" : \"x\",\n    \"Shaker Accent\" : \"X\",\n    \"Click\" : \"X\",\n    \"Bass\" : \"O\",\n    \"Tom\" : \"O\",\n    \"Default\" : \"X\"\n  */\n  const lowerName = name.toLowerCase();\n  if( lowerName.includes(\"click\") || lowerName.includes(\"stick\") )\n  {\n    return symbolConfig[\"Click\"];\n  }  \n  else if( lowerName.includes(\"bass\") || lowerName.includes(\"kick\") )\n  {\n    return symbolConfig[\"Bass\"]\n  }\n  else if( lowerName.includes(\"snare\") )\n  {\n    return symbolConfig[\"Snare Accent\"];\n  }\n  else if( lowerName.includes(\"shaker\") )\n  {\n    return symbolConfig[\"Shaker\"];\n  }\n  else if( lowerName.includes(\"tom\") )\n  {\n    return symbolConfig[\"Tom\"];\n  }\n  else if( lowerName.includes(\"djembe\") )\n  {\n    if( lowerName.includes(\"slap\") )\n    {\n      return symbolConfig[\"Djembe Slap\"];\n    }\n    else if( lowerName.includes(\"tone\") )\n    {\n      return symbolConfig[\"Djembe Tone\"];\n    }\n    else\n    {\n      return symbolConfig[\"Djembe Bass\"];\n    }\n  }\n  return symbolConfig[\"Default\"];\n}\n\nfunction figureInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  let output = [];\n  output = output.concat( figureClickyInstruments( instrumentsRaw, symbolConfig, patterns ) );\n  output = output.concat( figureDjembes( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureSnares( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureShakers( instrumentsRaw, symbolConfig ) );\n\n  // we ignore track used by multiple instruments\n\n  // but attempt to cover \"instrument not recognised anywhere\"\n\n  const worthwhileInstruments = activeInstruments(patterns);\n\n  for(const inst of instrumentsRaw)\n  {\n    if( !worthwhileInstruments.has(inst.id) )\n    {\n      continue;\n    }\n    let instrumentUsed = false;\n    for( const op of output)\n    {\n      if( inst.id.toString() in op[1] ) \n      {\n        instrumentUsed = true;\n      }\n    }\n    if(instrumentUsed === false)\n    {\n      let mapping = {};\n      mapping[ inst.id.toString() ] = defaultSymbolForSingleInstrument( symbolConfig, inst.name );\n      output.push( [inst.name, mapping] );\n    }\n  }\n  \n  return output; \n}\n\nexport { activeInstrumentation, DEFAULT_INSTRUMENT_SYMBOLS, figureClickyInstruments, figureDjembes, figureShakers, figureSnares, figureInstruments };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Grid from '@material-ui/core/Grid';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport ClickNHold from 'react-click-n-hold';\nimport Slider from '@material-ui/core/Slider';\n\nimport {isMobile} from \"./Mobile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nconst ThinFormControlLabel = withStyles({\n  root: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n})(FormControlLabel);\n\nconst InlinableIconButton = withStyles({\n  root: {\n    padding: 2\n  }\n})(IconButton);\n\nconst NoDividerCenterTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: \"none\",\n    textAlign: \"center\",\n    paddingBottom: theme.spacing(0) // make instrument titles bunch up with their controls a little more\n  }\n}))(TableCell);\n\nconst CenterTableCell = withStyles((theme) => ({\n  root: {\n    textAlign: \"center\"\n  }\n}))(TableCell);\n\nfunction VolumeWidget(props)\n{\n  const [active, setActive] = React.useState(false);\n  const [sliderValue, setSliderValue] = React.useState(100);\n  const [muted, setMuted] = React.useState(props.muted);\n  const sliderRef = React.useRef(null);\n  const height = props.height ? props.height / 3 : 24;\n  const FixedHeightStylings = {\n    height: 3*height,\n    position: \"absolute\",\n    top: -height\n  };\n  const SliderStyles = Object.assign(active? {} : {\"visibility\": \"hidden\", paddingLeft: \"0px\"}, FixedHeightStylings);\n  const IconStyles = active ?  {\"visibility\":\"hidden\"} : {};\n\n  // currently: updating based on the normal volume event isn't nearly performant enough \n  // (because the app's state update is really sluggish)\n  // potential fixes - seperate the audio and the visual state and/or create smaller state objects\n  const setVolume = (event, value) =>\n  {\n    setSliderValue(value);\n    if( props.onChange )\n    {\n      props.onChange( value );\n    }\n  };\n\n  // for mobile\n  // we click'n'hold which opens the volume slider, but don't propagate focus\n  \n  // for desktop/tablet\n  // we click'n'hold and propagate focus to the slider, so that our drag \n  // will pull the slider up and down\n  const mobile = isMobile();\n\n  const holdDesktop = (start, event)=>{\n    if(!active){ setActive(true); }\n    if(sliderRef){ sliderRef.current.dispatchEvent(event.nativeEvent);}\n  };\n\n  const holdMobile= (start, event)=>{\n    if(!active){ setActive(true); }\n  };\n\n  const holdEndDesktop = (e)=>{\n    setActive(false);\n  };\n\n  const commitVolume = (event,value)=>\n  {\n    if( mobile ){ setActive(false); }\n    setVolume(event,value);\n  };\n\n  const onMuteChange = () =>\n  {\n    setMuted(!muted);\n    props.onMuteEvent(!muted);\n  };\n\n  return (\n    <ClickNHold\n      time={0.5} // Time to keep pressing. Default is 2\n      onClickNHold={mobile ? holdMobile : holdDesktop}\n      onEnd={mobile ? null : holdEndDesktop} >\n      <InlinableIconButton disableRipple disableFocusRipple onClick={onMuteChange} >\n        <div style={SliderStyles}>\n          <Slider\n            defaultValue={100}\n            orientation=\"vertical\"\n            aria-labelledby=\"vertical-slider\"\n            onChange={commitVolume}\n            ref={sliderRef}\n          />\n        </div>\n        <div style={IconStyles}>\n          { muted ?  <VolumeOffIcon fontSize=\"small\" />\n          : sliderValue < 10 ? <VolumeMuteIcon fontSize=\"small\" />\n          : sliderValue < 50 ? <VolumeDownIcon fontSize=\"small\" />\n                             : <VolumeUpIcon fontSize=\"small\"/> }\n        </div>\n      </InlinableIconButton>\n    </ClickNHold>\n  );\n}\n\nclass RawInstrumentEditDialog extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSymbol : null\n    };\n  }\n\n  render() {\n\n    const cancel = (e) => {\n      this.setState({\"currentSymbol\" : null});\n      if(this.props.onCancel){\n        this.props.onCancel();\n      }\n    };\n\n    const confirm = (e) => {\n      if(this.state.currentSymbol !== null && this.state.currentSymbol.length === 1)\n      {\n        if(this.props.onChange){\n          this.props.onChange(this.state.currentSymbol);\n        }\n      }\n      else\n      {\n        // todo: prettier error communication?\n        alert(\n          \"You selected an invalid symbol \\\"\" + this.state.currentSymbol + \"\\\".\\n\" +\n          \"Symbols must be precisely 1 character.\"\n        );\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter notation symbol\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentSymbol ?? this.props.value}\n            onChange={(e)=>{this.setState({currentSymbol: e.target.value});}}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nclass InstrumentRenameDialog extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      currentName : null\n    };\n  }\n\n  render()\n  {\n\n    const cancel = () => {\n      if(this.props.onCancel)\n      {\n        this.props.onCancel();\n      }\n      this.setState({currentName: null});\n    };\n\n    const confirm = () => {\n      if(this.state.currentName !== null)\n      {\n        const instrumentName = this.state.currentName.trim();\n        if( instrumentName.length > 0 )\n        {\n          if(this.props.onChange)\n          {\n            this.props.onChange(this.state.currentName);\n          }\n          this.setState({currentName: null});\n        }\n        else\n        {\n          // todo: prettier error communication?\n          alert(\n            \"You selected an invalid instrument name \\\"\" + this.state.currentName + \"\\\".\\n\" +\n            \"Must be non-empty.\"\n          );\n        }\n      }\n      else\n      {\n        cancel();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter instrument name\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentName ?? this.props.value}\n            onChange={(e)=>{this.setState({currentName: e.target.value});}}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n};\n\nfunction InstrumentTable(props)\n{\n  const classes = useStyles();\n\n  const editRow = (y)=>{ if( props.onEditRow ){ props.onEditRow(y); }};\n  const editColumn = (x)=>{ if( props.onEditColumn ){ props.onEditColumn(x); }};\n  const addRow = ()=>{ if( props.onAddRow ){ props.onAddRow(); }};\n  const removeRow = (y)=>{ if( props.onRemoveRow ){ props.onRemoveRow(y); }};\n\n  const handleChange = (x,y, event) => {\n    const instrumentID = props.instrumentIndex[x].id;\n    const oldInstrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const dstInstrumentIndex = y;\n    if( oldInstrumentIndex === dstInstrumentIndex )\n    {\n      return;\n    }\n    const oldInstrument = props.instruments[oldInstrumentIndex];\n    let replacedSrcInstrument = [\n      \"\",\n      {}\n    ];\n    if( oldInstrument != null )\n    {\n      replacedSrcInstrument[0] = oldInstrument[0];\n      for( const key of Object.keys(oldInstrument[1]) )\n      {\n        if( key !== instrumentID.toString() )\n        {\n          replacedSrcInstrument[1][key] = oldInstrument[1][key];\n        }\n      }\n    }\n    let dstInstrument = [\n      props.instruments[dstInstrumentIndex][0],\n      Object.assign({}, props.instruments[dstInstrumentIndex][1] )\n    ];\n    if(oldInstrument != null )\n    {\n      dstInstrument[1][instrumentID.toString()] = oldInstrument[1][instrumentID];\n    }\n    else\n    {\n      dstInstrument[1][instrumentID.toString()] = \"X\";\n    }\n\n    let replacedInstruments = [];\n\n    for(let instrumentIndex = 0; instrumentIndex < props.instruments.length; ++instrumentIndex)\n    {\n      if( instrumentIndex === oldInstrumentIndex )\n      {\n        replacedInstruments.push( replacedSrcInstrument );\n      }\n      else if( instrumentIndex === dstInstrumentIndex )\n      {\n        replacedInstruments.push( dstInstrument )\n      }\n      else\n      {\n        replacedInstruments.push( props.instruments[instrumentIndex] );\n      }\n    }\n    props.onChange(replacedInstruments);\n  };\n\n  const createCell = (x,y) =>\n  {\n      return ( \n        <TableCell\n          align=\"center\"\n          key={\"instrumentPanel-cell-\" + y.toString() + \"-\" + x.toString()}\n        >\n        <ThinFormControlLabel\n          control={<Checkbox checked={props.instrumentMask[x] === y} onChange={(e) =>{handleChange(x,y,e);}} name={x + \",\" + y.toString()} />}\n        />\n        </TableCell>\n      );\n  }\n\n  const createMatchingRow = (y) =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-\" + y.toString()}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-\" + y.toString() + \"-name\"}> \n          <Typography>{props.instruments[y][0]}</Typography>\n          <InlinableIconButton onClick={(e)=>{editRow(y);}}><EditIcon fontSize=\"small\"/></InlinableIconButton>\n          <InlinableIconButton onClick={(e)=>{removeRow(y);}}><ClearIcon fontSize=\"small\"/></InlinableIconButton>\n        </TableCell>\n        {[...Array(props.instrumentMask.length).keys()].map(x=>createCell(x,y))}\n      </TableRow>\n    );\n  };\n\n  const createEditRow = () =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-edit\"}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-edit-cell\"}>\n          <IconButton onClick={(e)=>{addRow();}} aria-label=\"add\">\n            <AddBoxIcon/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  return (\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow key={\"instrumentPanel-row-header\"}>\n          <NoDividerCenterTableCell key={\"instrumentPanel-row-instrument\"}> Instrument </NoDividerCenterTableCell>\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <NoDividerCenterTableCell key={\"instrumentPanel-row-header-cell-\" + x.toString()}>\n                <Typography>{props.instrumentIndex[x].name}</Typography>\n              </NoDividerCenterTableCell>)}\n        </TableRow>\n        <TableRow key={\"instrumentPanel-row-controls\"}>\n          <TableCell key={\"instrumentPanel-row-instrument\"}></TableCell>\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <CenterTableCell key={\"instrumentPanel-row-controls-cell-\" + x.toString()}>\n                <Grid container>\n                <Grid item xs={6}>\n                <InlinableIconButton onClick={(e)=>{editColumn(x);}}>\n                  <EditIcon fontSize=\"small\"/>\n                </InlinableIconButton>\n                </Grid>\n                <Grid item xs={6}>\n                  <VolumeWidget\n                    muted={props.instrumentIndex[x].muted}\n                    onChange={(value)=>{props.onVolumeEvent( {instrument: x, volume: value / 100.0}); }}\n                    onMuteEvent={(muted)=>{props.onVolumeEvent( {instrument: x, muted: muted})}}\n                    />\n                </Grid>\n                </Grid>\n              </CenterTableCell>)}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {[...Array(props.instruments.length).keys()].map(y=>createMatchingRow(y))}\n        {createEditRow()}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction InstrumentConfig(props) {\n  const [editingSymbol, setEditingSymbol] = React.useState(null);\n  const [renamingInstrument, setRenamingInstrument] = React.useState(null);\n\n  const removeInstrument = (y) =>\n  {\n    let replacedInstruments = props.instruments.slice(0,y).concat(props.instruments.slice(y+1));\n    props.onChange(replacedInstruments);\n  };\n\n  const getSymbol = (x) => {\n    const instrumentID = props.instrumentIndex[editingSymbol].id;\n    const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    return props.instruments[instrumentIndex][1][instrumentID];\n  };\n\n  const endEditingSymbol = (resolvedSymbol) =>\n  {\n    if(resolvedSymbol !== null)\n    {\n      const instrumentID = props.instrumentIndex[editingSymbol].id;\n      const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n      let replacedInstruments = Array.from(props.instruments);\n      replacedInstruments[instrumentIndex][1][instrumentID] = resolvedSymbol;\n      props.onChange(replacedInstruments);\n    }\n    setEditingSymbol( null );\n  };\n\n  const getName = (y) => {\n    return props.instruments[y][0];\n  };\n\n  const renameInstrument = (instrumentName)  =>\n  {\n    // this function also deals with the addition of new instruments\n    if( renamingInstrument === props.instruments.length )\n    {\n      const extraInstrument = [ instrumentName, {} ];\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments.push(extraInstrument);\n      props.onChange(replacedInstruments);\n    }\n    else\n    {\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments[renamingInstrument][0] = instrumentName;\n      props.onChange(replacedInstruments);\n    }\n    setRenamingInstrument(null);\n  };\n\n  return (\n    <React.Fragment>\n      <InstrumentRenameDialog\n        open={renamingInstrument !== null}\n        onCancel={()=>{setRenamingInstrument(null);}}\n        onChange={(s)=>{renameInstrument(s);}}\n        value={renamingInstrument !== null ? getName(renamingInstrument) : null}\n      />\n      <RawInstrumentEditDialog\n        open={editingSymbol !== null}\n        onCancel={()=>{endEditingSymbol(null);}}\n        onChange={(s)=>{endEditingSymbol(s);}}\n        value={editingSymbol !== null ? getSymbol(editingSymbol) : null}\n        />\n      <TableContainer>\n        <InstrumentTable\n          instrumentIndex={props.instrumentIndex}\n          instrumentMask={props.instrumentMask}\n          instruments={props.instruments}\n          onEditColumn={(x)=>{setEditingSymbol(x);}}\n          onEditRow={(y)=>{setRenamingInstrument(y);}}\n          onAddRow={()=>{setRenamingInstrument(props.instruments.length)}}\n          onRemoveRow={(y)=>{removeInstrument(y);}}\n          onVolumeEvent={props.onVolumeEvent}\n          onChange={props.onChange}\n        />\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n\nfunction createInstrumentMask(instrumentIndex, instruments)\n{\n  let instrumentMask = Array(instrumentIndex.length);\n  for( let baseInstrumentIndex = 0; baseInstrumentIndex < instrumentIndex.length; ++baseInstrumentIndex )\n  {\n    const baseInstrumentId = instrumentIndex[baseInstrumentIndex].id;\n    for( let targetInstrumentIndex = 0; targetInstrumentIndex < instruments.length; ++targetInstrumentIndex)\n    {\n      const target = instruments[targetInstrumentIndex];\n      if(baseInstrumentId.toString() in target[1])\n      {\n        instrumentMask[baseInstrumentIndex] = targetInstrumentIndex;\n      }\n    }\n  }\n  return instrumentMask;\n}\n\nexport { createInstrumentMask, InstrumentConfig };"],"sourceRoot":""}
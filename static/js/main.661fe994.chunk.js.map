{"version":3,"sources":["formatSettings.js","App.js","FileImport.js","Pattern.js","h2.js","Audio.js","AudioRequest.js","SoundBoard.js","serviceWorker.js","index.js","notation.js","instrumentation.js","instrumentConfig.js","track.js","utilities.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","camelToReadable","s","spacedString","replace","toUpperCase","slice","FormatSettings","props","classes","useTheme","tokenStateToItem","value","tokenItemToState","handleOptionChange","name","updatedState","settings","onChange","handleCheckedChange","event","target","checked","createOptionMenu","options","itemToState","stateToItem","idString","variant","className","key","id","labelId","e","map","op","console","log","dir","lineLengths","resolution","beatResolution","push","length","beatResolutions","c","pattern","root","notation","FORMAT_CONFIG_STRINGS","reduce","prev","curr","FORMAT_CONFIG_BOOLS","control","label","style","backgroundColor","color","palette","background","default","v","toString","parseInt","b","r","DefaultSettings","DEFAULT_FORMAT_CONFIG","createMuiTheme","type","primary","main","secondary","App","state","instruments","instrumentIndex","instrumentMask","patterns","selectedPattern","loadedFile","settingsOpen","patternsOpen","formatSettings","Object","assign","patternSettings","progress","Array","from","p","guessPerPatternSettings","instrumentTracks","h2","parseHydrogenPromise","content","then","h","assessedInstruments","figureInstruments","DEFAULT_INSTRUMENT_SYMBOLS","activeInstrumentation","setState","createInstrumentMask","file","figurePatternSettings","patternIndex","this","resolvedSettings","Fragment","tracks","config","active","container","item","xs","k","replacedTracks","entries","trackData","track","rep","createObjects","kuva","a","check","navigator","userAgent","vendor","window","opera","test","substr","trackLength","t","Math","max","min","optionalAlert","severity","onClick","loadExample","bind","onImport","handleFileImport","position","bottom","href","patternToRender","patternConfig","patternContent","renderPattern","ignoreEvent","handleDrawerOpen","handleDrawerClose","handlePatternsClose","handlePatternsOpen","iOS","process","browser","mobile","checkMobile","patternDetails","getTrackLength","display","width","aria-label","edge","clsx","hide","flexGrow","disableBackdropTransition","disableDiscovery","drawer","undefined","open","onOpen","onClose","drawerHeader","drawerContainer","index","button","selectPattern","anchor","paper","drawerPaper","existingPatternSettings","existingGlobalSettings","mainContent","renderMainContent","React","Component","FileImport","fileObject","files","reader","FileReader","onload","loadEvent","result","readAsText","Pattern","configOverride","page","instrumentName","instrument","notationString","fromInstrumentAndTrack","split","x","formatText","dangerouslySetInnerHTML","withStyles","fontFamily","textAlign","whiteSpace","parseHydrogenJs","instrumentElements","song","instrumentList","instrumentArray","element","instrumentComponent","inst","parseFloat","volume","isMuted","gain","drumkit","layer","filename","patternElements","patternList","patternArray","noteElements","noteList","note","patternSize","size","notes","noteElement","filter","n","patternsWithTracks","positions","calculateResolution","calculatePatternResolution","relevantNotes","relevantHits","fromPositions","xmlString","parser","xml2js","Parser","parseStringPromise","Audio","minResolution","empty","combined","peakValue","channel","numberOfChannels","combinedChannel","getChannelData","sample","abs","peakAmplitude","context","sounds","tempo","determineTrackLength","trackLengthSamples","totalSamples","floor","samplesPerHydrogen","createBuffer","selected","audioBuffer","audioChannel","trackPoints","toPoints","sampleStart","normalizeAudioBuffer","buffer","source","createBufferSource","loop","connect","destination","AudioContext","webkitAudioContext","AudioRequest","url","Promise","resolve","reject","request","XMLHttpRequest","responseType","status","response","Error","statusText","onerror","send","decodeAudioData","err","DRUMKITS","SoundBoard","audioSource","soundsPopulated","collatedPromises","selected_instrument","includes","dest_url","actx","make","parse","catch","fail","board","all","createMasterTrack","determineMinResolution","stop","timeoutID","clearTimeout","playPos","prevProps","prevState","snapshot","tracksAreDifferent","playBuffer","populateSounds","createAudioSource","start","startTime","currentTime","onPlaybackPositionChange","updatePlayPos","duration","beatCount","currentBeat","round","nextBeatTime","setTimeout","IconButton","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","message","patternResolution","lineResolution","str","chunkSize","RegExp","numberRestMark","lineLength","ceil","numberMarkerArray","beat","join","line","asHTML","validateConfig","beatChunkSize","formatSymbol","symbol","numericPosition","formattedLine","charAt","lineWithBeats","showBeatMark","chunkString","beatMark","lineMark","trackDict","values","defaultLineResolution","formatConfig","keys","propName","hasOwnProperty","notationLength","fill","restMark","charIndex","trackID","trackSymbol","trackInstance","patternString","lineArray","formattedLineArray","showBeatNumbers","formatLineWithMarkers","createNumberMarker","i","normalizeInstrumentsForFiguring","nInst","toLowerCase","manageAccentOrGhost","accentSymbol","ghostSymbol","outputInstruments","t0","t1","zeroLouder","mapping","activeInstruments","nonTrivialInstruments","Set","instrumentID","add","has","instrumentsRaw","symbolConfig","output","concat","worthwhileInstruments","relevantTracks","trackIsClick","collated","candidate","clickTrack","hitTrack","lastTrack","figureClickyInstruments","djembeTracks","slapArray","toneArray","bassArray","djembeMapping","figureDjembes","figureSnares","figureShakers","instrumentUsed","ThinFormControlLabel","marginLeft","marginRight","FormControlLabel","InlinableIconButton","padding","CenterTableCell","TableCell","InstrumentConfig","useState","renamingInstrument","setRenamingInstrument","nameState","setNameState","createCell","y","align","oldInstrumentIndex","findIndex","dstInstrumentIndex","oldInstrument","replacedSrcInstrument","dstInstrument","replacedInstruments","handleChange","createMatchingRow","component","scope","fontSize","removeInstrument","editSymbol","setEditSymbol","editSymbolState","setEditSymbolState","aria-labelledby","autoFocus","fullWidth","trim","extraInstrument","updatedSymbol","alert","table","currentSymbol","startEditingSymbol","baseInstrumentIndex","baseInstrumentId","targetInstrumentIndex","count","other","_sumOverlapsOfArrays","hcf","findHCF","formatResolution","totalLength","points","representPoints","arrayIndex","resolutionToUse","implicitPositions","allNotesPass"],"mappings":"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","file":"static/js/main.661fe994.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport Divider from \"@material-ui/core/Divider\";\n\nimport notation from \"./notation\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction camelToReadable(s)\n{\n  const spacedString = s.replace(/([A-Z])/g, ' $1');\n  return spacedString[0].toUpperCase() + spacedString.slice(1);\n}\n\nfunction generateDivisibleNumbers(trackLength, beatResolution)\n{\n  let options = [];\n  for( let beatTotal = beatResolution * 2; beatTotal <= trackLength; beatTotal += beatResolution )\n  {\n    if( ( trackLength % beatTotal ) === 0)\n    {\n      options.push( beatTotal );\n    }\n  }\n  return options;\n}\n\nfunction FormatSettings(props) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  // todo: change to multiple useState calls?\n\n  function tokenStateToItem(value)\n  {\n    return value === \" \" ? \"space\" : value;\n  }\n\n  function tokenItemToState(value)\n  {\n    return value === \"space\" ? \" \" : value;\n  }\n\n  const handleOptionChange = (name, value) => {\n    const updatedState = {...props.settings, [name]: value};\n    props.onChange(updatedState);\n  };\n\n  const handleCheckedChange = (event) => {\n    const updatedState = {...props.settings, [event.target.name]: event.target.checked};\n    props.onChange(updatedState);\n  };\n\n  function createOptionMenu(\n    name,\n    options,\n    itemToState = tokenItemToState,\n    stateToItem = tokenStateToItem\n  )\n  {\n    const idString = \"form-control-\" + name + \"-id\";\n    return (\n      <FormControl variant=\"filled\" className={classes.formControl} key={idString} id={idString}>\n        <InputLabel id=\"settings-option-{name}\">{name}</InputLabel>\n        <Select\n          labelId={\"settings-option-\" + name + \"-labelID\"}\n          id={\"settings-option-\" + name + \"-id\"}\n          value={stateToItem(props.settings[name])}\n          name={name}\n          onChange={(e) => handleOptionChange( e.target.name, itemToState(e.target.value))}\n        >\n          {options.map((op) => <MenuItem key={\"settings-menu-item-\" + name + \"-\" + op} value={stateToItem(op)}>{stateToItem(op)}</MenuItem>)}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  function createBoolControl(name)\n  {\n    return (\n      <FormControlLabel\n        control={<Switch checked={props.settings[name]} onChange={handleCheckedChange} name={name} />}\n        label={camelToReadable(name)}\n        key={\"switch-\"+name}\n      />\n    );\n  };\n\n  const resolutionToBeatString = (r) => ( r / props.settings.beatResolution ).toString();\n  const beatStringToResolution = (b) => props.settings.beatResolution * parseInt(b);\n  console.log(classes);\n  console.dir(classes);\n  // divisible is quite clunky, let's be more restrictive\n  // const lineLengths = generateDivisibleNumbers(props.trackLength, props.settings.beatResolution);\n  const candidateLineLengths = [ 2, 3, 4, 5, 6, 7, 8 ];\n  let lineLengths = [];\n  for( const c of candidateLineLengths )\n  {\n    const resolution = c * 48;\n    if( (resolution % props.settings.beatResolution) === 0 )\n    {\n      lineLengths.push( resolution );\n    }\n    // we permit one-over, in case that's useful for an \"uneven\" pattern\n    if(resolution > props.settings.length)\n    {\n      break;\n    }\n  }\n\n  const candidateBeatResolutions = [24, 48, 96];\n  let beatResolutions = [];\n  for( const c of candidateBeatResolutions )\n  {\n    if( (c % props.pattern.resolution) === 0 )\n    {\n      beatResolutions.push( c );\n    }\n  }\n  return (\n    <FormGroup className={classes.root}>\n      {notation.FORMAT_CONFIG_STRINGS.map( op => createOptionMenu( op[0], op[1] ) ).reduce((prev, curr) => [prev, curr])}\n      {notation.FORMAT_CONFIG_BOOLS.map( op => createBoolControl( op )).reduce((prev, curr) => [prev, curr]) }\n      <div style={{backgroundColor : \"white\", color : theme.palette.background.default}}><p> {props.pattern.name + \" Options\"} </p></div>\n      {\n        createOptionMenu(\n          \"beatResolution\",\n          beatResolutions,\n          (v) => v.toString(), // stateToItem\n          (v) => parseInt(v) // itemToState\n        )\n      }\n      {createOptionMenu(\n        \"lineResolution\",\n        lineLengths,\n        beatStringToResolution,\n        resolutionToBeatString\n      )}\n    </FormGroup>\n  );\n}\n\nconst DefaultSettings = notation.DEFAULT_FORMAT_CONFIG; \n\n\nexport { FormatSettings, DefaultSettings }\nexport default FormatSettings;","import React from 'react';\nimport clsx from 'clsx';\nimport FileImport from \"./FileImport\";\nimport Pattern from \"./Pattern\";\nimport h2 from './h2';\nimport './App.css';\n\nimport { Alert } from '@material-ui/lab';\n\n// define mui theme, including responsiveFont\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n// drawer\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Divider from \"@material-ui/core/Divider\";\n\n// notationSettings\n\nimport {FormatSettings, DefaultSettings} from \"./formatSettings\";\nimport {createInstrumentMask, InstrumentConfig} from \"./instrumentConfig\";\nimport { activeInstrumentation, figureInstruments, DEFAULT_INSTRUMENT_SYMBOLS } from \"./instrumentation\";\nimport notation from \"./notation\";\n\nimport Grid from '@material-ui/core/Grid';\n\n// load static data\nimport kuva from \"./kuva.json\";\nimport track from \"./track\";\n\nimport SoundBoard from \"./SoundBoard\";\n// mui theme config\nlet theme = createMuiTheme( { \n  palette: { \n    type: 'dark',\n    primary: { main: '#36d9be' },\n    secondary: { main: '#f50057' }\n   } \n} );\n\nclass App extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      instruments : null,\n      instrumentIndex : null,\n      instrumentMask : null,\n      patterns : null,\n      selectedPattern : null,\n      loadedFile : null,\n      settingsOpen : false,\n      patternsOpen : false,\n      formatSettings : Object.assign({}, DefaultSettings),\n      patternSettings : [],\n      progress : null\n    };\n  }\n\n  figurePatternSettings(patterns)\n  {\n    return Array.from(\n      patterns,\n      (p) => notation.guessPerPatternSettings( p.instrumentTracks )\n    );\n  }\n\n  handleFileImport(e)\n  {\n    // e = { file : , content : }\n    h2.parseHydrogenPromise(e.content).then(h => {\n      const assessedInstruments = figureInstruments(h.instruments, DEFAULT_INSTRUMENT_SYMBOLS, h.patterns);\n      const instrumentIndex = activeInstrumentation(h.instruments, h.patterns);\n      this.setState({\n        instrumentIndex : instrumentIndex,\n        instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n        instruments : assessedInstruments,\n        patterns : h.patterns,\n        selectedPattern : h.patterns.length === 0 ? null : 0,\n        loadedFile : e.file.name,\n        patternsOpen : true,\n        patternSettings : this.figurePatternSettings(h.patterns)\n      });\n    });\n  }\n\n  selectPattern(patternIndex)\n  {\n    this.setState( { selectedPattern: patternIndex } );\n  }\n\n  // todo: this is a separate component!\n  renderPattern(pattern, resolvedSettings)\n  {\n    const changeInstrumentsCallback = (instruments) => {\n      this.setState( {\n        instruments : instruments,\n        instrumentMask : createInstrumentMask(this.state.instrumentIndex, instruments)\n      } );\n    }\n\n    return (\n      <React.Fragment>\n        <Pattern \n          instruments={this.state.instruments} \n          tracks={pattern.instrumentTracks}\n          config={resolvedSettings}\n          active={this.state.progress}\n        />\n        <SoundBoard \n          instruments={this.state.instruments} \n          instrumentIndex={this.state.instrumentIndex} \n          tracks={pattern.instrumentTracks}\n        />\n        <Grid container>\n        <Grid item xs={2} />\n        <Grid item xs={8}>\n          <InstrumentConfig\n            instruments={this.state.instruments}\n            instrumentIndex={this.state.instrumentIndex}\n            instrumentMask={this.state.instrumentMask}\n            onChange={changeInstrumentsCallback}\n          />\n        </Grid>\n        <Grid item xs={2} />\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n\n\n  loadExample()\n  {\n    const createObjects = (state) => \n    {\n      // the instruments currently work as simple objects\n      // we need to create tracks!\n      for( let pattern of state.patterns )\n      {\n        let replacedTracks = {};\n        // todo: find a more compact way of doing this\n        for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n        {\n          replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n        }\n        pattern.instrumentTracks = replacedTracks;\n      }\n      return state;\n    }\n    const k = createObjects(kuva);\n    const assessedInstruments = figureInstruments(k.instruments, DEFAULT_INSTRUMENT_SYMBOLS, k.patterns);\n    const instrumentIndex = activeInstrumentation(k.instruments, k.patterns);\n    this.setState({\n      instrumentIndex : instrumentIndex,\n      instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n      instruments : assessedInstruments,\n      patterns : k.patterns,\n      selectedPattern : k.patterns.length === 0 ? null : 0,\n      loadedFile : \"kuva.example\",\n      patternsOpen : true,\n      patternSettings : this.figurePatternSettings(k.patterns)\n    });\n  }\n\n  checkMobile()\n  {\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n    return check;\n  }\n\n\n  getTrackLength(pattern)\n  {\n    let trackLength = 48;\n    for(const [id,t] of Object.entries(pattern.instrumentTracks))\n    {\n        trackLength = Math.max( trackLength, t.length() );\n    }\n    return trackLength;\n  }\n\n  getResolution(pattern)\n  {\n    let resolution = 48;\n    for(const [id,t] of Object.entries(pattern.instrumentTracks))\n    {\n        resolution = Math.min( resolution, t.resolution );\n    }\n    return resolution;\n  }\n\n  // todo: this will go away eventually, once I choose how to load a file\n  // (though it should obviously be another component anyway)\n  renderMainContent()\n  {\n    if(this.state.patterns == null || this.state.patterns.length === 0)\n    {\n      const showAlert = this.state.patterns != null && this.state.patterns.length === 0;\n      const optionalAlert = showAlert ? ( <Alert severity=\"error\">{this.state.loadedFile} contained no patterns! Try another.</Alert> )\n                                      : \"\";\n      return (\n        <React.Fragment>\n        <div>\n          <h2>tabit</h2>\n          <p>I read .h2songs and write tab</p>\n          <Button variant=\"contained\" onClick={this.loadExample.bind(this)}>See an example</Button>\n          <p>Or import your own</p>\n          <FileImport\n            onImport={this.handleFileImport.bind(this)}\n            />\n            {optionalAlert}\n        </div>\n        <div style={{ position:\"absolute\", bottom:0 }} >\n          <p>tabit relies on publicly available sound libraries listed at <a href=\"https://github.com/andrew-murray/tabit\">https://github.com/andrew-murray/tabit</a></p>\n        </div>\n        </React.Fragment>\n      );      \n    }\n    else\n    {\n      const patternToRender = this.state.patterns[this.state.selectedPattern];\n      const patternConfig = Object.assign(\n        Object.assign({}, this.state.formatSettings), // global settings\n        this.state.patternSettings[this.state.selectedPattern] // then apply per-pattern settings\n      );\n      const patternContent = this.renderPattern(patternToRender, patternConfig);\n       \n      const ignoreEvent = (event) => {\n        return event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift');\n      };\n\n      const settingsChangeCallback = (config) => {\n        let existingPatternSettings = Array.from( this.state.patternSettings );\n        let existingGlobalSettings = Object.assign( {}, this.state.formatSettings );\n        for( let [k,v] of Object.entries(config) )\n        {\n          if( k in existingPatternSettings[this.state.selectedPattern] )\n          {\n            existingPatternSettings[this.state.selectedPattern][k] = v;\n          }\n          else\n          {\n            existingGlobalSettings[k] = v;\n          }\n        }\n        this.setState( { formatSettings: existingGlobalSettings, patternSettings : existingPatternSettings } );\n      };\n\n      const handleDrawerOpen = (e) => {\n        if( ignoreEvent(e) ){ return; }\n        this.setState( {settingsOpen : true} );\n      };\n\n      const handleDrawerClose = (e) => {\n        if( ignoreEvent(e) ){ return; }\n        this.setState( {settingsOpen : false} );\n      };\n\n      const handlePatternsClose = (e) => {\n        if( ignoreEvent(e) ){ return; }\n        this.setState( { patternsOpen : false } );\n      };\n      const handlePatternsOpen = (e) => {\n        if( ignoreEvent(e) ){ return; }\n        this.setState( { patternsOpen : true } );\n      };\n\n      const classes = this.props;\n      const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n      const mobile = this.checkMobile();\n\n      const patternDetails = { name : patternToRender.name, resolution : patternToRender.resolution, \"length\" : this.getTrackLength(patternToRender) };\n\n      return (\n        <React.Fragment>\n          <div style={{display:\"flex\", width: \"95%\"}}> \n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handlePatternsOpen}\n              className={clsx({\n                [classes.hide] : !this.state.patternsOpen\n              })}\n            >\n              <ChevronRightIcon />\n            </IconButton>\n            <div className=\"content-title\" style={{flexGrow:1}}>\n            </div>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"end\"\n              onClick={handleDrawerOpen}\n              className={clsx(this.state.settingsOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n          {patternContent}\n\n        <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n          className={classes.drawer}\n          variant={ mobile ? undefined : \"persistent\" }\n          open={this.state.patternsOpen}\n          onOpen={handlePatternsOpen}\n          onClose={handlePatternsClose}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handlePatternsClose}>\n                <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <div className={classes.drawerContainer}>\n            <List>\n              {(this.state.patterns ?? []).map( (pattern, index) => (\n                <ListItem button key={\"drawer-pattern\" + index.toString()} onClick={() => this.selectPattern(index)}>\n                    <ListItemText primary={pattern.name} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </SwipeableDrawer>\n        <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n          className={classes.drawer}\n          variant={ mobile ? undefined : \"persistent\" }\n          anchor=\"right\"\n          open={this.state.settingsOpen}\n          onOpen={handleDrawerOpen}\n          onClose={handleDrawerClose}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n                <ChevronRightIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <FormatSettings\n            onChange={settingsChangeCallback}\n            settings={patternConfig}\n            pattern={patternDetails}\n            />\n        </SwipeableDrawer>\n        </React.Fragment>\n      );\n    }\n  }\n\n  render() {\n    const mainContent = this.renderMainContent();\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          {mainContent}\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// FileUpload.react.js\n\n// inspired by https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n// and https://stackoverflow.com/questions/55830414/how-to-read-text-file-in-react\n\nimport React from 'react'\n\nclass FileImport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange(e) {\n    const fileObject = e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = loadEvent => {\n      if( this.props.onImport )\n      {\n        this.props.onImport(\n          { file: fileObject, content : loadEvent.target.result}\n        );\n      }\n    }\n    reader.readAsText(fileObject);\n  }\n\n  render() {\n    return (\n      <input type=\"file\" onChange={this.onChange} />\n   )\n  }\n}\n\nexport default FileImport;\n","import React from 'react';\nimport notation from \"./notation\"\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    \"margin-bottom\": theme.spacing(2),\n    fontFamily: \"Roboto Mono\",\n    textAlign: \"left\",\n    whiteSpace:\"pre\",\n    \"& .activeNote\": {\n      color : theme.palette.secondary.main\n    }\n  },\n});\n\n// const classes = useStyles();\n\nclass Pattern extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  // remove me and relpace with me with something way better\n  // this is taken from the notation formatAsPage code\n  formatText(instruments)\n  {\n    let configOverride = this.props.config;\n    let page = [];\n    for( const [instrumentName, instrument] of instruments )\n    {\n      const asHTML = true;\n      const notationString = notation.fromInstrumentAndTrack(\n        instrument,\n        this.props.tracks,\n        asHTML,\n        configOverride\n      );\n      page.push(instrumentName);\n      for( const x of notationString.split(\"\\n\"))\n      {\n        page.push(x);\n      }\n    }\n    return page;\n  }  \n\n  render() {\n    const { classes } = this.props;\n    // todo: I think I need to turn the creation of the pattern text, into a react setting,\n    // so that I can add my light show\n    return (\n      <div className={classes.root} >\n        { this.formatText(this.props.instruments).map((x,index) => <p key={index.toString()} dangerouslySetInnerHTML={{\"__html\" : x}} />) }\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Pattern);","// h2.js\n\nimport track from \"./track\"\nimport xml2js from \"xml2js\";\nimport { calculateResolution } from \"./utilities\";\n\n// let's think about the data representation needed\n\nfunction calculatePatternResolution(pattern, size)\n{\n  const positions = Array.from(pattern.notes, note => note.position)\n  return calculateResolution(positions, size);\n}\n\nfunction parseHydrogenJs(result)\n{\n    // fixme:\n    // this parsing often assumes there's >=2 elements\n\n    // this \"zero\" here is presumably an artefact of xml --> json representation\n    const instrumentElements = result.song.instrumentList[0].instrument;\n\n    // instruments\n    // [  { id, name } ]\n    const instrumentArray = Array.from(\n      instrumentElements,\n      function(element){\n        const instrumentComponent = element.instrumentComponent[0];\n        let inst = {\n          \"id\" : parseInt(element.id), \n          \"name\" : element.name,\n           \"volume\" : parseFloat(element.volume), \n           \"muted\" : element.isMuted[0] === \"true\",\n           \"gain\" : parseFloat(element.gain),\n           \"drumkit\" : element.drumkit[0]\n        };\n        if( \"layer\" in instrumentComponent )\n        {\n          inst[\"filename\"] = instrumentComponent.layer[0].filename[0];\n        }\n        return inst;\n      }\n    );\n\n    const patternElements = result.song.patternList[0].pattern;\n    // patterns\n    // [  { name, size, notes } ]\n    const patternArray = Array.from(\n      patternElements,\n      function(element){\n        const noteElements = element.noteList[0].note;\n        const patternSize = parseInt(element.size);\n        let notes = [];\n        if( noteElements )\n        {\n          // notes \n          // [ {position, instrument(id}]\n          notes = Array.from(\n            noteElements,\n            function(noteElement){\n              return {\"position\" : parseInt(noteElement.position), \"instrument\" : parseInt(noteElement.instrument)};\n            }\n          );\n\n          // hydrogen permits you to have notes that reach past the pattern size, \n          // they then get revealed when you extend the pattern, \n          // here's an easy point to get rid of them, we don't want them to factor into any calculations\n          notes = notes.filter( n => n.position < patternSize );\n        }\n        return {\n          \"size\" : patternSize, \n          \"name\" : element.name,\n          \"notes\" : notes\n        };\n      }\n    );\n\n    // transform pattern to a managable data\n    const patternsWithTracks = Array.from(\n      patternArray,\n      function(pattern)\n      { \n        const resolution = calculatePatternResolution(pattern, pattern.size);\n        let instrumentTracks = {};\n        for( const instrument of instrumentArray )\n        {\n          const relevantNotes = pattern.notes.filter( \n            note => (note.instrument === instrument.id)\n          );\n          const relevantHits = Array.from(\n            relevantNotes,\n            note => note.position\n          );\n          instrumentTracks[ instrument.id.toString() ] = track.fromPositions( relevantHits, pattern.size, resolution);\n        }\n        pattern.resolution = resolution;\n        pattern.instrumentTracks = instrumentTracks;\n        return pattern;\n      }\n    );\n\n    return {\n      \"instruments\" : instrumentArray,\n      \"patterns\" : patternsWithTracks\n    }\n}\n\nasync function parseHydrogenPromise(xmlString)\n{\n  let parser = new xml2js.Parser();\n\n  return parser.parseStringPromise(xmlString).then(parseHydrogenJs);\n}\n\nexport default { parseHydrogenPromise };","class Audio\n{\n\n  // todo: this context should be maintained at the app top-level, rather than internal to this class\n  // todo: we replace a valid audioConext with a blank object, so that we can run tests in node\n  //       this should probably be replaced by https://github.com/audiojs/web-audio-api \n  //       and a test-suite written\n  static context = new (window.AudioContext || window.webkitAudioContext || Object)();\n\n  static determineMinResolution(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let minResolution = 48; \n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty()\n        )\n        {\n          minResolution = Math.min( minResolution, t.resolution );\n        }\n      }\n      return minResolution;\n  }\n\n  static determineTrackLength(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let trackLength = 48;\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty() \n        )\n        {\n          trackLength = Math.max( trackLength, t.length() );\n        }\n      }\n      return trackLength;\n  }\n\n  static peakAmplitude(\n    combined\n  )\n  {\n    let peakValue = 0.0;\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for( let sample = 0; sample < combinedChannel.length; ++sample)\n      {\n        peakValue = Math.max( Math.abs(combinedChannel[sample]), peakValue );\n      }\n    }\n    return peakValue;\n  }\n\n  static normalizeAudioBuffer(\n    combined\n  )\n  {\n    const peakValue = Audio.peakAmplitude( combined );\n    if( peakValue > 1.0 )\n    {\n      for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n        let combinedChannel = combined.getChannelData(channel);\n        for( let sample = 0; sample < combinedChannel.length; ++sample)\n        {\n          combinedChannel[sample] = combinedChannel[sample] / peakValue;\n        }\n      }\n    }\n    return combined;\n  }\n\n  static createMasterTrack(\n    context,\n    tracks,\n    instrumentIndex,\n    sounds,\n    tempo\n  )\n  {\n    const trackLength = Audio.determineTrackLength( instrumentIndex, tracks );\n\n\n    const beatTime =  (60.0 / tempo) * 1000;\n    const timePerHydrogen = beatTime / 48.0;\n\n\n    // let's assume we can do some simple things\n\n    const sampleRate = 44100;\n    const channels = 2;\n    const trackLengthMs = trackLength * timePerHydrogen;\n    const trackLengthSamples = trackLengthMs * sampleRate / 1000.0;\n    const totalSamples = Math.floor(trackLengthSamples);\n    const samplesPerHydrogen = Math.floor( totalSamples / trackLength );\n    const combined = context.createBuffer(channels, totalSamples, sampleRate);\n\n    // populate blank buffer with sounds\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && selected[0].id in sounds\n          && !t.empty()\n        )\n        {\n          const audioBuffer = sounds[selected[0].id];\n          // fallback to copying the mono buffer across both channels\n          const audioChannel = audioBuffer.numberOfChannels === 2 ? audioBuffer.getChannelData(channel) : audioBuffer.getChannelData(0);\n          const trackPoints = t.toPoints();\n          for( const noteStart of trackPoints )\n          {\n            const sampleStart = noteStart * samplesPerHydrogen;\n            // console.log(\"inserting sample at \" + sampleStart * (trackLengthBeats/trackLengthSamples));\n            for( let sample = 0; sample < audioBuffer.length; ++sample )\n            {\n              // add sample to mega track\n              combinedChannel[sampleStart + sample] = combinedChannel[sampleStart + sample] + audioChannel[sample];\n            }\n          }\n        }\n      }\n    }\n\n    return Audio.normalizeAudioBuffer( combined );\n  }\n\n  static createAudioSource(context, buffer)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=true;\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n}\n\nexport default Audio;","class AudioRequest {\n  static make(url) {\n    // Create new promise with the Promise() constructor;\n    // This has as its argument a function\n    // with two parameters, resolve and reject\n    return new Promise(function(resolve, reject) {\n      // Standard XHR \n      var request = new XMLHttpRequest();\n      request.open('GET', url);\n      request.responseType = \"arraybuffer\";\n      // When the request loads, check whether it was successful\n      request.onload = function() {\n        if (request.status === 200) {\n        // If successful, resolve the promise by passing back the request response\n          resolve(request.response);\n        } else {\n        // If it fails, reject the promise with a error message\n          reject(Error('Buffer didn\\'t load successfully; error code:' + request.statusText));\n        }\n      };\n      request.onerror = function() {\n      // Also deal with the case when the entire request fails to begin with\n      // This is probably a network error, so reject the promise with an appropriate message\n          reject(Error('There was a network error.'));\n      };\n      // Send the request\n      request.send();\n    });\n  }\n\n  static parse(context, response)\n  {\n    return new Promise(function(resolve,reject) {\n      // Asynchronously decode the audio file data in request.response\n      context.decodeAudioData(\n        response,\n        (buffer) => { \n          if(buffer){ resolve(buffer); }\n          else{ reject( \"buffer null\" ); }\n        },\n        (err) => { reject(err); }\n      );\n    });\n  }\n};\n\nexport default AudioRequest;","import React from 'react';\nimport Audio from \"./Audio\"\nimport AudioRequest from \"./AudioRequest\";\n\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\n\n// these are the hydrogen drumkits available by GPL/CC\n\nconst DRUMKITS = [\n  \"circAfrique v4\",\n  \"DeathMetal\",\n  \"The Black Pearl 1.0\",\n  \"GMRockKit\",\n  \"TR808EmulationKit\"\n];\n\n// TODO: This is very much not a react component, as it stands\n//   \n\nclass SoundBoard extends React.Component\n{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      audioBuffer : null,\n      audioSource : null,\n      soundsPopulated : false\n    }\n    this.sounds = {};\n  }\n\n  populateSounds()\n  {\n    let collatedPromises = []; \n    for(const [id,] of Object.entries(this.props.tracks))\n    {\n      const selected = this.props.instrumentIndex.filter(inst => inst.id.toString() === id);\n      if( selected.length > 0)\n      {\n        const selected_instrument = selected[0];\n        // todo: many hydrogen drumkits are unsupported\n        //       we should fallback to sensible defaults when the drumkit is not available\n        //       rules for {tom, stick, shaker, kick, bass}\n        if( \n          \"drumkit\" in selected_instrument && \n          \"filename\" in selected_instrument &&\n          DRUMKITS.includes(selected_instrument.drumkit) )\n        {\n\n          const filename = selected_instrument.filename.replace(\".flac\", \".wav\");\n          if(!(selected_instrument.id in this.sounds))\n          {\n            const dest_url = process.env.PUBLIC_URL + \"/wav/\" + selected_instrument.drumkit + \"/\" + filename;\n            const actx = Audio.context;\n            let sounds = this.sounds;\n            collatedPromises.push( \n              AudioRequest.make( dest_url )\n              .then( (response) =>{ return AudioRequest.parse(actx, response); } )\n              .then( (buffer) => { sounds[selected_instrument.id] = buffer } )\n              .catch( (fail) => { console.log(fail); })\n            );\n          }\n        }\n      }\n    }\n\n    const sounds = this.sounds;\n    const instrumentIndex = this.props.instrumentIndex;\n    const tracks = this.props.tracks;\n    let board = this;\n\n    Promise.all(collatedPromises).then( () => {\n      const b = Audio.createMasterTrack(\n        Audio.context,\n        tracks,\n        instrumentIndex,\n        sounds,\n        100 // hardcoded tempo\n      );\n\n      // todo: this could happen before componentDidMount!!\n      board.setState( { \n        audioBuffer : b, \n        resolution : Audio.determineMinResolution(instrumentIndex, tracks ),\n        length : Audio.determineTrackLength(instrumentIndex, tracks ),\n        soundsPopulated : true \n      } );\n    });\n  }\n\n  stop()\n  {\n    // if playing, stop\n    if(this.state.audioSource){\n      this.state.audioSource.stop(); \n      if( this.timeoutID != null )\n      {\n        clearTimeout(this.timeoutID);\n        this.timeoutID = null;\n      }\n      this.playPos = 0;\n      this.setState( { audioSource : null } );\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot)\n  {\n    // todo: this is a bit fishy, what is this comparison exactly?\n    const tracksAreDifferent = prevProps.tracks != this.props.tracks;\n    if( tracksAreDifferent )\n    {\n      this.stop();\n    }\n\n    if( tracksAreDifferent && this.state.soundsPopulated)\n    {\n      // if( !this.state.soundsPopulated ) then we already have a task in flight to do this\n      const b = Audio.createMasterTrack(\n        Audio.context,\n        this.props.tracks,\n        this.props.instrumentIndex,\n        this.sounds,\n        100 // hardcoded tempo\n      );\n\n      this.setState({\n        audioBuffer: b,\n        resolution : Audio.determineMinResolution(this.props.instrumentIndex, this.props.tracks ),\n        length : Audio.determineTrackLength(this.props.instrumentIndex, this.props.tracks )\n      });\n\n      // we were playing\n      if( prevState.audioSource )\n      {\n        this.playBuffer( b );\n      }\n    }\n  }\n\n  componentDidMount()\n  {\n    this.populateSounds();\n  }\n\n  playBuffer( b )\n  {\n\n    const source = Audio.createAudioSource( Audio.context, b );\n\n    // kick it off immediately\n    source.start();\n    this.startTime = Audio.context.currentTime;\n\n\n    const tempo = 100.0;\n    const beatTime =  (60.0 / tempo) / 4.0;\n\n    \n    const updatePlayPos = () => {\n      const currentTime = Audio.context.currentTime;\n      const playPos = ( ( currentTime - this.startTime )  / this.state.audioBuffer.duration ) % 1.0;\n\n      const beatCount = ( currentTime - this.startTime ) / beatTime;\n      const currentBeat = Math.round(beatCount);\n      const nextBeatTime = this.startTime + beatTime * ( currentBeat + 1 );\n\n      this.timeoutID = setTimeout(\n        updatePlayPos,\n        Math.floor( ( nextBeatTime - Audio.context.currentTime ) * 1000 )\n      );\n      if( this.props.onPlaybackPositionChange  )\n      {\n        this.props.onPlaybackPositionChange( playPos );\n      }\n    };\n\n    if( this.props.onPlaybackPositionChange )\n    {\n      updatePlayPos();\n    }\n    \n    this.setState( { audioSource : source} );\n  }\n  \n\n  render() {\n\n    const play = (e) => {\n      // if not playing, but buffer is ready\n      if(!this.state.audioSource && this.state.audioBuffer)\n      {\n        this.playBuffer(this.state.audioBuffer);\n      }\n    };\n\n    return (\n      <React.Fragment>\n        <div>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"play\"\n            onClick={play}\n          >\n            <PlayArrowIcon />\n          </IconButton>\n\n          <IconButton\n            color=\"secondary\"\n            aria-label=\"stop\"\n            onClick={(e)=>{this.stop();}}\n          >\n            <StopIcon />\n          </IconButton>\n        </div>\n      </React.Fragment>\n   );\n  }\n};\n\nexport default SoundBoard;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nclass notation\n{\n\n  static DEFAULT_FORMAT_CONFIG = {\n    \"restMark\" : \"-\",\n    \"beatMark\" : \"|\",\n    \"lineMark\" : \"|\",\n    \"numberRestMark\" : \"-\",\n    \"beatResolution\" : 48,\n    \"showBeatMark\" : true,\n    \"showBeatNumbers\" : true,\n    // lineResolution is typically determined on a per-pattern basis\n    // however it used to be in here, and some tests still rely on this\n    \"lineResolution\" : 48 * 8\n  };\n\n  static FORMAT_CONFIG_STRINGS = [\n    [\"restMark\",[\"-\", \".\", \" \"]],\n    [\"numberRestMark\",[\"-\", \".\", \" \"]]\n  ];\n\n  static FORMAT_CONFIG_BOOLS = [\n    \"showBeatMark\",\n    \"showBeatNumbers\"\n  ];\n\n  static validateConfig(config, patternResolution) {\n    if( patternResolution != null && ( config.beatResolution % patternResolution ) !== 0 )\n    {\n      throw new Error(\"patternResolution doesn't divide beatResolution\");\n    }\n    if( config.lineResolution <= 0 )\n    {\n      throw new Error(\"config.lineResolution must be greater than zero\");\n    }\n  }\n\n  static chunkString(str, chunkSize) {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    return str.match(new RegExp('.{1,' + chunkSize + '}', 'g'));\n  }\n\n  static createNumberMarker(numberRestMark, beatResolution, patternResolution, lineLength)\n  {\n    if( lineLength <= 0 )\n    {\n      throw new Error(\"lineLength <= 0\");\n    }\n\n    if( ( beatResolution % patternResolution ) !== 0)\n    {\n      throw new Error(\"patternResolution \" + patternResolution.toString() + \" does not divide beatResolution \" + beatResolution.toString());\n    }\n\n    let beatCount = Math.ceil(lineLength / beatResolution);\n    let numberMarkerArray = Array.from( Array(lineLength / patternResolution), e => numberRestMark );\n\n    for( let beat = 0; beat < beatCount; beat++ )\n    {\n      numberMarkerArray[ beat * ( beatResolution / patternResolution ) ] = ( (beat+1) % 10 ).toString();\n    }\n    return numberMarkerArray.join(\"\");\n  }\n\n  static formatLineWithMarkers(config, line, patternResolution, asHTML)\n  {\n    notation.validateConfig(config);\n\n    const beatChunkSize = config.beatResolution / patternResolution;\n\n    const padZero = (n, width) => {\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    };\n    const formatSymbolAsSpans = (symbol, numericPosition) => {\n      return \"<span class='note-\" + padZero(numericPosition, 4) + \"'>\" +  symbol + \"</span>\";\n    };\n\n    const formatSymbol = asHTML ? formatSymbolAsSpans : (symbol, numericPosition) => symbol;\n\n    let formattedLine = \"\";\n    for( let index = 0; index < line.length; ++ index )\n    {\n      const numericPosition = patternResolution * index;\n      formattedLine += formatSymbol(line.charAt(index), numericPosition);\n    }\n\n\n    const lineWithBeats = config.showBeatMark ? notation.chunkString(formattedLine, beatChunkSize * formatSymbol(\"X\", 0).length).join(config.beatMark) : formattedLine;\n    // note: we choose to always show the lineMarker even if it doesn't match the line resolution\n    return config.lineMark + lineWithBeats + config.lineMark;\n  }\n\n  static defaultLineResolution(\n    trackDict,\n    beatResolution\n  )\n  {\n    const instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return 48 * 8;\n    }\n    const trackLength = instrumentTracks[0].length();\n    const beatCount = trackLength / beatResolution;\n    if( beatCount <= 12 )\n    {\n      return trackLength;\n    }\n    else if( beatCount > 32 )\n    {\n      return 48 * 16; // let's just be laazeee\n    }\n    else\n    {\n      // let's just apply a simple mapping, rather than think through logics\n      const mapping = [\n        trackLength, // 13 \n        trackLength / 2, // 14\n        trackLength / 3, // 15\n        trackLength / 2, // 16\n        trackLength, // 17\n        trackLength / 3, // 18\n        trackLength, // 19\n        trackLength / 4, // 20\n        trackLength / 3, // 21\n        trackLength / 2, // 22\n        trackLength, // 23\n        trackLength / 3, // 24\n        trackLength / 5, // 25\n        trackLength, // 26\n        trackLength / 3, // 27\n        trackLength / 4, // 28\n        trackLength, // 29\n        trackLength / 6, // 30\n        trackLength, // 31\n        trackLength / 4, // 32\n      ];\n      return mapping[ beatCount - 13 ];\n    }\n  }\n\n  static guessPerPatternSettings(\n    trackDict\n  )\n  {\n    return {\n      \"lineResolution\" : notation.defaultLineResolution(trackDict, 48), // beatResolution (default)\n      \"beatResolution\" : 48 // should cover all the cases hopefully\n    };\n  }\n\n  static fromInstrumentAndTrack(\n    instrument,\n    trackDict,\n    asHTML,\n    formatConfig = {}\n  )\n  {\n    for( const propName of Object.keys(formatConfig))\n    {\n      if(!notation.DEFAULT_FORMAT_CONFIG.hasOwnProperty(propName))\n      {\n        throw new Error(\"passed unrecognised property \" + propName);\n      }\n    }\n\n    let config = Object.assign( Object.assign({}, notation.DEFAULT_FORMAT_CONFIG), formatConfig );\n\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    // turn the tracks, into one char string\n\n    const patternSize = instrumentTracks[0].length();\n    const patternResolution = instrumentTracks[0].resolution;\n    const notationLength = instrumentTracks[0].length() / instrumentTracks[0].resolution;\n    // we only format tracks to the correct resolution\n    let patternArray = Array(notationLength).fill(config.restMark);\n    for( let charIndex = 0; charIndex < patternArray.length; ++charIndex)\n    {\n      // todo: handle collisions\n      for( const [trackID, trackSymbol] of Object.entries(instrument) )\n      {\n        const trackInstance = trackDict[trackID];\n        if( trackInstance != null && trackInstance.rep[charIndex] === 1 )\n        {\n          patternArray[charIndex] = trackSymbol;\n        }\n      }\n    }\n    const patternString = patternArray.join(\"\");\n\n    // handle lines and beatMarkers\n    let lineArray = notation.chunkString( patternString, config.lineResolution / patternResolution );\n\n    let formattedLineArray = [];\n    // add numbers on the first line\n    if( config.showBeatNumbers )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( \n        config, \n        notation.createNumberMarker(config.numberRestMark, config.beatResolution, patternResolution, Math.min(config.lineResolution, patternSize)), \n        patternResolution,\n        asHTML\n      ) );\n    }\n    for( let i = 0; i < lineArray.length; ++i )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( config, lineArray[i], patternResolution, asHTML ) );\n    }\n\n    return formattedLineArray.join(\"\\n\");\n  }\n};\n\nexport default notation;","const DEFAULT_INSTRUMENT_SYMBOLS = {\n  \"Djembe Slap\" : \"S\",\n  \"Djembe Tone\" : \"t\",\n  \"Djembe Bass\" : \"O\",\n  \"Snare Ghost\" : \"-\",\n  \"Snare Accent\" : \"X\",\n  \"Shaker Ghost\" : \"x\",\n  \"Shaker Accent\" : \"X\",\n  \"Click\" : \"X\",\n  \"Bass\" : \"O\",\n  \"Tom\" : \"O\",\n  \"Default\" : \"X\"\n};\n\nfunction normalizeInstrumentsForFiguring(instruments)\n{\n  let n = [];\n  for(const inst of instruments)\n  {\n    let nInst = Object.assign({}, inst);\n    // for some reason these instruments are one-size arrays, and one id ... the track id from hydrogen\n    // this should be fixed, this doesn't make sense\n    nInst.name = nInst.name[0].toLowerCase();\n    n.push( nInst );\n  }\n  return n;\n}\n\nfunction figureDjembes(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const djembeTracks = instruments.filter( (inst) => inst.name.includes(\"djembe\") );\n  if(djembeTracks.length === 0)\n  {\n    return [];\n  }\n  else if(djembeTracks.length <= 3)\n  {\n    // let's lazily assume we have a slap, tone, bass\n    const slapArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"slap\") );\n    const toneArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"tone\") );\n    const bassArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"bass\") );\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      let parityCheck = slapArray[i] + toneArray[i] + bassArray[i];\n      // failed to figure out how djembes work return empty array\n      if(parityCheck !== 1)\n      {\n        return [];\n      }\n    }\n    let djembeMapping = {};\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      if( slapArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Slap\"];\n      }\n      else if( toneArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Tone\"];\n      }\n      else if( bassArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Bass\"];\n      }\n    }\n    return [ [ \"Djembe\", djembeMapping ] ];\n  }\n  else\n  {\n    // TODO: support more than one djembe\n    return []\n  }\n}\n\n// used by snare/shaker\nfunction manageAccentOrGhost(instrumentTracks, instrumentName, accentSymbol, ghostSymbol)\n{\n  let outputInstruments = [];\n  if(instrumentTracks.length === 2)\n  {\n    const t0 = instrumentTracks[0];\n    const t1 = instrumentTracks[1];\n    // attempt to determine ghost/accent\n    const zeroLouder = t0.volume > t1.volume || (t0.volume === t1.volume && t0.gain > t1.gain);\n    let mapping = {};\n    mapping[ t0.id.toString() ] = zeroLouder ? accentSymbol : ghostSymbol;\n    mapping[ t1.id.toString() ] = zeroLouder ? ghostSymbol : accentSymbol;\n    outputInstruments.push([instrumentName, mapping] );  \n  }\n  else // if 1 it must be an accent, if >= 3 ... I don't want to try and assign ghosts/accents\n  {\n    // I don't want to support ghost/accent here right now\n    for( const track of instrumentTracks )\n    {\n      let mapping = {};\n      mapping[ track.id.toString() ] = accentSymbol;\n      outputInstruments.push([instrumentName, mapping] );  \n    }\n  }\n  return outputInstruments;\n\n}\n\nfunction figureShakers(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  // todo: support common alternative shakers? Tambourine?\n  const shakerTracks = instruments.filter( (inst) => ( inst.name.includes(\"shaker\") ) );\n  return manageAccentOrGhost( \n    shakerTracks, \n    \"Shaker\", \n    symbolConfig[\"Shaker Accent\"],\n    symbolConfig[\"Shaker Ghost\"]\n  );\n}\n\nfunction figureSnares(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const snareTracks = instruments.filter( (inst) => ( inst.name.includes(\"snare\") ) );\n  // todo: we currently assume 2 snares is accent/ghost ... but I think it's relatively\n  // common to be 2 snare parts too, I think the algorithm here is check patterns to\n  // see if they overlap ... if the \"ghosts\" overlap the \"hits\" sometimes, assume 2 parts\n  return manageAccentOrGhost( \n    snareTracks, \n    \"Snare\", \n    symbolConfig[\"Snare Accent\"],\n    symbolConfig[\"Snare Ghost\"]\n  );\n}\n\n\nfunction activeInstruments(patterns)\n{\n  let nonTrivialInstruments = new Set();\n  for( const p of patterns )\n  {\n    for(const [instrumentID, part] of Object.entries(p.instrumentTracks))\n    {\n      if( !part.empty() )\n      {\n        nonTrivialInstruments.add(parseInt(instrumentID));\n      }\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction activeInstrumentation(instrumentIndex, patterns)\n{\n  const active = activeInstruments(patterns);\n  let nonTrivialInstruments = [];\n  for( const inst of instrumentIndex)\n  {\n    if( active.has(inst.id) )\n    {\n      nonTrivialInstruments.push( inst );\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction figureClickyInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const worthwhileInstruments = activeInstruments(patterns);\n  const relevantTracks = instruments.filter( (inst) => ( worthwhileInstruments.has(inst.id) &&\n    !inst.name.includes(\"djembe\") &&\n    ( inst.name.includes(\"click\") || \n    inst.name.includes(\"stick\") || \n    inst.name.includes(\"tom\") || \n    inst.name.includes(\"bass\") ||\n    inst.name.includes(\"kick\") )\n  ) );\n\n  const trackIsClick = Array.from(\n    relevantTracks,\n    (t) => t.name.includes(\"click\") || t.name.includes(\"stick\")\n  );\n  // we rioritise the early tracks\n  // and hope for the best\n\n  let collated = [];\n  for( let candidate = 0; candidate < Math.floor(relevantTracks.length/2); ++candidate )\n  {\n    if( trackIsClick[candidate*2] !== trackIsClick[candidate*2+1] )\n    {\n      const clickTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2] : relevantTracks[candidate*2+1];\n      const hitTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2+1] : relevantTracks[candidate*2];\n      const instrumentIsTom = hitTrack.name.includes(\"tom\");\n      const instrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n      let mapping = {};\n      mapping[hitTrack.id.toString()] = symbolConfig[instrumentName];\n      mapping[clickTrack.id.toString()] = symbolConfig[\"Click\"];\n      collated.push([instrumentName, mapping] );  \n    }\n  }\n\n  // If there's a remainder instrument and there's no click\n  if( ((relevantTracks.length % 2 ) !== 0) && !trackIsClick[ relevantTracks.length - 1 ] )\n  {\n    const lastTrack = relevantTracks[relevantTracks.length - 1];\n    const instrumentName = lastTrack.name.includes(\"tom\") ? \"Tom\" : \"Bass\";\n    let mapping = {};\n    mapping[lastTrack.id.toString()] = symbolConfig[instrumentName];\n    collated.push([instrumentName, mapping] );  \n  }\n\n  return collated;\n}\n\nfunction figureInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  let output = [];\n  output = output.concat( figureClickyInstruments( instrumentsRaw, symbolConfig, patterns ) );\n  output = output.concat( figureDjembes( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureSnares( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureShakers( instrumentsRaw, symbolConfig ) );\n\n  // we ignore track used by multiple instruments\n\n  // but attempt to cover \"instrument not recognised anywhere\"\n\n  const worthwhileInstruments = activeInstruments(patterns);\n\n  for(const inst of instrumentsRaw)\n  {\n    if( !worthwhileInstruments.has(inst.id) )\n    {\n      continue;\n    }\n    let instrumentUsed = false;\n    for( const op of output)\n    {\n      if( inst.id.toString() in op[1] ) \n      {\n        instrumentUsed = true;\n      }\n    }\n    if(instrumentUsed === false)\n    {\n      let mapping = {};\n      mapping[ inst.id.toString() ] = symbolConfig[\"Default\"];\n      output.push( [inst.name[0], mapping] );\n    }\n  }\n  \n  return output; \n}\n\nexport { activeInstrumentation, DEFAULT_INSTRUMENT_SYMBOLS, figureClickyInstruments, figureDjembes, figureShakers, figureSnares, figureInstruments };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nconst ThinFormControlLabel = withStyles({\n  root: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n})(FormControlLabel);\n\nconst InlinableIconButton = withStyles({\n  root: {\n    padding: 2\n  }\n})(IconButton);\n\nconst CenterTableCell = withStyles({\n  root: {\n    textAlign: \"center\"\n  }\n})(TableCell);\n\nfunction InstrumentConfig(props) {\n  const classes = useStyles();\n\n  const handleChange = (x,y, event) => {\n    const instrumentID = props.instrumentIndex[x].id;\n    const oldInstrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const dstInstrumentIndex = y;\n    if( oldInstrumentIndex === dstInstrumentIndex )\n    {\n      return;\n    }\n    const oldInstrument = props.instruments[oldInstrumentIndex];\n    let replacedSrcInstrument = [\n      \"\",\n      {}\n    ];\n    if( oldInstrument != null )\n    {\n      replacedSrcInstrument[0] = oldInstrument[0];\n      for( const key of Object.keys(oldInstrument[1]) )\n      {\n        if( key !== instrumentID.toString() )\n        {\n          replacedSrcInstrument[1][key] = oldInstrument[1][key];\n        }\n      }\n    }\n    let dstInstrument = [\n      props.instruments[dstInstrumentIndex][0],\n      Object.assign({}, props.instruments[dstInstrumentIndex][1] )\n    ];\n    if(oldInstrument != null )\n    {\n      dstInstrument[1][instrumentID.toString()] = oldInstrument[1][instrumentID];\n    }\n    else\n    {\n      dstInstrument[1][instrumentID.toString()] = \"X\";\n    }\n\n    let replacedInstruments = [];\n\n    for(let instrumentIndex = 0; instrumentIndex < props.instruments.length; ++instrumentIndex)\n    {\n      if( instrumentIndex === oldInstrumentIndex )\n      {\n        replacedInstruments.push( replacedSrcInstrument );\n      }\n      else if( instrumentIndex === dstInstrumentIndex )\n      {\n        replacedInstruments.push( dstInstrument )\n      }\n      else\n      {\n        replacedInstruments.push( props.instruments[instrumentIndex] );\n      }\n    }\n    props.onChange(replacedInstruments);\n  };\n\n  const removeInstrument = (y) => \n  {\n    let replacedInstruments = props.instruments.slice(0,y).concat(props.instruments.slice(y+1));\n    props.onChange(replacedInstruments);\n  };\n\n  const [renamingInstrument, setRenamingInstrument] = React.useState(-1);\n  let [nameState, setNameState] = React.useState(\"\");\n\n  const createCell = (x,y) =>\n  {\n      return ( \n        <TableCell\n          align=\"center\"\n        >\n        <ThinFormControlLabel\n          control={<Checkbox checked={props.instrumentMask[x] === y} onChange={(e) => handleChange(x,y,e)} name={x + \",\" + y.toString()} />}\n        />\n        </TableCell>\n      );\n  }\n\n  const createMatchingRow = (y) =>\n  {\n    return (\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          <Typography>{props.instruments[y][0]}</Typography>\n          <InlinableIconButton onClick={(e)=>setRenamingInstrument(y)}><EditIcon fontSize=\"small\"/></InlinableIconButton>\n          <InlinableIconButton onClick={(e)=>{removeInstrument(y);}}><ClearIcon fontSize=\"small\"/></InlinableIconButton>\n        </TableCell>\n        {[...Array(props.instrumentIndex.length).keys()].map(x=>createCell(x,y))}\n      </TableRow>\n    );\n  };\n\n  const createEditRow = () =>\n  {\n    return (\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\"><IconButton onClick={(e)=>setRenamingInstrument(props.instruments.length)} aria-label=\"add\"><AddBoxIcon/></IconButton></TableCell>\n      </TableRow>\n    );\n  };\n\n  const renameInstrument = (e)  => \n  {\n    const instrumentName = nameState.trim();\n    if( instrumentName.length > 0 )\n    {\n      if( renamingInstrument === props.instruments.length )\n      {\n        const extraInstrument = [ instrumentName, {} ];\n        let replacedInstruments = Array.from( props.instruments );\n        replacedInstruments.push(extraInstrument);\n        props.onChange(replacedInstruments);\n      }\n      else\n      {\n        let replacedInstruments = Array.from( props.instruments );\n        replacedInstruments[renamingInstrument][0] = instrumentName;\n        props.onChange(replacedInstruments);\n      }\n    }\n    // we just ignore empty string\n    setRenamingInstrument(-1);\n    setNameState(\"\");\n  };\n\n  // todo: The text field is very slow\n  // that could be because the dialog and the table content are all one component\n  // I should try and fix that first\n  // otherwise, it's just that shoving react in the middle is too slow\n\n  const [editSymbol, setEditSymbol] = React.useState(-1);\n  let [editSymbolState, setEditSymbolState] = React.useState(\"\");\n\n  const startEditingSymbol = (x) =>\n  {\n    const instrumentID = props.instrumentIndex[x].id;\n    const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const currentSymbol = props.instruments[instrumentIndex][1][instrumentID];\n    setEditSymbolState(currentSymbol);\n    setEditSymbol(x);\n  };\n\n  const changeSymbol = (e) =>\n  {\n    const updatedSymbol = editSymbolState;\n    if(updatedSymbol.length===1)\n    {\n      const instrumentID = props.instrumentIndex[editSymbol].id;\n      const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n      let replacedInstruments = Array.from(props.instruments);\n      replacedInstruments[instrumentIndex][1][instrumentID] = editSymbolState;\n      props.onChange(replacedInstruments);\n    }\n    else\n    {\n      // todo: prettier error communication?\n      alert(\n        \"You selected an invalid symbol \\\"\" + updatedSymbol + \"\\\".\\n\" + \n        \"Symbols must be precisely 1 character.\"\n      );\n    }\n    setEditSymbol(-1);\n  };\n\n  return (\n    <React.Fragment>\n      <Dialog open={renamingInstrument >= 0} onClose={(e)=>setRenamingInstrument(-1)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter instrument name\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={nameState}\n            onChange={(e)=>setNameState(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e)=>setRenamingInstrument(-1)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={renameInstrument} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={editSymbol >= 0} onClose={(e)=>setEditSymbol(-1)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter notation symbol\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={editSymbolState}\n            onChange={(e)=>setEditSymbolState(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e)=>setEditSymbol(-1)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={changeSymbol} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell> Instrument </TableCell>\n              {[...Array(props.instrumentIndex.length).keys()].map(x=><CenterTableCell><Typography>{props.instrumentIndex[x].name}</Typography><InlinableIconButton onClick={(e)=>startEditingSymbol(x)} ><EditIcon fontSize=\"small\"/></InlinableIconButton></CenterTableCell>)}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {[...Array(props.instruments.length).keys()].map(y=>createMatchingRow(y))}\n            {createEditRow()}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n\nfunction createInstrumentMask(instrumentIndex, instruments)\n{\n  let instrumentMask = Array(instrumentIndex.length);\n  for( let baseInstrumentIndex = 0; baseInstrumentIndex < instrumentIndex.length; ++baseInstrumentIndex )\n  {\n    const baseInstrumentId = instrumentIndex[baseInstrumentIndex].id;\n    for( let targetInstrumentIndex = 0; targetInstrumentIndex < instruments.length; ++targetInstrumentIndex)\n    {\n      const target = instruments[targetInstrumentIndex];\n      if(baseInstrumentId.toString() in target[1])\n      {\n        instrumentMask[baseInstrumentIndex] = targetInstrumentIndex;\n      }\n    }\n  }\n  return instrumentMask;\n}\n\nexport { createInstrumentMask, InstrumentConfig };","import { calculateResolution } from \"./utilities\"\n\n// stolen from https://studymaths.co.uk/topics/findingHCFWithJavaScript.php\nfunction findHCF(x, y) {\n\n   // If the input numbers are less than 1 return an error message.\n   if (x < 1 || y < 1) {\n    throw new Error(\"x<1 || y<1\");\n      // return \"Please enter values greater than zero.\";\n   }\n\n   // Now apply Euclid's algorithm to the two numbers.\n   while (Math.max(x, y) % Math.min(x, y) !== 0) {\n      if (x > y) {\n         x %= y;\n      }\n      else {\n         y %= x;\n      }\n   }\n   \n   // When the while loop finishes the minimum of x and y is the HCF.\n   return Math.min(x, y);\n}\n\nclass track\n{\n  \n  constructor(patternArray, resolution)\n  {\n    if(patternArray.length === 0)\n    {\n      throw new Error(\"patternArray must not be zero length\");\n    }\n    this.rep = patternArray;\n    this.resolution = resolution;\n  }\n\n  length()\n  {\n    return this.rep.length * this.resolution;\n  }\n\n  empty()\n  {\n    return this.rep.reduce( (a,b) => ( a + b ) ) === 0;\n  }\n\n  _sumOverlapsOfArrays(a,b)\n  {\n    let count = 0;\n    for( let i = 0; i < a.length; ++i)\n    {\n      if(a[i] && b[i])\n      {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  countOverlaps(other)\n  {\n    if( this.resolution === other.resolution )\n    {\n      return this._sumOverlapsOfArrays( this.rep, other.rep );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return this._sumOverlapsOfArrays( a.rep, b.rep );\n    }\n  }\n\n  static representPoints(points, resolution, size)\n  {\n    if( size <= 0 )\n    {\n      throw new Error(\"size must be greater than zero\");\n    }\n    if( size < resolution || (size % resolution) !== 0)\n    {\n      throw new Error(\"resolution must be less than size and divide it evenly\");\n    }\n    let s = new Array(size / resolution).fill(0);\n    for( const p of points )\n    {\n      if( (p % resolution) !== 0)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" at resolution \" + resolution.toString());\n      }\n      if (p >= size)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" for invalid specified size \" + size.toString());\n      }\n      const arrayIndex = p / resolution;\n      s[arrayIndex] = 1;\n    }\n    return s;\n  }\n\n  format(formatResolution)\n  {\n    // formatResolution must cleanly divide for every hit & the length of the pattern\n\n    const totalLength = (this.resolution * this.rep.length);\n    const points = this.toPoints();\n    const rep = track.representPoints(points, formatResolution, totalLength);\n    if(!rep)\n    {\n      return null;\n    }\n    return new track(\n      rep,\n      formatResolution\n    );\n  }\n\n  toPoints()\n  {\n    let points = [];\n    for( const arrayIndex of Array(this.rep.length).keys() )\n    {\n      const indicator = this.rep[arrayIndex];\n      if(indicator)\n      {\n        points.push( this.resolution * arrayIndex )\n      }\n    }\n    return points;\n  }\n\n  static fromPositions(positions, size, resolution = null)\n  {\n    const resolutionToUse = resolution ?? calculateResolution( positions, size );\n    return new track( \n      track.representPoints(positions, resolutionToUse, size), \n      resolutionToUse\n    );\n  }\n}\n\nexport default track;","// utilities.js\n\nfunction calculateResolution(positions, size)\n{\n  // hydrogen treats 48 as a beat\n  const basesToTry = [\n    48, // beat\n    24, // 1/2 beat\n    16, // 1/3 beat\n    12, // 1/4\n    8, // 1/6 \n    6, // 1/8\n    4, // 1/12\n    3, // 1/16\n    2, // 1/24\n    1 // 1/48\n  ];\n\n  // note that, fundamentally the size of the pattern is a \"keypoint\"\n  // that needs to be properly recorded by the resolution\n  const implicitPositions = positions.concat( [size] );\n\n  for( const b of basesToTry )\n  {\n    let allNotesPass = true;\n    for( const p of implicitPositions )\n    {\n      if( (p % b) !== 0 )\n      {\n        allNotesPass = false;\n        break;\n      }\n    }\n    if(allNotesPass)\n    {\n      return b;\n    }\n  }\n  throw new Error(\"Failed to predict base\");\n}\n\nexport { calculateResolution };"],"sourceRoot":""}
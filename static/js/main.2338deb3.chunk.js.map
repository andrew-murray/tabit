{"version":3,"sources":["TabitBar.js","utilities.js","formatSettings.js","PatternDrawer.js","SettingsDrawer.js","notation.js","FileImport.js","History.js","TitledDialog.js","TitleScreen.js","instrumentation.js","SongLoaders.js","Part.js","PartWithTitle.js","Pattern.js","PlaybackControls.js","RenameDialog.js","instrumentConfig.js","Audio.js","ToneController.js","SharingDialog.js","CustomTransferList.js","PatternCreateDialog.js","SongView.js","h2.js","LazySongViews.js","Routes.js","serviceWorker.js","index.js","SongStorage.js","Mobile.js","track.js"],"names":["useStyles","makeStyles","theme","root","zIndex","drawer","backgroundColor","palette","secondary","TabitBar","props","classes","placeholder","variant","position","className","patternsToggle","color","aria-label","edge","onClick","component","Link","to","noWrap","style","title","onLockUnlock","locked","onToggleCompact","compact","onShare","onDownload","settingsToggle","React","memo","calculateResolution","positions","size","implicitPositions","concat","b","allNotesPass","Error","formControl","margin","spacing","minWidth","camelToReadable","s","spacedString","replace","toUpperCase","slice","FormatSettings","tokenStateToItem","value","tokenItemToState","handleOptionChange","name","local","onChange","key","handleCheckedChange","event","target","checked","createOptionMenu","options","itemToState","stateToItem","localSetting","idString","id","width","labelId","settings","e","textAlign","map","op","lineLengths","resolution","beatResolution","pattern","length","push","includes","sort","a","beatResolutions","c","lineResolution","notation","FORMAT_CONFIG_STRINGS","reduce","prev","curr","FORMAT_CONFIG_BOOLS","control","label","v","toString","parseInt","r","DefaultSettings","DEFAULT_FORMAT_CONFIG","PatternDrawer","iOS","process","browser","test","navigator","userAgent","mobile","isMobile","disableBackdropTransition","disableDiscovery","undefined","open","onOpen","onClose","overflow","patterns","index","button","selectPattern","primary","onRemove","stopPropagation","preventDefault","fontSize","onAdd","SettingsDrawer","patternDetails","getPatternLength","anchor","onSave","Fragment","config","patternResolution","formatConfig","Object","keys","propName","hasOwnProperty","assign","str","chunkSize","match","RegExp","chunks","i","Math","min","numberRestMark","lineLength","beatCount","ceil","numberMarkerArray","Array","from","beat","line","asHTML","validateConfig","beatChunkSize","formatSymbol","symbol","numericPosition","n","join","formattedLine","charAt","lineWithBeats","showBeatMark","chunkString","beatMark","lineMark","trackDict","instrumentTracks","values","trackLength","defaultLineResolution","instrument","restMark","patternSize","patternArray","fill","charIndex","entries","trackID","trackSymbol","trackInstance","rep","resolveConfig","formatPatternString","patternString","lineArray","formattedLineArray","showBeatNumbers","formatLineWithMarkers","createNumberMarker","t","max","trackArray","k","clone","fromEntries","patternA","patternB","track","optimalResolution","totalSize","instrumentKeys","Set","combine","FileImport","hiddenFileInput","createRef","fileObject","files","reader","FileReader","onload","loadEvent","onImport","file","content","result","readAsText","this","accept","buttonProps","Button","current","click","type","hidden","ref","Component","height","maxWidth","maxHeight","History","items","data","Paper","Typography","Divider","List","x","ListItem","ListItemText","Date","date","toLocaleDateString","renderRow","TitledDialog","Dialog","DialogTitle","DialogContent","DialogContentText","children","DialogActions","TitleScreen","state","error","songHistory","componentDidMount","setState","SongStorage","history","controls","pathname","filename","song","licenseBanner","href","withStyles","bottom","modal","display","alignItems","justifyContent","paper","background","border","boxShadow","shadows","padding","DEFAULT_INSTRUMENT_SYMBOLS","normalizeInstrumentsForFiguring","instruments","inst","nInst","toLowerCase","manageAccentOrGhost","instrumentName","accentSymbol","ghostSymbol","outputInstruments","t0","t1","zeroLouder","volume","gain","mapping","activeInstruments","nonTrivialInstruments","p","instrumentID","empty","add","defaultSymbolForSingleInstrument","symbolConfig","lowerName","figureInstruments","instrumentsRaw","output","worthwhileInstruments","relevantTracks","filter","has","trackIsClick","tomIndex","bassIndex","collated","candidate","floor","clickTrack","hitTrack","instrumentIsTom","rawInstrumentName","lastTrack","figureClickyInstruments","djembeTracks","slapArray","toneArray","bassArray","djembeMapping","figureDjembes","figureSnares","figureShakers","instrumentUsed","createInstrumentMask","instrumentIndex","instrumentMask","baseInstrumentIndex","baseInstrumentId","targetInstrumentIndex","guessShortName","substr","SongData","sourceFile","formatSettings","patternSettings","LoadJSON","jsonData","fromHydrogen","Promise","resolve","patternData","replacedTracks","trackData","patternWithTracks","createPatternsFromData","upgradeOldInstruments","prepHydrogenVolumes","active","activeInstrumentation","guessPerPatternSettings","figurePatternSettings","moduleExports","LoadExample","kuva","styles","fontFamily","PreTypography","DensePreTypography","Part","tracks","patternLines","chunkArray","beatsPerLine","linesWithBeats","lineIndices","Typo","dense","formatLine","startBeats","prefix","beats","makeClasses","sb","numberLine","beatChunks","prefixIndent","repeat","lineIndex","PartWithTitle","Title","headingLevel","defaultLevel","safeHeading","getTitleType","Pattern","instrumentIndices","shortNameLengths","shortName","maxShortNameLength","tracksForResolution","Map","instrumentIDs","primaryResolution","instrumentIsCompatible","instID","compatible","format","compactDisplay","ActivePattern","patternTime","prevBeat","force","prevElements","getElementsByClassName","classList","remove","elements","prevProps","prevState","snapshot","changePatternTime","calculateBeat","nextProps","nextState","whiteSpace","paddingLeft","paddingRight","main","PlaybackControls","tooltipMsg","playTooltip","disabled","stopTooltip","Tooltip","IconButton","onPlay","disableRipple","disableFocusRipple","onStop","Grid","container","item","xs","Slider","defaultValue","step","tempo","onTempoChange","valueLabelDisplay","RenameDialog","currentValue","cancel","onCancel","confirm","currentName","trim","alert","aria-labelledby","instruction","TextField","fullWidth","onKeyDown","keyCode","autoFocus","ThinFormControlLabel","marginLeft","marginRight","FormControlLabel","InlinableIconButton","NoDividerCenterTableCell","borderBottom","paddingBottom","TableCell","CenterTableCell","VolumeWidget","useState","setActive","sliderValue","setSliderValue","muted","setMuted","sliderRef","useRef","FixedHeightStylings","top","SliderStyles","IconStyles","time","onClickNHold","start","dispatchEvent","nativeEvent","onEnd","onMuteEvent","orientation","setVolume","RawInstrumentEditDialog","currentSymbol","InstrumentTable","setOpen","createCell","y","align","Checkbox","oldInstrumentIndex","findIndex","dstInstrumentIndex","oldInstrument","replacedSrcInstrument","dstInstrument","replacedInstruments","handleChange","createMatchingRow","TableRow","scope","onEditRow","editRow","onRemoveRow","removeRow","Table","table","TableHead","showAdvanced","onEditColumn","editColumn","onVolumeEvent","TableBody","onAddRow","InstrumentConfig","useTheme","editingSymbol","setEditingSymbol","renamingInstrument","setRenamingInstrument","endEditingSymbol","resolvedSymbol","extraInstrument","renameInstrument","getSymbol","TableContainer","removeInstrument","Audio","window","AudioContext","webkitAudioContext","minResolution","combined","peakValue","channel","numberOfChannels","combinedChannel","getChannelData","sample","abs","peakAmplitude","context","sounds","determineTrackLength","trackLengthSamples","totalSamples","samplesPerHydrogen","createBuffer","selected","audioBuffer","audioChannel","trackPoints","toPoints","sampleStart","normalizeAudioBuffer","buffer","source","createBufferSource","loop","playbackRate","connect","destination","AUDIO_DELAY","setAudioDelay","DRUMKITS","convertNormalToAudible","pow","ToneController","onTimeChange","latencyHint","onLoadError","patternNames","patternNameSet","Tone","samples","currentPattern","toDestination","onPatternTimeChange","bpm","sampleCount","expectedSampleCount","failures","determineMinResolution","populateSamples","currentPatternName","sortedFailures","drumkit","noMatch","otherDrumkit","otherName","createSortedUnique","plural","message","failureIndex","stop","selectedInstrument","clampedVolume","player","mute","relativeUrl","drumkitName","chooseAppropriateUrlForInstrument","patternLength","callback","sampleSource","samplesReady","indexFromStart","sampleData","schedule","notePosition","createSequenceCallback","seq","_part","sequences","createSequenceForPattern","patternName","oldPatternName","oldLength","timeFromBarEnd","loopEnd","toSeconds","queueTransition","nextSequence","enableNewTrack","sequence","setLoopPoints","scheduleOnce","then","now","set","SharingDialog","aria-describedby","url","copy","TransferList","selectedItems","setChecked","customList","checkable","role","itemIndex","newChecked","handleChecked","ListItemIcon","tabIndex","inputProps","justify","direction","newValues","PatternCreateDialog","setPatternName","patternRecipe","setPatternRecipe","closeAndCommit","commit","recipe","patternChoices","invalidPatternName","indexOf","Box","flexDirection","helperText","alignSelf","makeResolvedSettings","memoizeOne","globalSettings","resolvedSettings","SongView","selectedPattern","songData","settingsOpen","patternsOpen","sharingDialogOpen","patternCreateDialogOpen","errorAlert","removePattern","audio","setError","indices","ix","newPatterns","updatedSongData","samePatternIndex","boundedPatternIndex","createController","addCombinedPattern","clonePattern","recipeIndex","combinePatterns","changeInstruments","sendVolumeEvent","setVolumeForInstrument","setMutedForInstrument","handleSettingsChange","change","updatedSettings","handlePatternsToggle","handleSettingsToggle","patternIndex","setActivePattern","getExportState","songID","permanentUrl","origin","catch","err","closePatternCreateDialog","openPatternCreateDialog","onHideView","closeSharingDialog","play","onSetTempo","setTempo","onToggleLocked","nowLocked","nowCompact","addEventListener","teardown","nullCheck","currentBeatResolution","currentBeat","nextBeat","removeEventListener","songName","version","patternSpecifics","instrumentConfigColumns","Toolbar","Snackbar","severity","autoHideDuration","Alert","AlertTitle","split","overflowX","flexGrow","calculatePatternResolution","notes","note","parseHydrogenJs","instrumentElements","instrumentList","instrumentArray","element","instrumentComponent","parseFloat","isMuted","layer","patternElements","patternList","noteElements","noteList","noteElement","patternsWithTracks","relevantNotes","relevantHits","fromPositions","virtualPatternList","virtualPatternGroups","patternToRelated","virtualGroup","rootPatternName","relatedPatterns","virtual","iteration","expandedObject","objectHasExpanded","related","expandedNodeSet","node","relatedPatternSet","rootPattern","find","patternToMergeName","patternToMerge","merged","aggregate","copiedTrack","xmlString","parser","xml2js","Parser","parseStringPromise","parseHydrogenPromise","WaitingMessage","CircularProgress","ExampleSongView","SongLoaders","SongNameFromFile","FileImportSongView","navigateHomeWithError","h2","h","JSON","parse","SongStorageSongView","loadedFile","LocalStorageSongView","matches","hash","decodeState","Routes","prefersDarkMode","useMediaQuery","responsiveFontSizes","useMemo","createMuiTheme","basename","ThemeProvider","CssBaseline","exact","path","render","location","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","console","encodeState","js","stringify","zlib","deflateSync","binaryBuffer","Buffer","decompressedString","inflateSync","JSON_BIN_API_BINS","JSON_BIN_API","put","exportState","binShort","stateToShare","metadata","method","headers","private","body","fetch","response","ok","json","get","binID","getLocalHistory","storage","setItem","removeItem","DOMException","code","storageAvailable","jsonHistory","localStorage","getItem","saveToLocalHistory","stateHash","relevantHistory","historyEntry","restrictedHistory","download","destFilename","blob","Blob","saveAs","vendor","opera","some","toMatchItem","count","other","_sumOverlapsOfArrays","hcf","formatResolution","pat","totalLength","points","representPoints","arrayIndex","findHCF","resolutionToUse","pointsA","sizeA","pointsB","allPoints"],"mappings":"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","file":"static/js/main.2338deb3.chunk.js","sourcesContent":["import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ShareIcon from '@material-ui/icons/Share';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: theme.palette.secondary\n  }\n}));\n\nfunction TabitBar(props) {\n  const classes = useStyles(props);\n  // we need to render \"null\" appbars for spacing purposes\n  // support them here, so that we can maintain layout parity in one place\n  if(props.placeholder)\n  {\n\n    return (\n\n      // <AppBar position=\"fixed\" // todo: I'd like to include the AppBar,\n      // className={classes.root}> // but it doesn't have the correct effect#\n        <Toolbar variant=\"dense\">\n        </Toolbar>\n      // </AppBar>\n    );\n  }\n\n  return (\n    <AppBar position=\"fixed\"\n      className={classes.root}\n    >\n\n      <Toolbar variant=\"dense\">\n        {props.patternsToggle && <IconButton\n          color=\"inherit\"\n          aria-label=\"open pattern list\"\n          edge=\"start\"\n          onClick={props.patternsToggle}\n          >\n          <MenuIcon />\n        </IconButton>\n        }\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"home\"\n          edge=\"start\"\n          component={Link}\n          to='/'\n          >\n          <HomeIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap style={{\"flexGrow\": 1, \"textOverflow\": \"ellipsis\"}}>\n          {props.title}\n        </Typography>\n        {props.onLockUnlock && <IconButton\n          color=\"inherit\"\n          aria-label={props.locked ? \"unlock\" : \"lock\"}\n          edge=\"start\"\n          onClick={props.onLockUnlock}\n          >\n          {props.locked ? <LockIcon /> : <LockOpenIcon />}\n        </IconButton>\n        }\n        {props.onToggleCompact && <IconButton\n          color=\"inherit\"\n          aria-label={props.compact ? \"toggle-to-dense-view\" : \"toggle-to-compact-view\"}\n          edge=\"start\"\n          onClick={props.onToggleCompact}\n          >\n          {props.compact ? <ViewListIcon /> : <CalendarViewDayIcon />}\n        </IconButton>\n        }\n        {props.onShare && <IconButton\n          color=\"inherit\"\n          aria-label=\"share\"\n          edge=\"start\"\n          onClick={props.onShare}\n          >\n          <ShareIcon />\n        </IconButton>\n        }\n        {props.onDownload && <IconButton\n          color=\"inherit\"\n          aria-label=\"download\"\n          edge=\"start\"\n          onClick={props.onDownload}\n          >\n          <SaveAltIcon />\n        </IconButton>\n        }\n        {props.settingsToggle && <IconButton\n          color=\"inherit\"\n          aria-label=\"open settings\"\n          edge=\"end\"\n          onClick={props.settingsToggle}\n        >\n          <SettingsIcon />\n        </IconButton>\n        }\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default React.memo(TabitBar);\n","// utilities.js\n\nfunction calculateResolution(positions, size)\n{\n  // hydrogen treats 48 as a beat\n  const basesToTry = [\n    48, // beat\n    24, // 1/2 beat\n    16, // 1/3 beat\n    12, // 1/4\n    8, // 1/6\n    6, // 1/8\n    4, // 1/12\n    3, // 1/16\n    2, // 1/24\n    1 // 1/48\n  ];\n\n  // note that, fundamentally the size of the pattern is a \"keypoint\"\n  // that needs to be properly recorded by the resolution\n  const implicitPositions = positions.concat( [size] );\n\n  for( const b of basesToTry )\n  {\n    let allNotesPass = true;\n    for( const p of implicitPositions )\n    {\n      if( (p % b) !== 0 )\n      {\n        allNotesPass = false;\n        break;\n      }\n    }\n    if(allNotesPass)\n    {\n      return b;\n    }\n  }\n  throw new Error(\"Failed to predict base\");\n}\n\nexport { calculateResolution };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport notation from \"./notation\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nfunction camelToReadable(s)\n{\n  const spacedString = s.replace(/([A-Z])/g, ' $1');\n  return spacedString[0].toUpperCase() + spacedString.slice(1);\n}\n\nfunction FormatSettings(props) {\n  const classes = useStyles(props);\n  // todo: change to multiple useState calls?\n\n  function tokenStateToItem(value)\n  {\n    return value === \" \" ? \"space\" : value;\n  }\n\n  function tokenItemToState(value)\n  {\n    return value === \"space\" ? \" \" : value;\n  }\n\n  // currently the only options which are pattern-local\n  // are supported by handleOptionChange\n\n  const handleOptionChange = (name, value, local) => {\n    // const updatedState = {...props.settings, [name]: value};\n    props.onChange({key: name, value: value, local: local});\n  };\n\n  const handleCheckedChange = (event) => {\n    // const updatedState = {...props.settings, [event.target.name]: event.target.checked};\n    props.onChange({key: event.target.name, value: event.target.checked, local: false});\n  };\n\n  function createOptionMenu(\n    name,\n    options,\n    itemToState = tokenItemToState,\n    stateToItem = tokenStateToItem,\n    localSetting = false\n  )\n  {\n    const idString = \"form-control-\" + name + \"-id\";\n    return (\n      <ListItem variant=\"filled\" className={classes.formControl} key={idString} id={idString} style={{width:\"75%\"}}>\n        <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"settings-option-{name}\">{name}</InputLabel>\n          <Select\n            labelId={\"settings-option-\" + name + \"-labelID\"}\n            id={\"settings-option-\" + name + \"-id\"}\n            value={stateToItem(props.settings[name])}\n            name={name}\n            onChange={(e) => handleOptionChange( e.target.name, itemToState(e.target.value), localSetting)}\n            style={{width:\"75%\", textAlign: \"center\"}}\n          >\n            {options.map((op) => <MenuItem key={\"settings-menu-item-\" + name + \"-\" + op} value={stateToItem(op)} style={{textAlign: \"center\"}}>{stateToItem(op)}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </ListItem>\n    );\n  };\n\n  function createBoolControl(name)\n  {\n    return (\n      <ListItem key={\"form-control-\" + name}>\n        <FormControlLabel\n          control={<Switch checked={props.settings[name]} onChange={handleCheckedChange} name={name} />}\n          label={camelToReadable(name)}\n          key={\"switch-\"+name}\n        />\n      </ListItem>\n    );\n  };\n\n  const resolutionToBeatString = (r) => ( r / props.settings.beatResolution ).toString();\n  const beatStringToResolution = (b) => props.settings.beatResolution * parseInt(b);\n\n  const candidateLineLengths = [ 2, 3, 4, 5, 6, 7, 8, 14, 16, 32 ];\n  let lineLengths = [];\n  for( const c of candidateLineLengths )\n  {\n    const resolution = c * 48;\n    if( (resolution % props.settings.beatResolution) === 0\n      && (resolution <= props.pattern.length)\n     )\n    {\n      lineLengths.push( resolution );\n    }\n  }\n\n  if( !lineLengths.includes( props.pattern.length ) )\n  {\n    lineLengths.push( props.pattern.length );\n    lineLengths.sort((a, b)=>{return a-b});\n  }\n\n  const candidateBeatResolutions = [24, 36, 48, 72, 96];\n  let beatResolutions = [];\n  for( const c of candidateBeatResolutions )\n  {\n    if( (c % props.pattern.resolution) === 0 && ( props.settings.lineResolution % c ) === 0)\n    {\n      beatResolutions.push( c );\n    }\n  }\n  return (\n    <FormGroup className={classes.root}>\n      <List>\n        {notation.FORMAT_CONFIG_STRINGS.map( op => createOptionMenu( op[0], op[1] ) ).reduce((prev, curr) => [prev, curr])}\n        {notation.FORMAT_CONFIG_BOOLS.map( op => createBoolControl( op )).reduce((prev, curr) => [prev, curr]) }\n          <ListSubheader>{\"Pattern \" + props.pattern.name + \" Options\"} </ListSubheader>\n          {\n            createOptionMenu(\n              \"beatResolution\",\n              beatResolutions,\n              (v) => v.toString(), // stateToItem\n              (v) => parseInt(v), // itemToState\n              true\n            )\n          }\n          {createOptionMenu(\n            \"lineResolution\",\n            lineLengths,\n            beatStringToResolution,\n            resolutionToBeatString,\n            true // localSetting\n          )}\n        </List>\n      </FormGroup>\n  );\n}\n\nconst DefaultSettings = notation.DEFAULT_FORMAT_CONFIG;\n\n\nexport { FormatSettings, DefaultSettings }\nexport default FormatSettings;\n","import React from \"react\";\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport TabitBar from \"./TabitBar\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { isMobile } from \"./Mobile\";\n\nfunction PatternDrawer(props)\n{\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const mobile = isMobile();\n\n  // SwipableDawer has undesirable behaviour,\n  // (a) persistent isn't handled properly\n  // (b) onOpen of swipable drawer, is only called on swipe events\n  // I can't find convenient callbacks to hook into that are called \"when the component exists\"\n  // (components are deleted when the swipable drawer is closed)\n  // I think my approach would have to involve modifying the content in the swipeable drawer in\n  // a somewhat complex way sadly - not yet\n\n  return (\n    <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n    variant={mobile ? undefined : \"persistent\"}\n    open={props.open}\n    onOpen={props.onOpen}\n    onClose={props.onClose}\n    >\n      {!mobile ? <TabitBar placeholder /> : null }\n      <div\n        style={{overflow: \"auto\"}}\n      >\n        <List>\n          {(props.patterns ?? []).map( (pattern, index) => (\n            <ListItem\n              button\n              key={\"drawer-pattern\" + index.toString()}\n              onClick={() => { if(props.selectPattern){props.selectPattern(index);} }}\n            >\n              <ListItemText primary={pattern.name} />\n              {props.onRemove &&\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge=\"end\"\n                    size=\"small\"\n                    onClick={(event)=>{\n                      event.stopPropagation();\n                      event.preventDefault();\n                      props.onRemove(index);}\n                    }\n                  >\n                    <ClearIcon fontSize=\"small\"/>\n                  </IconButton>\n                </ListItemSecondaryAction>\n              }\n            </ListItem>\n          ))}\n          {props.onAdd &&\n            <ListItem\n              key={\"drawer-add-button\"}\n            >\n              <ListItemText />\n              <ListItemSecondaryAction>\n                <IconButton\n                  size=\"small\"\n                  edge=\"end\"\n                  onClick={()=>{props.onAdd();}}\n                  aria-label=\"add\"\n                >\n                  <AddBoxIcon\n                    size=\"small\"\n                    />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n        </List>\n      </div>\n    </SwipeableDrawer>\n  );\n};\n\n// open, onOpen, onClose, patterns, selectPattern\n\nexport default React.memo(PatternDrawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport notation from \"./notation\"\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport Divider from \"@material-ui/core/Divider\";\nimport {FormatSettings} from \"./formatSettings\";\nimport { isMobile } from \"./Mobile\";\nimport TabitBar from \"./TabitBar\";\n\nfunction SettingsDrawer(props)\n{\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const mobile = isMobile();\n\n  const patternDetails = props.pattern ? {\n    name : props.pattern.name,\n    resolution : props.pattern.resolution,\n    length: notation.getPatternLength(props.pattern)\n  } : null;\n\n  const noop = () => {};\n  return (\n    <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n      className={props.className}\n      variant={ mobile ? undefined : \"persistent\" }\n      anchor={props.anchor}\n      open={props.open}\n      onOpen={props.onOpen}\n      onClose={props.onClose}\n      style={{overflow: \"hidden\"}}\n    >\n      {!mobile ? <TabitBar placeholder /> : null }\n      {patternDetails &&\n        <FormatSettings\n          onChange={props.onChange ??  noop}\n          settings={props.settings}\n          pattern={patternDetails}\n          />\n      }\n      {patternDetails && props.onSave &&\n        <React.Fragment>\n          <Button\n            onClick={(e) => { props.onSave(); } }\n          >Download</Button>\n          <Divider />\n        </React.Fragment>\n      }\n      {patternDetails && props.onShare &&\n        <Button\n          onClick={(e) => { props.onShare(); } }\n        >Share</Button>\n      }\n    </SwipeableDrawer>\n  );\n}\n\nSettingsDrawer.propTypes = {\n  onSave: PropTypes.func,\n  onShare: PropTypes.func,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  anchor: PropTypes.oneOf(['left', 'right']).isRequired,\n  settings: PropTypes.object,\n  className: PropTypes.string\n}\n\nexport default React.memo(SettingsDrawer);\n","import track from \"./track\";\n\nclass notation\n{\n\n  static DEFAULT_FORMAT_CONFIG = {\n    \"restMark\" : \"-\",\n    \"beatMark\" : \"|\",\n    \"lineMark\" : \"|\",\n    \"numberRestMark\" : \"-\",\n    \"beatResolution\" : 48,\n    \"showBeatMark\" : true,\n    \"showBeatNumbers\" : true,\n    \"compactDisplay\" : false,\n    // lineResolution is typically determined on a per-pattern basis\n    // however it used to be in here, and some tests still rely on this\n    \"lineResolution\" : 48 * 8\n  };\n\n  static FORMAT_CONFIG_STRINGS = [\n    [\"restMark\",[\"-\", \".\", \" \"]],\n    [\"numberRestMark\",[\"-\", \".\", \" \"]]\n  ];\n\n  static FORMAT_CONFIG_BOOLS = [\n    \"showBeatMark\",\n    \"showBeatNumbers\"\n  ];\n\n  static validateConfig(config, patternResolution) {\n    if( patternResolution != null && ( config.beatResolution % patternResolution ) !== 0 )\n    {\n      throw new Error(\"patternResolution doesn't divide beatResolution\");\n    }\n    if( config.lineResolution <= 0 )\n    {\n      throw new Error(\"config.lineResolution must be greater than zero\");\n    }\n  }\n\n  static resolveConfig(formatConfig)\n  {\n    for( const propName of Object.keys(formatConfig))\n    {\n      if(!notation.DEFAULT_FORMAT_CONFIG.hasOwnProperty(propName))\n      {\n        throw new Error(\"passed unrecognised property \" + propName);\n      }\n    }\n\n    return Object.assign( Object.assign({}, notation.DEFAULT_FORMAT_CONFIG), formatConfig );\n  }\n\n  static chunkString(str, chunkSize) {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    return str.match(new RegExp('.{1,' + chunkSize + '}', 'g'));\n  }\n\n  static chunkArray(a, chunkSize)\n  {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    let chunks = [];\n    for( let i = 0; i < a.length; i += chunkSize )\n    {\n      chunks.push( a.slice(i, Math.min( i + chunkSize, a.length) ) );\n    }\n    return chunks;\n  }\n\n  static createNumberMarker(numberRestMark, beatResolution, patternResolution, lineLength)\n  {\n    if( lineLength <= 0 )\n    {\n      throw new Error(\"lineLength <= 0\");\n    }\n\n    if( ( beatResolution % patternResolution ) !== 0)\n    {\n      throw new Error(\"patternResolution \" + patternResolution.toString() + \" does not divide beatResolution \" + beatResolution.toString());\n    }\n\n    let beatCount = Math.ceil(lineLength / beatResolution);\n    let numberMarkerArray = Array.from( Array(lineLength / patternResolution), e => numberRestMark );\n\n    for( let beat = 0; beat < beatCount; beat++ )\n    {\n      numberMarkerArray[ beat * ( beatResolution / patternResolution ) ] = ( (beat+1) % 10 ).toString();\n    }\n    return numberMarkerArray;\n  }\n\n  static formatLineWithMarkers(config, line, patternResolution, asHTML)\n  {\n    notation.validateConfig(config);\n\n    const beatChunkSize = config.beatResolution / patternResolution;\n\n    const padZero = (n, width) => {\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    };\n    const formatSymbolAsSpans = (symbol, numericPosition) => {\n      return \"<span class='note-\" + padZero(numericPosition, 4) + \"'>\" +  symbol + \"</span>\";\n    };\n\n    const formatSymbol = asHTML ? formatSymbolAsSpans : (symbol, numericPosition) => symbol;\n\n    let formattedLine = \"\";\n    for( let index = 0; index < line.length; ++ index )\n    {\n      const numericPosition = patternResolution * index;\n      formattedLine += formatSymbol(line.charAt(index), numericPosition);\n    }\n\n\n    const lineWithBeats = config.showBeatMark ? notation.chunkString(formattedLine, beatChunkSize * formatSymbol(\"X\", 0).length).join(config.beatMark) : formattedLine;\n    // note: we choose to always show the lineMarker even if it doesn't match the line resolution\n    return config.lineMark + lineWithBeats + config.lineMark;\n  }\n\n  static defaultLineResolution(\n    trackDict,\n    beatResolution\n  )\n  {\n    const instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return 48 * 8;\n    }\n    const trackLength = instrumentTracks[0].length();\n    const beatCount = trackLength / beatResolution;\n    if( beatCount <= 12 )\n    {\n      return trackLength;\n    }\n    else if( beatCount > 32 )\n    {\n      return 48 * 16; // let's just be laazeee\n    }\n    else\n    {\n      // let's just apply a simple mapping, rather than think through logics\n      const mapping = [\n        trackLength, // 13\n        trackLength / 2, // 14\n        trackLength / 3, // 15\n        trackLength / 2, // 16\n        trackLength, // 17\n        trackLength / 3, // 18\n        trackLength, // 19\n        trackLength / 4, // 20\n        trackLength / 3, // 21\n        trackLength / 2, // 22\n        trackLength, // 23\n        trackLength / 3, // 24\n        trackLength / 5, // 25\n        trackLength, // 26\n        trackLength / 3, // 27\n        trackLength / 4, // 28\n        trackLength, // 29\n        trackLength / 6, // 30\n        trackLength, // 31\n        trackLength / 4, // 32\n      ];\n      return mapping[ beatCount - 13 ];\n    }\n  }\n\n  static guessPerPatternSettings(\n    trackDict\n  )\n  {\n    return {\n      \"lineResolution\" : notation.defaultLineResolution(trackDict, 48), // beatResolution (default)\n      \"beatResolution\" : 48 // should cover all the cases hopefully\n    };\n  }\n\n  static formatPatternString(\n    instrument,\n    trackDict,\n    restMark\n  )\n  {\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    const patternSize = instrumentTracks[0].length();\n    const patternResolution = instrumentTracks[0].resolution;\n    const notationLength = patternSize / patternResolution;\n\n    let patternArray = Array(notationLength).fill(restMark);\n    for( let charIndex = 0; charIndex < patternArray.length; ++charIndex)\n    {\n      // todo: handle collisions\n      for( const [trackID, trackSymbol] of Object.entries(instrument) )\n      {\n        const trackInstance = trackDict[trackID];\n        if( trackInstance != null && trackInstance.rep[charIndex] === 1 )\n        {\n          patternArray[charIndex] = trackSymbol;\n        }\n      }\n    }\n    return patternArray;\n  }\n\n  static fromInstrumentAndTrack(\n    instrument,\n    trackDict,\n    asHTML,\n    formatConfig = {}\n  )\n  {\n    const config = notation.resolveConfig(formatConfig);\n\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    // turn the tracks, into one char string\n    const patternArray = notation.formatPatternString( instrument, trackDict, config.restMark );\n    const patternString = patternArray.join(\"\");\n    const patternResolution = instrumentTracks[0].resolution;\n    const patternSize = instrumentTracks[0].length();\n\n    // handle lines and beatMarkers\n    let lineArray = notation.chunkString( patternString, config.lineResolution / patternResolution );\n\n    let formattedLineArray = [];\n    // add numbers on the first line\n    if( config.showBeatNumbers )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers(\n        config,\n        notation.createNumberMarker(config.numberRestMark, config.beatResolution, patternResolution, Math.min(config.lineResolution, patternSize)).join(\"\"),\n        patternResolution,\n        asHTML\n      ) );\n    }\n    for( let i = 0; i < lineArray.length; ++i )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( config, lineArray[i], patternResolution, asHTML ) );\n    }\n\n    return formattedLineArray.join(\"\\n\");\n  }\n\n  static getPatternLength(pattern)\n  {\n    let trackLength = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        trackLength = Math.max( trackLength, t.length() );\n    }\n    return trackLength;\n  }\n\n  static getPatternResolution(pattern)\n  {\n    let resolution = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        resolution = Math.min( resolution, t.resolution );\n    }\n    return resolution;\n  }\n\n  static clonePattern(name, pattern)\n  {\n    const trackArray = Object.keys(pattern.instrumentTracks).map(\n      k => [k, pattern.instrumentTracks[k].clone()]\n    );\n    return {\n      size: pattern.size,\n      name: name,\n      resolution: pattern.resolution,\n      instrumentTracks: Object.fromEntries(trackArray)\n    };\n  }\n\n  static combinePatterns(name, patternA, patternB)\n  {\n    /* pattern = {\n      size: int,\n      name: string,\n      notes: ...redundant,\n      resolution: int,\n      instrumentTracks: {\n        instrumentID (str) : track = { rep, resolution }\n      }\n    } */\n\n    const resolution = track.optimalResolution( patternA.resolution, patternB.resolution );\n    const totalSize = patternA.size + patternB.size;\n    const instrumentKeys = new Set( [...Object.keys(patternA.instrumentTracks), ...Object.keys(patternA.instrumentTracks)] );\n    let instrumentTracks = {};\n    for(const k of instrumentKeys)\n    {\n      instrumentTracks[k] = track.combine(\n        patternA.instrumentTracks[k],\n        patternB.instrumentTracks[k],\n        totalSize,\n        resolution\n      );\n    }\n\n    return {\n      resolution: resolution,\n      size: totalSize,\n      name: name,\n      instrumentTracks: instrumentTracks\n    };\n  }\n\n};\n\nexport default notation;\n","// FileUpload.react.js\n\n// inspired by https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n// and https://stackoverflow.com/questions/55830414/how-to-read-text-file-in-react\n\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\n\nclass FileImport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.hiddenFileInput = React.createRef();\n  }\n\n  onChange(e) {\n    const fileObject = e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = loadEvent => {\n      if( this.props.onImport )\n      {\n        this.props.onImport(\n          { file: fileObject, content : loadEvent.target.result}\n        );\n      }\n    }\n    reader.readAsText(fileObject);\n  }\n\n  render() {\n    const clickFile = (e) => {\n      this.hiddenFileInput.current.click();\n    }\n\n    const {onImport, accept, ...buttonProps} = {...this.props};\n    return (\n      <React.Fragment>\n        <Button onClick={clickFile} {...buttonProps}>Import File</Button>\n        <input\n          type=\"file\"\n          hidden\n          accept={accept}\n          onChange={(e) => this.onChange(e)} ref={this.hiddenFileInput}\n          />\n      </React.Fragment>\n   )\n  }\n}\n\nexport default FileImport;\n","// History.js\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => {return {\n  root: {\n    width: '100%',\n    height: 400,\n    minWidth: 200,\n    maxWidth: 300,\n    maxHeight: 200,\n    overflow: 'auto'\n  }\n}});\n\nfunction renderRow(props) {\n  return (\n    <ListItem button style={props.style} key={props.index} onClick={props.onClick}>\n      <ListItemText primary={props.name} secondary={new Date(props.date).toLocaleDateString()}/>\n    </ListItem>\n  );\n}\n\nfunction History(props)\n{\n  const classes = useStyles();\n  const items = props.data;\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Typography>Recently viewed</Typography>\n        <Divider />\n        <List>\n              {[...items.keys()].map ( x => renderRow({\n                index : x,\n                name: items[x].name,\n                id: items[x].id,\n                date: items[x].date,\n                onClick: ()=>{if(props.onClick){props.onClick(items[x]);}}\n              }))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n\nexport default History;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\n\nfunction TitledDialog(props) {\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle id=\"text-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose} variant=\"contained\">\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nTitledDialog.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func\n};\n\nexport default TitledDialog;\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport FileImport from \"./FileImport\";\nimport Button from '@material-ui/core/Button';\nimport History from \"./History\";\nimport TitledDialog from \"./TitledDialog\"\nimport * as SongStorage from \"./SongStorage\"\nimport './App.css';\n\nconst styles = (theme)=>{\n  return {\n    licenseBanner: {\n      position:\"absolute\",\n      bottom:0,\n      \"width\": \"95%\",\n      \"textAlign\": \"center\",\n      \"backgroundColor\" : \"#212121\", // same background color as app\n      \"zIndex\" : theme.zIndex.drawer\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    }\n  };\n};\n\nclass TitleScreen extends React.Component\n{\n  state = {\n    error: this.props.error,\n    songHistory: []\n  }\n\n  componentDidMount = () => {\n    this.setState(\n      {songHistory: SongStorage.getLocalHistory()}\n    )\n  }\n\n  render()\n  {\n    let history = this.props.history;\n    // if a load of a song is in flight don't show file open buttons\n    const handleFileImport = (e) =>\n    {\n      history.push({\n        pathname: '/import',\n        filename: e.file.name,\n        content: e.content\n      });\n    };\n\n    const navigateRecent = (song) => {\n      history.push('/recent/' + song.id + \"/\");\n    };\n\n    const controls = (\n      <React.Fragment>\n        <Button variant=\"contained\" onClick={()=>{history.push(\"/example\")}} style={{margin: \"1em\"}}>Load example</Button>\n        <FileImport\n          style={{margin: \"1em\"}}\n          variant=\"contained\"\n          onImport={handleFileImport}\n          accept=\".tabit,.h2song\"\n          />\n      </React.Fragment>\n    );\n    const { classes } = this.props;\n    return (\n      <div className=\"App\">\n        <div>\n          <h2>tabit</h2>\n          <p>I read .h2songs and write tab</p>\n          {controls}\n        </div>\n        <div style={{\"marginLeft\" : \"auto\", \"marginRight\": \"auto\"}}>\n        { this.state.songHistory.length > 0 &&\n          <History data={this.state.songHistory} onClick={navigateRecent}/>\n        }\n        </div>\n        { !!this.state.error &&\n          <TitledDialog\n            title=\"Something went wrong.\"\n            open={!!this.state.error}\n            onClose={()=>{this.setState({error: null})}}\n          >\n            {this.state.error}\n          </TitledDialog>\n        }\n        <div className={classes.licenseBanner} >\n          <p>tabit relies on publicly available sound libraries listed at <a href=\"https://github.com/andrew-murray/tabit\">https://github.com/andrew-murray/tabit</a></p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(TitleScreen);\n","const DEFAULT_INSTRUMENT_SYMBOLS = {\n  \"Djembe Slap\" : \"S\",\n  \"Djembe Tone\" : \"t\",\n  \"Djembe Bass\" : \"O\",\n  \"Snare Ghost\" : \"x\",\n  \"Snare Accent\" : \"X\",\n  \"Shaker Ghost\" : \"x\",\n  \"Shaker Accent\" : \"X\",\n  \"Click\" : \"X\",\n  \"Bass\" : \"O\",\n  \"Tom\" : \"O\",\n  \"Default\" : \"X\"\n};\n\nfunction normalizeInstrumentsForFiguring(instruments)\n{\n  let n = [];\n  for(const inst of instruments)\n  {\n    let nInst = Object.assign({}, inst);\n    // for some reason these instruments are one-size arrays, and one id ... the track id from hydrogen\n    // this should be fixed, this doesn't make sense\n    nInst.name = nInst.name.toLowerCase();\n    n.push( nInst );\n  }\n  return n;\n}\n\nfunction figureDjembes(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const djembeTracks = instruments.filter( (inst) => inst.name.includes(\"djembe\") );\n  if(djembeTracks.length === 0)\n  {\n    return [];\n  }\n  else if(djembeTracks.length <= 3)\n  {\n    // let's lazily assume we have a slap, tone, bass\n    const slapArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"slap\") );\n    const toneArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"tone\") );\n    const bassArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"bass\") );\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      let parityCheck = slapArray[i] + toneArray[i] + bassArray[i];\n      // failed to figure out how djembes work return empty array\n      if(parityCheck !== 1)\n      {\n        return [];\n      }\n    }\n    let djembeMapping = {};\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      if( slapArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Slap\"];\n      }\n      else if( toneArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Tone\"];\n      }\n      else if( bassArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Bass\"];\n      }\n    }\n    return [ [ \"Djembe\", djembeMapping ] ];\n  }\n  else\n  {\n    // TODO: support more than one djembe\n    return []\n  }\n}\n\n// used by snare/shaker\nfunction manageAccentOrGhost(instrumentTracks, instrumentName, accentSymbol, ghostSymbol)\n{\n  let outputInstruments = [];\n  if(instrumentTracks.length === 2)\n  {\n    const t0 = instrumentTracks[0];\n    const t1 = instrumentTracks[1];\n    // attempt to determine ghost/accent\n    const zeroLouder = t0.volume > t1.volume || (t0.volume === t1.volume && t0.gain > t1.gain);\n    let mapping = {};\n    mapping[ t0.id.toString() ] = zeroLouder ? accentSymbol : ghostSymbol;\n    mapping[ t1.id.toString() ] = zeroLouder ? ghostSymbol : accentSymbol;\n    outputInstruments.push([instrumentName, mapping] );\n  }\n  else // if 1 it must be an accent, if >= 3 ... I don't want to try and assign ghosts/accents\n  {\n    // I don't want to support ghost/accent here right now\n    for( const track of instrumentTracks )\n    {\n      let mapping = {};\n      mapping[ track.id.toString() ] = accentSymbol;\n      outputInstruments.push([instrumentName, mapping] );\n    }\n  }\n  return outputInstruments;\n\n}\n\nfunction figureShakers(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  // todo: support common alternative shakers? Tambourine?\n  const shakerTracks = instruments.filter( (inst) => ( inst.name.includes(\"shaker\") ) );\n  return manageAccentOrGhost(\n    shakerTracks,\n    \"Shaker\",\n    symbolConfig[\"Shaker Accent\"],\n    symbolConfig[\"Shaker Ghost\"]\n  );\n}\n\nfunction figureSnares(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const snareTracks = instruments.filter( (inst) => ( inst.name.includes(\"snare\") ) );\n  // todo: we currently assume 2 snares is accent/ghost ... but I think it's relatively\n  // common to be 2 snare parts too, I think the algorithm here is check patterns to\n  // see if they overlap ... if the \"ghosts\" overlap the \"hits\" sometimes, assume 2 parts\n  return manageAccentOrGhost(\n    snareTracks,\n    \"Snare\",\n    symbolConfig[\"Snare Accent\"],\n    symbolConfig[\"Snare Ghost\"]\n  );\n}\n\n\nfunction activeInstruments(patterns)\n{\n  let nonTrivialInstruments = new Set();\n  for( const p of patterns )\n  {\n    for(const [instrumentID, part] of Object.entries(p.instrumentTracks))\n    {\n      if( !part.empty() )\n      {\n        nonTrivialInstruments.add(parseInt(instrumentID));\n      }\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction activeInstrumentation(instrumentIndex, patterns)\n{\n  const active = activeInstruments(patterns);\n  let nonTrivialInstruments = [];\n  for( const inst of instrumentIndex)\n  {\n    if( active.has(inst.id) )\n    {\n      nonTrivialInstruments.push( inst );\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction figureClickyInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const worthwhileInstruments = activeInstruments(patterns);\n  const relevantTracks = instruments.filter( (inst) => ( worthwhileInstruments.has(inst.id) &&\n    !inst.name.includes(\"djembe\") &&\n    ( inst.name.includes(\"click\") ||\n    inst.name.includes(\"stick\") ||\n    inst.name.includes(\"tom\") ||\n    inst.name.includes(\"bass\") ||\n    inst.name.includes(\"kick\") )\n  ) );\n\n  const trackIsClick = Array.from(\n    relevantTracks,\n    (t) => t.name.includes(\"click\") || t.name.includes(\"stick\")\n  );\n  // we prioritise the early tracks\n  // and hope for the best\n\n  let tomIndex = 1;\n  let bassIndex = 1;\n  let collated = [];\n  for( let candidate = 0; candidate < Math.floor(relevantTracks.length/2); ++candidate )\n  {\n    if( trackIsClick[candidate*2] !== trackIsClick[candidate*2+1] )\n    {\n      const clickTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2] : relevantTracks[candidate*2+1];\n      const hitTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2+1] : relevantTracks[candidate*2];\n      const instrumentIsTom = hitTrack.name.includes(\"tom\");\n      let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n      let instrumentName = \"\"\n      if( instrumentIsTom )\n      {\n        instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n        tomIndex = tomIndex + 1;\n      }\n      else\n      {\n        instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n        bassIndex = bassIndex + 1;\n      }\n      let mapping = {};\n      mapping[hitTrack.id.toString()] = symbolConfig[rawInstrumentName];\n      mapping[clickTrack.id.toString()] = symbolConfig[\"Click\"];\n      collated.push([instrumentName, mapping] );\n    }\n  }\n\n  // If there's a remainder instrument and there's no click\n  if( ((relevantTracks.length % 2 ) !== 0) && !trackIsClick[ relevantTracks.length - 1 ] )\n  {\n    const lastTrack = relevantTracks[relevantTracks.length - 1];\n    const instrumentIsTom = lastTrack.name.includes(\"tom\");\n    let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n    let instrumentName = \"\"\n    if( instrumentIsTom )\n    {\n      instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n      tomIndex = tomIndex + 1;\n    }\n    else\n    {\n      instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n      bassIndex = bassIndex + 1;\n    }\n    let mapping = {};\n    mapping[lastTrack.id.toString()] = symbolConfig[rawInstrumentName];\n    collated.push([instrumentName, mapping] );\n  }\n  return collated;\n}\n\nfunction defaultSymbolForSingleInstrument(symbolConfig, name)\n{\n  // we expect these keys\n  /*\n    \"Djembe Slap\" : \"S\",\n    \"Djembe Tone\" : \"t\",\n    \"Djembe Bass\" : \"O\",\n    \"Snare Ghost\" : \"-\",\n    \"Snare Accent\" : \"X\",\n    \"Shaker Ghost\" : \"x\",\n    \"Shaker Accent\" : \"X\",\n    \"Click\" : \"X\",\n    \"Bass\" : \"O\",\n    \"Tom\" : \"O\",\n    \"Default\" : \"X\"\n  */\n  const lowerName = name.toLowerCase();\n  if( lowerName.includes(\"click\") || lowerName.includes(\"stick\") )\n  {\n    return symbolConfig[\"Click\"];\n  }\n  else if( lowerName.includes(\"bass\") || lowerName.includes(\"kick\") )\n  {\n    return symbolConfig[\"Bass\"]\n  }\n  else if( lowerName.includes(\"snare\") )\n  {\n    return symbolConfig[\"Snare Accent\"];\n  }\n  else if( lowerName.includes(\"shaker\") )\n  {\n    return symbolConfig[\"Shaker\"];\n  }\n  else if( lowerName.includes(\"tom\") )\n  {\n    return symbolConfig[\"Tom\"];\n  }\n  else if( lowerName.includes(\"djembe\") )\n  {\n    if( lowerName.includes(\"slap\") )\n    {\n      return symbolConfig[\"Djembe Slap\"];\n    }\n    else if( lowerName.includes(\"tone\") )\n    {\n      return symbolConfig[\"Djembe Tone\"];\n    }\n    else\n    {\n      return symbolConfig[\"Djembe Bass\"];\n    }\n  }\n  return symbolConfig[\"Default\"];\n}\n\nfunction figureInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  let output = [];\n  output = output.concat( figureClickyInstruments( instrumentsRaw, symbolConfig, patterns ) );\n  output = output.concat( figureDjembes( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureSnares( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureShakers( instrumentsRaw, symbolConfig ) );\n\n  // we ignore track used by multiple instruments\n\n  // but attempt to cover \"instrument not recognised anywhere\"\n\n  const worthwhileInstruments = activeInstruments(patterns);\n\n  for(const inst of instrumentsRaw)\n  {\n    if( !worthwhileInstruments.has(inst.id) )\n    {\n      continue;\n    }\n    let instrumentUsed = false;\n    for( const op of output)\n    {\n      if( inst.id.toString() in op[1] )\n      {\n        instrumentUsed = true;\n      }\n    }\n    if(instrumentUsed === false)\n    {\n      let mapping = {};\n      mapping[ inst.id.toString() ] = defaultSymbolForSingleInstrument( symbolConfig, inst.name );\n      output.push( [inst.name, mapping] );\n    }\n  }\n\n  return output;\n}\n\nfunction createInstrumentMask(instrumentIndex, instruments)\n{\n  let instrumentMask = Array(instrumentIndex.length);\n  for( let baseInstrumentIndex = 0; baseInstrumentIndex < instrumentIndex.length; ++baseInstrumentIndex )\n  {\n    const baseInstrumentId = instrumentIndex[baseInstrumentIndex].id;\n    for( let targetInstrumentIndex = 0; targetInstrumentIndex < instruments.length; ++targetInstrumentIndex)\n    {\n      const target = instruments[targetInstrumentIndex];\n      if(baseInstrumentId.toString() in target[1])\n      {\n        instrumentMask[baseInstrumentIndex] = targetInstrumentIndex;\n      }\n    }\n  }\n  return instrumentMask;\n}\n\nfunction guessShortName(instrumentName)\n{\n  const match = instrumentName.match(/\\d+/);\n  if(match)\n  {\n    return instrumentName.substr(0,2) + match[0];\n  }\n  else\n  {\n    return instrumentName.substr(0,2);\n  }\n}\n\nexport {\n  activeInstrumentation,\n  createInstrumentMask,\n  DEFAULT_INSTRUMENT_SYMBOLS,\n  figureClickyInstruments,\n  figureDjembes,\n  figureShakers,\n  figureSnares,\n  figureInstruments,\n  guessShortName\n};\n","import kuva from \"./kuva.json\";\nimport {\n  activeInstrumentation,\n  createInstrumentMask,\n  DEFAULT_INSTRUMENT_SYMBOLS,\n  figureInstruments,\n  guessShortName\n} from \"./instrumentation\";\nimport track from \"./track\";\nimport {DefaultSettings} from \"./formatSettings\";\nimport notation from \"./notation\"\n\nconst figurePatternSettings = (patterns)=>{\n  return Array.from(\n    patterns,\n    (p) => notation.guessPerPatternSettings( p.instrumentTracks )\n  );\n};\n// note that a Pattern contains\n// {\n//    size, name, notes\n//    resolution, instrumentTracks (instrumentTracks are a class)\n// }\n\nclass SongData {\n  constructor(\n    title,\n    sourceFile,\n    instruments,\n    instrumentIndex,\n    instrumentMask,\n    patterns,\n    formatSettings,\n    patternSettings\n  )\n  {\n    this.title = title;\n    this.sourceFile = sourceFile;\n    this.instruments = instruments;\n    this.instrumentIndex = instrumentIndex;\n    this.instrumentMask = instrumentMask;\n    this.patterns = patterns;\n    this.formatSettings = formatSettings;\n    this.patternSettings = patternSettings;\n  }\n};\n\nfunction createPatternsFromData(patternData)\n{\n  // the instruments currently work as simple objects\n  // we need to create tracks!\n  let patterns = [];\n  for( let pattern of patternData )\n  {\n    let replacedTracks = {};\n    // todo: find a more compact way of doing this\n    for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n    {\n      replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n    }\n    let patternWithTracks = Object.assign({}, pattern);\n    patternWithTracks.instrumentTracks = replacedTracks;\n    patterns.push(patternWithTracks);\n  }\n  return patterns;\n}\n\nfunction prepHydrogenVolumes(instrumentIndex)\n{\n  // fixme: convert hydrogen volume/gain to normal values, somewhere\n  for( let instrument of instrumentIndex )\n  {\n    instrument.volume = 0.5;\n  }\n  return instrumentIndex;\n}\n\nfunction upgradeOldInstruments(instruments)\n{\n  // instruments is an array of [name, symbolmapping, possible metadata]\n  return instruments.map(\n    inst => {\n      if(inst.length === 2)\n      {\n        return [inst[0], inst[1], { \"shortName\" : guessShortName(inst[0])}];\n      }\n      else\n      {\n        return inst;\n      }\n    }\n  )\n}\n\nfunction LoadJSON(jsonData, title, filename, fromHydrogen)\n{\n  return new Promise((resolve) =>\n    {\n      const patterns = createPatternsFromData(jsonData.patterns);\n      const oldInstruments = !fromHydrogen? jsonData.instruments : figureInstruments(\n        jsonData.instruments,\n        DEFAULT_INSTRUMENT_SYMBOLS,\n        patterns\n      );\n      const instruments = upgradeOldInstruments(oldInstruments);\n      const instrumentIndex = jsonData.instrumentIndex ? jsonData.instrumentIndex\n        : prepHydrogenVolumes( activeInstrumentation(jsonData.instruments, patterns) );\n      const instrumentMask = createInstrumentMask(instrumentIndex, instruments);\n      const formatSettings = jsonData.formatSettings ? jsonData.formatSettings : Object.assign({}, DefaultSettings);\n      const patternSettings = jsonData.patternSettings ? jsonData.patternSettings : figurePatternSettings(patterns);\n      resolve( new SongData(\n        title,\n        filename,\n        instruments,\n        instrumentIndex,\n        instrumentMask,\n        patterns,\n        formatSettings,\n        patternSettings\n      ) );\n    }\n  );\n\n}\n\nfunction LoadExample()\n{\n  return LoadJSON(\n    kuva,\n    \"kuva\",\n    \"kuva.example\",\n    true // fromHydrogen\n  );\n}\n\n\nconst moduleExports = {\n  LoadExample,\n  LoadJSON\n};\n\nexport default moduleExports;\n","import React from 'react';\nimport notation from \"./notation\"\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme)=>({\n  root: {\n    fontFamily: \"Roboto Mono\",\n    fontSize: '1.2rem',\n    '@media (min-width:800px)': {\n      fontSize: '1.4rem',\n    }\n  }\n});\n\nconst denseStyles = (theme)=>({\n  root: {\n    fontFamily: \"Roboto Mono\",\n    fontSize: '0.8rem',\n    '@media (min-width:800px)': {\n      fontSize: '1.1rem',\n    }\n  }\n});\n\nconst PreTypography = withStyles(styles)(Typography);\nconst DensePreTypography = withStyles(denseStyles)(Typography);\n\nclass Part extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const tracks = Object.values(this.props.tracks);\n    if(tracks.length === 0 )\n    {\n      return <React.Fragment />\n    }\n    const patternArray = notation.formatPatternString(\n      this.props.instrument,\n      this.props.tracks,\n      this.props.config.restMark\n    );\n    // don't support a multi-line pattern, that doesn't divide the beatResolution\n    // because it's a nightmare!\n    const patternResolution = tracks[0].resolution;\n    if( (this.props.config.lineResolution % this.props.config.beatResolution) !== 0\n        && ( patternArray.length * patternResolution > this.props.config.lineResolution ) )\n    {\n      throw new Error(\"This code only supports a beatResolution that divides the lineResolution\");\n    }\n    // this code has got very convoluted\n    const patternLines = notation.chunkArray(patternArray, this.props.config.lineResolution / patternResolution, 0);\n    const beatsPerLine = this.props.config.lineResolution / this.props.config.beatResolution;\n    const beatChunkSize = this.props.config.beatResolution / patternResolution;\n    const linesWithBeats = patternLines.map(\n      line => notation.chunkArray( line, beatChunkSize )\n    );\n    const lineIndices = [...patternLines.keys()];\n    const Typo = this.props.dense ? DensePreTypography : PreTypography;\n    const formatLine = (key, line, startBeats, prefix)=>{\n      const beats = [...line.keys()];\n      const makeClasses = beat => startBeats.map(sb => \"partNote\"+ (beat + sb).toString()).join(\" \");\n      return (\n        <Typo key={\"pattern-line-\" + key} component=\"div\">\n          {prefix && <Typo variant=\"subtitle1\" component=\"span\" key={\"line-prefix-\" + key} style={{display: \"inline-block\"}}>{prefix}</Typo>}\n          <Typo variant=\"subtitle1\" component=\"span\" key={\"line-start-\" + key} style={{display: \"inline-block\"}}>{this.props.config.lineMark}</Typo>\n          {\n            beats.map( beat => <React.Fragment key={\"fragment-beat-\"+ (beat + startBeats[0]).toString()}>\n              <Typo variant=\"subtitle1\" component=\"span\" key={\"span-beat-\" + (beat + startBeats[0]).toString()} className={makeClasses(beat)} style={{display: \"inline-block\"}}>{line[beat].join(\"\")}</Typo>\n              <Typo variant=\"subtitle1\" component=\"span\" key={\"span-beat-marker-\" + (beat + startBeats[0]).toString()} style={{display: \"inline-block\"}}>{(this.props.config.showBeatMark && beat !== beats[beats.length-1]) ? this.props.config.beatMark : \"\"}</Typo>\n            </React.Fragment>\n            )\n          }\n          <Typo variant=\"subtitle1\" component=\"span\" key={\"line-end-\" + key}>{this.props.config.lineMark}</Typo>\n        </Typo>\n      );\n    };\n\n    const numberLine = notation.createNumberMarker(\n      this.props.config.numberRestMark,\n      this.props.config.beatResolution,\n      patternResolution,\n      Math.min( this.props.config.lineResolution, patternLines[0].length * patternResolution )\n    );\n    const beatChunks = notation.chunkArray(\n      numberLine,\n      this.props.config.beatResolution / patternResolution\n    );\n    const prefixIndent = this.props.prefix ? ' '.repeat(this.props.prefix.length) : null;\n\n    //const startBeatsForNumberLine =\n\n    return (\n      <div>\n        {this.props.config.showBeatNumbers ? formatLine(\"beat\", beatChunks, [0], prefixIndent) : \"\" }\n        {lineIndices.map(lineIndex=>formatLine(lineIndex.toString(), linesWithBeats[lineIndex], [beatsPerLine * lineIndex], lineIndex === 0 ? this.props.prefix : prefixIndent))}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Part);\n","import React from 'react';\nimport Part from \"./Part\";\n\nfunction getTitleType(headingLevel, defaultLevel)\n{\n    const validHeadingLevels = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    const safeHeading = headingLevel ? headingLevel.toLowerCase() : '';\n    const Title = validHeadingLevels.includes(safeHeading) ? safeHeading : defaultLevel;\n    return Title;\n}\n\nclass PartWithTitle extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const Title = getTitleType(this.props.headingLevel, \"h4\");\n    return (\n      <article>\n        <Title>{this.props.instrumentName}</Title>\n        <Part\n          instrument={this.props.instrument}\n          tracks={this.props.tracks}\n          config={this.props.config}\n          dense={this.props.dense}\n        />\n      </article>\n    );\n  }\n}\n\nexport default PartWithTitle;\n","import React from 'react';\nimport Part from \"./Part\";\nimport PartWithTitle from \"./PartWithTitle\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    fontFamily: \"Roboto Mono\",\n    textAlign: \"left\",\n    whiteSpace:\"pre\",\n    margin: \"auto\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    \"& .activeNote\": {\n      color: theme.palette.secondary.main\n    }\n  },\n});\n\nconst makeCompactConfig = (config, index) => {\n  if(index === 0 ){\n    return {\n      ...config\n    };\n  }\n  else {\n    return {\n      ...config,\n      showBeatNumbers : false\n    };\n  }\n};\n\nconst Pattern = React.memo((props)=>\n{\n  const instrumentIndices = [...props.instruments.keys()];\n  const shortNameLengths = props.instruments.map( inst => inst[2].shortName.length );\n  const maxShortNameLength = Math.max( ...shortNameLengths );\n  const formatShortTitle = (s) => {\n    return s + ' '.repeat(maxShortNameLength - s.length);\n  };\n\n  const toResolution = (track, resolution) => {\n    if(!props.config.primaryResolution) return track;\n    if(track.resolution === props.config.primaryResolution) return track;\n    const compatible = track.compatible(props.config.primaryResolution);\n    return compatible ? track.format(props.config.primaryResolution) : track;\n  };\n  let tracksForResolution = new Map();\n  for(const inst of props.instruments)\n  {\n    const instrumentIDs = Object.keys(inst[1]);\n    if(!props.config.primaryResolution)\n    {\n      for( const instID of instrumentIDs )\n      {\n        tracksForResolution[instID] = props.tracks[instID];\n      }\n    }\n    else\n    {\n      let instrumentIsCompatible = true;\n      for( const instID of instrumentIDs )\n      {\n        instrumentIsCompatible &= props.tracks[instID].compatible(props.config.primaryResolution);\n      }\n      for( const instID of instrumentIDs )\n      {\n        tracksForResolution[instID] = instrumentIsCompatible ?\n          toResolution(props.tracks[instID], props.config.primaryResolution)\n          : props.tracks[instID];\n      }\n    }\n  }\n\n  if(props.config.compactDisplay)\n  {\n    // worry about titles in a minute\n    return (\n      <div style={{\"margin\": \"auto\"}}>\n        { instrumentIndices.map(\n            (instrumentIndex) => ( <Part\n              key={\"part-\" + instrumentIndex.toString()}\n              instrument={props.instruments[instrumentIndex][1]}\n              tracks={tracksForResolution}\n              config={makeCompactConfig(props.config, instrumentIndex)}\n              prefix={formatShortTitle(props.instruments[instrumentIndex][2].shortName)}\n            />\n            )\n          )\n        }\n      </div>\n    );\n  }\n  else\n  {\n    return (\n      <div style={{\"margin\": \"auto\"}}>\n        { instrumentIndices.map(\n            (instrumentIndex) => ( <PartWithTitle\n              key={\"part-\" + instrumentIndex.toString()}\n              instrumentName={props.instruments[instrumentIndex][0]}\n              instrument={props.instruments[instrumentIndex][1]}\n              tracks={tracksForResolution}\n              config={props.config}\n              dense\n            /> )\n          )\n        }\n      </div>\n    );\n  }\n});\n\nclass ActivePattern extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  calculateBeat(config, patternTime)\n  {\n    const prevBeat = (patternTime !== undefined && patternTime !== null)\n      ? Math.floor(patternTime / config.beatResolution)\n      : null;\n    return prevBeat;\n  }\n\n  changePatternTime(prevBeat, beat, force)\n  {\n    if(beat !== prevBeat || force)\n    {\n      if(prevBeat !== null)\n      {\n        const prevElements = this.ref.current.getElementsByClassName(\"partNote\" + prevBeat.toString());\n        for( const e of prevElements )\n        {\n          e.classList.remove(\"activeNote\");\n        }\n      }\n      if(beat !== null)\n      {\n        const elements = this.ref.current.getElementsByClassName(\"partNote\" + beat.toString());\n        for( const e of elements )\n        {\n          e.classList.add(\"activeNote\");\n        }\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot)\n  {\n    if(prevProps.instruments !== this.props.instruments\n      || prevProps.tracks !== this.props.tracks\n      || prevProps.config !== this.props.config\n      || prevProps.classes !== this.props.classes)\n    {\n      this.changePatternTime(\n        // I don't quite understand why this removal is necessary\n        // it seems that react smartly preserves the previous element,\n        // so we need to fix its smarts or we change beatResolution partNoteX \"stays highlighted\"\n        this.calculateBeat( prevProps.config, prevProps.patternTime),\n        this.calculateBeat( this.props.config, this.props.patternTime),\n        true\n      );\n      return true;\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState)\n  {\n    // we don't trigger a react-rerender on patternTime changes\n    // we handle that in-browser for performance reasons\n    if(nextProps.instruments !== this.props.instruments\n      || nextProps.tracks !== this.props.tracks\n      || nextProps.config !== this.props.config\n      || nextProps.classes !== this.props.classes)\n    {\n      return true;\n    }\n    else if( nextProps.patternTime !== this.props.patternTime)\n    {\n      this.changePatternTime(\n        this.calculateBeat( this.props.config, this.props.patternTime),\n        this.calculateBeat( nextProps.config, nextProps.patternTime),\n        true\n      );\n      return false;\n    }\n    else\n    {\n      return false;\n    }\n  }\n\n  render()\n  {\n    return (\n      <div className={this.props.classes.root} ref={this.ref}>\n        <Pattern\n          instruments={this.props.instruments}\n          tracks={this.props.tracks}\n          config={this.props.config}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(ActivePattern);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction PlaybackControls(props)\n{\n  const tempoControlColumns = 4;\n\n  const onPlay = ()=>{ if(props.onPlay){ props.onPlay(); }; };\n  const onStop = ()=>{ if(props.onStop){ props.onStop(); }; };\n  const onSetTempo = (event, tempo)=>{ if(props.onTempoChange){ props.onTempoChange(tempo); } };\n  const tooltipMsg = \"Playback disabled while content unlocked.\"\n  const playTooltip = props.disabled ? tooltipMsg : \"\";\n  const stopTooltip = props.disabled ? tooltipMsg : \"\";\n\n  return (\n      <React.Fragment>\n        <div>\n          <Tooltip title={playTooltip} aria-label={playTooltip}>\n            <IconButton\n              onClick={props.disabled ? undefined : onPlay}\n              disableRipple={props.disabled}\n              disableFocusRipple={props.disabled}\n            >\n              <PlayArrowIcon style={{color: props.disabled ? \"#cccccc\": \"#4cbb17\"}}/>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={stopTooltip} aria-label={stopTooltip}>\n            <IconButton\n              onClick={props.disabled ? undefined : onStop}\n              disableRipple={props.disabled}\n              disableFocusRipple={props.disabled}\n            >\n              <StopIcon style={{color: props.disabled ? \"#cccccc\": \"#ff0800\"}}/>\n            </IconButton>\n          </Tooltip>\n        </div>\n\n        <Grid container>\n        <Grid item xs={(12 - tempoControlColumns) / 2} />\n        <Grid item xs={tempoControlColumns}>\n        <Slider\n          defaultValue={100}\n          min={60}\n          step={1}\n          max={180}\n          onChange={onSetTempo}\n          valueLabelDisplay=\"auto\"\n        />\n        </Grid>\n        <Grid item xs={(12 - tempoControlColumns ) / 2} />\n        </Grid>\n\n      </React.Fragment>\n   );\n};\n\nexport default React.memo(PlaybackControls);\n","import React from \"react\";\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport TextField from '@material-ui/core/TextField';\n\nclass RenameDialog extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      currentValue : null\n    };\n  }\n\n  render()\n  {\n\n    const cancel = () => {\n      if(this.props.onCancel)\n      {\n        this.props.onCancel();\n      }\n      this.setState({currentValue: null});\n    };\n\n    const confirm = () => {\n      if(this.state.currentName !== null)\n      {\n        const instrumentName = this.state.currentValue.trim();\n        if( instrumentName.length > 0 )\n        {\n          if(this.props.onChange)\n          {\n            this.props.onChange(this.state.currentValue);\n          }\n          this.setState({currentValue: null});\n        }\n        else\n        {\n          // todo: prettier error communication?\n          alert(\n            \"You selected an invalid name \\\"\" + this.state.currentValue + \"\\\".\\n\" +\n            \"Must be non-empty.\"\n          );\n        }\n      }\n      else\n      {\n        cancel();\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {this.props.instruction}\n          </DialogContentText>\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentValue ?? this.props.value}\n            onChange={(e)=>{this.setState({currentValue: e.target.value});}}\n            onKeyDown={handleEnter}\n            autoFocus\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n};\n\nexport default RenameDialog;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport RenameDialog from \"./RenameDialog\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport ClickNHold from 'react-click-n-hold';\nimport Slider from '@material-ui/core/Slider';\n\nimport {isMobile} from \"./Mobile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nconst ThinFormControlLabel = withStyles({\n  root: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n})(FormControlLabel);\n\nconst InlinableIconButton = withStyles({\n  root: {\n    padding: 2\n  }\n})(IconButton);\n\nconst NoDividerCenterTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: \"none\",\n    textAlign: \"center\",\n    paddingBottom: theme.spacing(0) // make instrument titles bunch up with their controls a little more\n  }\n}))(TableCell);\n\nconst CenterTableCell = withStyles((theme) => ({\n  root: {\n    textAlign: \"center\"\n  }\n}))(TableCell);\n\nfunction VolumeWidget(props)\n{\n  const [active, setActive] = React.useState(false);\n  const [sliderValue, setSliderValue] = React.useState(100);\n  const [muted, setMuted] = React.useState(props.muted);\n  const sliderRef = React.useRef(null);\n  const height = props.height ? props.height / 3 : 24;\n  const FixedHeightStylings = {\n    height: 3*height,\n    position: \"absolute\",\n    top: -height\n  };\n  const SliderStyles = Object.assign(active? {} : {\"visibility\": \"hidden\", paddingLeft: \"0px\"}, FixedHeightStylings);\n  const IconStyles = active ?  {\"visibility\":\"hidden\"} : {};\n\n  // currently: updating based on the normal volume event isn't nearly performant enough\n  // (because the app's state update is really sluggish)\n  // potential fixes - seperate the audio and the visual state and/or create smaller state objects\n  const setVolume = (event, value) =>\n  {\n    setSliderValue(value);\n    if( props.onChange )\n    {\n      props.onChange( value );\n    }\n  };\n\n  // for mobile\n  // we click'n'hold which opens the volume slider, but don't propagate focus\n\n  // for desktop/tablet\n  // we click'n'hold and propagate focus to the slider, so that our drag\n  // will pull the slider up and down\n  const mobile = isMobile();\n\n  const holdDesktop = (start, event)=>{\n    if(!active){ setActive(true); }\n    if(sliderRef){ sliderRef.current.dispatchEvent(event.nativeEvent);}\n  };\n\n  const holdMobile= (start, event)=>{\n    if(!active){ setActive(true); }\n  };\n\n  const holdEndDesktop = (e)=>{\n    setActive(false);\n  };\n\n  const commitVolume = (event,value)=>\n  {\n    if( mobile ){ setActive(false); }\n    setVolume(event,value);\n  };\n\n  const onMuteChange = () =>\n  {\n    setMuted(!muted);\n    props.onMuteEvent(!muted);\n  };\n\n  return (\n    <ClickNHold\n      time={0.5} // Time to keep pressing. Default is 2\n      onClickNHold={mobile ? holdMobile : holdDesktop}\n      onEnd={mobile ? null : holdEndDesktop} >\n      <InlinableIconButton disableRipple disableFocusRipple onClick={onMuteChange} >\n        <div style={SliderStyles}>\n          <Slider\n            defaultValue={100}\n            orientation=\"vertical\"\n            aria-labelledby=\"vertical-slider\"\n            onChange={commitVolume}\n            ref={sliderRef}\n          />\n        </div>\n        <div style={IconStyles}>\n          { muted ?  <VolumeOffIcon fontSize=\"small\" />\n          : sliderValue < 10 ? <VolumeMuteIcon fontSize=\"small\" />\n          : sliderValue < 50 ? <VolumeDownIcon fontSize=\"small\" />\n                             : <VolumeUpIcon fontSize=\"small\"/> }\n        </div>\n      </InlinableIconButton>\n    </ClickNHold>\n  );\n}\n\nclass RawInstrumentEditDialog extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSymbol : null\n    };\n  }\n\n  render() {\n\n    const cancel = (e) => {\n      this.setState({currentSymbol : null});\n      if(this.props.onCancel){\n        this.props.onCancel();\n      }\n    };\n\n    const confirm = (e) => {\n      if(this.state.currentSymbol !== null && this.state.currentSymbol.length === 1)\n      {\n        if(this.props.onChange){\n          this.props.onChange(this.state.currentSymbol);\n          this.setState({currentSymbol: null});\n        }\n      }\n      else\n      {\n        // todo: prettier error communication?\n        alert(\n          \"You selected an invalid symbol \\\"\" + this.state.currentSymbol + \"\\\".\\n\" +\n          \"Symbols must be precisely 1 character.\"\n        );\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter notation symbol\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentSymbol ?? this.props.value}\n            onChange={(e)=>{this.setState({currentSymbol: e.target.value});}}\n            onKeyDown={handleEnter}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nfunction InstrumentTable(props)\n{\n  const classes = useStyles();\n\n  const editRow = (y)=>{ if( props.onEditRow ){ props.onEditRow(y); }};\n  const editColumn = (x)=>{ if( props.onEditColumn ){ props.onEditColumn(x); }};\n  const addRow = ()=>{ if( props.onAddRow ){ props.onAddRow(); }};\n  const removeRow = (y)=>{ if( props.onRemoveRow ){ props.onRemoveRow(y); }};\n\n  const handleChange = (x,y, event) => {\n    const instrumentID = props.instrumentIndex[x].id;\n    const oldInstrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const dstInstrumentIndex = y;\n    if( oldInstrumentIndex === dstInstrumentIndex )\n    {\n      return;\n    }\n    const oldInstrument = props.instruments[oldInstrumentIndex];\n    let replacedSrcInstrument = [\n      \"\",\n      {}\n    ];\n    if( oldInstrument != null )\n    {\n      replacedSrcInstrument[0] = oldInstrument[0];\n      for( const key of Object.keys(oldInstrument[1]) )\n      {\n        if( key !== instrumentID.toString() )\n        {\n          replacedSrcInstrument[1][key] = oldInstrument[1][key];\n        }\n      }\n    }\n    let dstInstrument = [\n      props.instruments[dstInstrumentIndex][0],\n      Object.assign({}, props.instruments[dstInstrumentIndex][1] )\n    ];\n    if(oldInstrument != null )\n    {\n      dstInstrument[1][instrumentID.toString()] = oldInstrument[1][instrumentID];\n    }\n    else\n    {\n      dstInstrument[1][instrumentID.toString()] = \"X\";\n    }\n\n    let replacedInstruments = [];\n\n    for(let instrumentIndex = 0; instrumentIndex < props.instruments.length; ++instrumentIndex)\n    {\n      if( instrumentIndex === oldInstrumentIndex )\n      {\n        replacedInstruments.push( replacedSrcInstrument );\n      }\n      else if( instrumentIndex === dstInstrumentIndex )\n      {\n        replacedInstruments.push( dstInstrument )\n      }\n      else\n      {\n        replacedInstruments.push( props.instruments[instrumentIndex] );\n      }\n    }\n    props.onChange(replacedInstruments);\n  };\n\n  let [open, setOpen] = React.useState( false );\n\n  const createCell = (x,y) =>\n  {\n      return (\n        <TableCell\n          align=\"center\"\n          key={\"instrumentPanel-cell-\" + y.toString() + \"-\" + x.toString()}\n        >\n          <ThinFormControlLabel\n            control={<Checkbox checked={props.instrumentMask[x] === y} onChange={(e) =>{handleChange(x,y,e);}} name={x + \",\" + y.toString()} />}\n          />\n        </TableCell>\n      );\n  }\n\n  const createMatchingRow = (y) =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-\" + y.toString()}>\n          <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-\" + y.toString() + \"-name\"}>\n            <Typography>{props.instruments[y][0]}</Typography>\n            <InlinableIconButton onClick={(e)=>{editRow(y);}}><EditIcon fontSize=\"small\"/></InlinableIconButton>\n            <InlinableIconButton onClick={(e)=>{removeRow(y);}}><ClearIcon fontSize=\"small\"/></InlinableIconButton>\n          </TableCell>\n          {[...Array(props.instrumentMask.length).keys()].map(x=>createCell(x,y))}\n      </TableRow>\n    );\n  };\n\n  const createEditRow = () =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-edit\"}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-edit-cell\"}>\n          <IconButton onClick={(e)=>{addRow();}} aria-label=\"add\">\n            <AddBoxIcon/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  return (\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow key={\"instrumentPanel-row-header\"}>\n          { props.showAdvanced && <NoDividerCenterTableCell key={\"instrumentPanel-row-instrument\"}></NoDividerCenterTableCell> }\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <NoDividerCenterTableCell key={\"instrumentPanel-row-header-cell-\" + x.toString()}>\n                <Typography>{props.instrumentIndex[x].name}</Typography>\n              </NoDividerCenterTableCell>)}\n        </TableRow>\n        <TableRow key={\"instrumentPanel-row-controls\"}>\n          { props.showAdvanced &&\n            <CenterTableCell key={\"instrumentPanel-row-instrument\"}>\n              <IconButton aria-label=\"Show Instrument Matcher\" size=\"small\" onClick={() => setOpen(!open)}>\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n              </IconButton>\n            </CenterTableCell>\n          }\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <CenterTableCell key={\"instrumentPanel-row-controls-cell-\" + x.toString()}>\n                <Grid container>\n                <Grid item xs={6}>\n                <InlinableIconButton onClick={(e)=>{editColumn(x);}}>\n                  <EditIcon fontSize=\"small\"/>\n                </InlinableIconButton>\n                </Grid>\n                <Grid item xs={6}>\n                  <VolumeWidget\n                    muted={props.instrumentIndex[x].muted}\n                    onChange={(value)=>{props.onVolumeEvent( {instrument: x, volume: value / 100.0}); }}\n                    onMuteEvent={(muted)=>{props.onVolumeEvent( {instrument: x, muted: muted})}}\n                    />\n                </Grid>\n                </Grid>\n              </CenterTableCell>)}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {open && props.showAdvanced && [...Array(props.instruments.length).keys()].map(y=>createMatchingRow(y))}\n        {open && props.showAdvanced && createEditRow()}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction InstrumentConfig(props) {\n  const theme = useTheme();\n  const [editingSymbol, setEditingSymbol] = React.useState(null);\n  const [renamingInstrument, setRenamingInstrument] = React.useState(null);\n\n  const removeInstrument = (y) =>\n  {\n    let replacedInstruments = props.instruments.slice(0,y).concat(props.instruments.slice(y+1));\n    props.onChange(replacedInstruments);\n  };\n\n  const getSymbol = (x) => {\n    const instrumentID = props.instrumentIndex[editingSymbol].id;\n    const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    return props.instruments[instrumentIndex][1][instrumentID];\n  };\n\n  const endEditingSymbol = (resolvedSymbol) =>\n  {\n    if(resolvedSymbol !== null)\n    {\n      const instrumentID = props.instrumentIndex[editingSymbol].id;\n      const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n      let replacedInstruments = Array.from(props.instruments);\n      replacedInstruments[instrumentIndex][1][instrumentID] = resolvedSymbol;\n      props.onChange(replacedInstruments);\n    }\n    setEditingSymbol( null );\n  };\n\n  const getName = (y) => {\n    return y < props.instruments.length ? props.instruments[y][0] : \"\";\n  };\n\n  const renameInstrument = (instrumentName)  =>\n  {\n    // this function also deals with the addition of new instruments\n    if( renamingInstrument === props.instruments.length )\n    {\n      const extraInstrument = [ instrumentName, {} ];\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments.push(extraInstrument);\n      props.onChange(replacedInstruments);\n    }\n    else\n    {\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments[renamingInstrument][0] = instrumentName;\n      props.onChange(replacedInstruments);\n    }\n    setRenamingInstrument(null);\n  };\n\n  const containerStyle = {\n    \"border\": \"2px solid rgba(255, 255, 255, 0.5)\",\n    \"outline\": \"none\",\n    \"borderRadius\": \"8px\"\n  };\n  return (\n    <div style={{\"paddingBottom\" : theme.spacing(1)}}>\n      <RenameDialog\n        open={renamingInstrument !== null}\n        onCancel={()=>{setRenamingInstrument(null);}}\n        onChange={(s)=>{renameInstrument(s);}}\n        value={renamingInstrument !== null ? getName(renamingInstrument) : \"\"}\n        instruction=\"Enter instrument name\"\n      />\n      <RawInstrumentEditDialog\n        open={editingSymbol !== null}\n        onCancel={()=>{endEditingSymbol(null);}}\n        onChange={(s)=>{endEditingSymbol(s);}}\n        value={editingSymbol !== null ? getSymbol(editingSymbol) : \"\"}\n        />\n      <TableContainer component={Paper} style={containerStyle}>\n        <InstrumentTable\n          instrumentIndex={props.instrumentIndex}\n          instrumentMask={props.instrumentMask}\n          instruments={props.instruments}\n          onEditColumn={(x)=>{setEditingSymbol(x);}}\n          onEditRow={(y)=>{setRenamingInstrument(y);}}\n          onAddRow={()=>{setRenamingInstrument(props.instruments.length)}}\n          onRemoveRow={(y)=>{removeInstrument(y);}}\n          onVolumeEvent={props.onVolumeEvent}\n          onChange={props.onChange}\n          showAdvanced={props.showAdvanced}\n        />\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default React.memo( InstrumentConfig );\n","class Audio\n{\n\n  // todo: we replace a valid audioContext with a blank object, so that we can run tests in node\n  //       this should probably be replaced by https://github.com/audiojs/web-audio-api\n  //       and a test-suite written\n  static createWebContext()\n  {\n    return new (window.AudioContext || window.webkitAudioContext || Object)();\n  }\n\n  static determineMinResolution(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let minResolution = 48;\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && !t.empty()\n        )\n        {\n          minResolution = Math.min( minResolution, t.resolution );\n        }\n      }\n      return minResolution;\n  }\n\n  static determineTrackLength(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let trackLength = 48;\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && !t.empty()\n        )\n        {\n          trackLength = Math.max( trackLength, t.length() );\n        }\n      }\n      return trackLength;\n  }\n\n  static peakAmplitude(\n    combined\n  )\n  {\n    let peakValue = 0.0;\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for( let sample = 0; sample < combinedChannel.length; ++sample)\n      {\n        peakValue = Math.max( Math.abs(combinedChannel[sample]), peakValue );\n      }\n    }\n    return peakValue;\n  }\n\n  static normalizeAudioBuffer(\n    combined\n  )\n  {\n    const peakValue = Audio.peakAmplitude( combined );\n    if( peakValue > 1.0 )\n    {\n      for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n        let combinedChannel = combined.getChannelData(channel);\n        for( let sample = 0; sample < combinedChannel.length; ++sample)\n        {\n          combinedChannel[sample] = combinedChannel[sample] / peakValue;\n        }\n      }\n    }\n    return combined;\n  }\n\n  static createMasterTrack(\n    context,\n    tracks,\n    instrumentIndex,\n    sounds,\n    tempo\n  )\n  {\n    const trackLength = Audio.determineTrackLength( instrumentIndex, tracks );\n\n\n    const beatTime =  (60.0 / tempo) * 1000;\n    const timePerHydrogen = beatTime / 48.0;\n\n\n    // let's assume we can do some simple things\n\n    const sampleRate = 44100;\n    const channels = 2;\n    const trackLengthMs = trackLength * timePerHydrogen;\n    const trackLengthSamples = trackLengthMs * sampleRate / 1000.0;\n    const totalSamples = Math.floor(trackLengthSamples);\n    const samplesPerHydrogen = Math.floor( totalSamples / trackLength );\n    const combined = context.createBuffer(channels, totalSamples, sampleRate);\n\n    // populate blank buffer with sounds\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && selected[0].id in sounds\n          && !t.empty()\n        )\n        {\n          const audioBuffer = sounds[selected[0].id];\n          // fallback to copying the mono buffer across both channels\n          const audioChannel = audioBuffer.numberOfChannels === 2 ? audioBuffer.getChannelData(channel) : audioBuffer.getChannelData(0);\n          const trackPoints = t.toPoints();\n          for( const noteStart of trackPoints )\n          {\n            const sampleStart = noteStart * samplesPerHydrogen;\n            for( let sample = 0; sample < audioBuffer.length; ++sample )\n            {\n              // add sample to mega track\n              combinedChannel[sampleStart + sample] = combinedChannel[sampleStart + sample] + audioChannel[sample];\n            }\n          }\n        }\n      }\n    }\n\n    return Audio.normalizeAudioBuffer( combined );\n  }\n\n  static createAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=true;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n  static createOneShotAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=false;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n}\n\nexport default Audio;","\nimport Audio from \"./Audio\"\nimport * as Tone from \"tone\";\n\n// we schedule for a delay of 120ms to allow the audio context to catch up\nconst DEFAULT_AUDIO_DELAY = 0.05;\nlet AUDIO_DELAY = DEFAULT_AUDIO_DELAY;\n\nconst setAudioDelay = (value) => {\n  AUDIO_DELAY = value;\n};\n// these are the hydrogen drumkits available by GPL/CC\n\nconst DRUMKITS = [\n  \"circAfrique v4\",\n  \"DeathMetal\",\n  \"The Black Pearl 1.0\",\n  \"GMRockKit\",\n  \"TR808EmulationKit\",\n  \"Millo_MultiLayered3\"\n];\n\nconst convertNormalToAudible = (value) => {\n  // add an intuitive feel to gain values, perception of sound is non-linear\n  // https://www.dr-lex.be/info-stuff/volumecontrols.html\n  // note: I tried x^4 and I tried using tone's DB directly but neither felt very good.\n  return Math.pow(value, 2.5);\n};\n\nconst chooseAppropriateUrlForInstrument = (drumkitName, instrumentName) =>\n{\n  const name = instrumentName.toLowerCase();\n  // this is currently very basic\n  if(name.includes(\"kick\"))\n  {\n      return \"The Black Pearl 1.0/PearlKick-Hard.wav\";\n  }\n  else if(name.includes(\"stick\"))\n  {\n      return \"DeathMetal/16297_ltibbits_sticks_low_pitch.wav\";\n  }\n  else if(name.includes(\"tom\"))\n  {\n      return \"Millo_MultiLayered3/ft_01.wav\"\n  }\n  else if(name.includes(\"clap\"))\n  {\n      return \"TR808EmulationKit/808_Clap.wav\";\n  }\n  else if(name.includes(\"snare\"))\n  {\n    return \"GMRockKit/Snare-Soft.wav\";\n  }\n  else if(name.includes(\"cowbell\"))\n  {\n    return \"GMRockKit/Cowbell-Softest.wav\";\n  }\n  else\n  {\n    // todo: snare, cymbals\n    return null;\n  }\n}\n\nconst createSequenceCallback = (pattern, sampleSource) =>\n{\n  let samplesReady = sampleSource.samplesReady();\n  const sequenceCallback = (time, indexFromStart) =>\n  {\n    // if we don't know samples are ready,\n    if(!samplesReady)\n    {\n      // update our knowledge, and early out if needed\n      samplesReady = sampleSource.samplesReady();\n      if(!samplesReady){ return; }\n    }\n    const trackLengthRes = ( pattern.length / pattern.resolution );\n    const index = indexFromStart % trackLengthRes;\n    for(const [id,t] of Object.entries(pattern.tracks))\n    {\n        if( t.rep[index] )\n        {\n          const sampleData = sampleSource.samples[id];\n          if( sampleData !== undefined )\n          {\n            sampleData.player.stop(time + AUDIO_DELAY);\n            sampleData.player.start(time + AUDIO_DELAY);\n          }\n        }\n    }\n    if(sampleSource.onPatternTimeChange)\n    {\n      Tone.getDraw().schedule(\n        ()=>{\n          if(Tone.getTransport().state === \"started\")\n          {\n            const notePosition = (index * pattern.resolution) % pattern.length;\n            sampleSource.onPatternTimeChange(notePosition);\n          }\n        },\n        time + AUDIO_DELAY\n      );\n    }\n  };\n  return sequenceCallback;\n};\n\nconst createSortedUnique = (failures) =>\n{\n  let sortedFailures = [];\n  for( const [drumkit, name] of failures )\n  {\n    let noMatch = true;\n    for( const [otherDrumkit, otherName] of sortedFailures )\n    {\n      if( drumkit === otherDrumkit && name === otherName )\n      {\n        noMatch = false;\n        break;\n      }\n    }\n    if( noMatch )\n    {\n      sortedFailures.push( [drumkit, name] );\n    }\n  }\n  sortedFailures.sort();\n  return sortedFailures;\n}\n\nclass ToneController\n{\n  constructor(\n    instrumentIndex,\n    patterns,\n    tempo,\n    onTimeChange,\n    latencyHint,\n    onLoadError\n  )\n  {\n\n    if(onLoadError)\n    {\n      const patternNames = patterns.map(p=>p.name);\n      const patternNameSet = new Set(patternNames);\n      if(patternNames.length !== patternNameSet.size)\n      {\n          onLoadError(\"Warning: tabit currently only supports inputs where all the pattern names are unique. Good luck!\");\n      }\n    }\n\n    if(latencyHint && Tone.context.latencyHint !== latencyHint)\n    {\n      let context = new Tone.Context({latencyHint: latencyHint});\n      Tone.setContext(context);\n    }\n\n    // also configure a larger audio delay, if we're being requested to\n    // prioritise playback over latency\n    if(latencyHint === \"playback\")\n    {\n      // value in seconds (relatively arbitrary)\n      setAudioDelay(0.2)\n    }\n    else\n    {\n      setAudioDelay(DEFAULT_AUDIO_DELAY);\n    }\n\n    // this thing has a lot of state, eh?\n    // would love if this state was a bit more structured\n    this.samples = {};\n    this.currentPattern = null;\n    this.gain = new Tone.Gain();\n    this.gain.toDestination();\n    this.onPatternTimeChange = onTimeChange;\n    Tone.getTransport().bpm.value = tempo;\n    Tone.getTransport().loop = true;\n\n    this.sampleCount = 0;\n    this.expectedSampleCount = 0;\n    this.patternDetails = {};\n    let failures = []\n    for( let p of patterns )\n    {\n      this.patternDetails[p.name] = {\n        resolution: Audio.determineMinResolution(instrumentIndex, p.instrumentTracks ),\n        length : Audio.determineTrackLength(instrumentIndex, p.instrumentTracks ),\n        name: p.name,\n        tracks: p.instrumentTracks,\n        pattern: p\n      };\n      this.populateSamples(instrumentIndex, p.instrumentTracks, failures);\n    }\n    this.currentPatternName = null;\n    this.instrumentIndex = instrumentIndex;\n\n    if(failures.length > 0 && onLoadError)\n    {\n      const sortedFailures = createSortedUnique(failures);\n      const plural = sortedFailures.length > 1 ;\n      const s = plural ? \"s\" : \"\";\n      let message = \"Failed to load sample\" + s + \" for instrument\" + s + \": \" + (plural ? \"{\" : \"\");\n      for( let failureIndex = 0; failureIndex < sortedFailures.length; ++failureIndex )\n      {\n        const [drumkit, name] = sortedFailures[failureIndex];\n        message += name;\n        if( drumkit !== \"\" ){ message += \" (\" + drumkit + \")\"; }\n        if(failureIndex !== sortedFailures.length - 1){ message += \", \"; }\n        else{ message += (plural ? \"}\" : \"\") + \".\" }\n      }\n      message += \"\\n\" +\n       \"tabit's supported drumkits are \" + DRUMKITS.join( \", \" ) + \".\";\n\n      onLoadError(message);\n    }\n  }\n\n  teardown()\n  {\n    this.stop();\n    // cancel all future events\n    // note: it's unclear if this will appropriately dispose of all sequences & samples\n    // so this may be a performance problem in the long term\n    Tone.getTransport().cancel();\n  }\n\n  samplesReady()\n  {\n    return this.sampleCount === this.expectedSampleCount;\n  }\n\n  populateSamples(instrumentIndex, tracks, failures)\n  {\n    this.sampleCount = 0;\n    for(const [id,] of Object.entries(tracks))\n    {\n      const selected = instrumentIndex.filter(inst => inst.id.toString() === id);\n      if( selected.length > 0)\n      {\n        const selectedInstrument = selected[0];\n        const clampedVolume = convertNormalToAudible( Math.min( Math.max( 0.0 , selectedInstrument.volume ), 1.0 ) );\n        if( selectedInstrument.id in this.samples )\n        {\n          continue;\n        }\n        if(\n          \"drumkit\" in selectedInstrument &&\n          \"filename\" in selectedInstrument &&\n          DRUMKITS.includes(selectedInstrument.drumkit) )\n        {\n          const filename = selectedInstrument.filename.replace(\".flac\", \".wav\");\n          let player = new Tone.Player(\n            process.env.PUBLIC_URL + \"/wav/\" + selectedInstrument.drumkit + \"/\" + filename,\n            () => { this.sampleCount++; }\n          );\n          player.mute = selectedInstrument.muted;\n          player.name = selectedInstrument.name;\n          const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n          player.connect(gain)\n          gain.connect(this.gain);\n          this.samples[selectedInstrument.id] = { player : player, gain : gain }\n          this.expectedSampleCount++;\n        }\n        else if( \"drumkit\" in selectedInstrument )\n        {\n          const relativeUrl = chooseAppropriateUrlForInstrument( selectedInstrument.drumkit, selectedInstrument.name );\n          if(relativeUrl !== null)\n          {\n            let player = new Tone.Player(\n              process.env.PUBLIC_URL + \"/wav/\" + relativeUrl,\n              () => { this.sampleCount++; }\n            );\n            player.mute = selectedInstrument.muted;\n            player.name = selectedInstrument.name;\n            const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n            player.connect(gain);\n            gain.connect(this.gain);\n            this.samples[selectedInstrument.id] = { player : player, gain : gain }\n            this.expectedSampleCount++;\n          }\n          else\n          {\n            failures.push( [selectedInstrument.drumkit, selectedInstrument.name] );\n          }\n        }\n        else\n        {\n            failures.push( [\"\", selectedInstrument.name] );\n        }\n      }\n    }\n  }\n\n  createSequenceForPattern(instrumentIndex, pattern)\n  {\n      const patternResolution = this.patternDetails[pattern.name].resolution;\n      const patternLength = this.patternDetails[pattern.name].length;\n      const callback = createSequenceCallback(\n        this.patternDetails[pattern.name],\n        this\n      );\n      let seq = new Tone.Sequence(\n        callback,\n        [...Array(patternLength / patternResolution).keys()],\n        Tone.Time(\"4n\") * ( patternResolution / 48.0 )\n      );\n      // start the sequence, but the ticks won't be triggered when muted\n      // note: setting mute on the sequence directly seems to have no effect\n      seq._part.mute = true;\n      seq.start(0);\n      return seq;\n  }\n\n  createSequences(instrumentIndex, patterns)\n  {\n    let sequences = {};\n    for( let p of patterns )\n    {\n      sequences[p.name] = this.createSequenceForPattern(instrumentIndex, p);\n    }\n    return sequences;\n  }\n\n  setActivePattern( patternName )\n  {\n    const oldPatternName = this.currentPatternName !== null ? this.currentPatternName : null;\n    const length = this.patternDetails[patternName].length;\n    const oldLength = oldPatternName !== null ? this.patternDetails[oldPatternName] : null\n\n    // TODO: Since introducing a scheduling delay, this fudge factor is less reliable\n    // Particularly, the transition gets queued but the first beat is a little sloppy\n    // it's possible the whole transition functor needs to be faster\n\n    // we have a little fudge in here... if we're transitioning from a 4 beat loop\n    // to an 8 beat pattern ... we probably really wanted to hit the start of that pattern,\n    // not to transition at 3.75 beats and play the latter half\n    const timeFromBarEnd = Tone.getTransport().loopEnd - ( Tone.getTransport().toSeconds(Tone.getTransport().position) - AUDIO_DELAY );\n\n    const queueTransition = oldPatternName !== null\n    && Tone.getTransport().state === \"started\"\n    && ( timeFromBarEnd > 0 && timeFromBarEnd < Tone.getTransport().toSeconds(Tone.Time(\"8n\")));\n\n    // create this before starting the \"transaction\"\n    const nextSequence = this.createSequenceForPattern(this.instrumentIndex, this.patternDetails[patternName].pattern);\n\n    const enableNewTrack = (time) => {\n      if(oldPatternName !== null)\n      {\n        // note: setting mute on the sequence directly seems to have no effect\n        this.sequence._part.mute = true;\n      }\n      if(oldPatternName === null || oldLength !== length )\n      {\n\n        Tone.getTransport().setLoopPoints(0, Tone.Time(\"4n\") * (length / 48.0));\n      }\n      this.sequence = nextSequence;\n      this.sequence._part.mute = false;\n      this.currentPatternName = patternName;\n    };\n\n    if( queueTransition ) {\n      Tone.getTransport().scheduleOnce(\n        enableNewTrack,\n        Tone.Time(\"0\")\n      );\n    }\n    else\n    {\n      enableNewTrack();\n    }\n  }\n\n  play()\n  {\n    // Tone.start is needed to be triggered from a user interaction\n    // (web-audio-context policy of not playing until a user interaction)\n    Tone.start().then(()=>{Tone.getTransport().start();});\n  }\n\n  stop()\n  {\n    // it's slightly unclear what the synchronisation semantics of this Tone.getTransport().stop() call are.\n    // If a tick is currently in flight on Tone.getTransport() we have to ensure that\n    // the reset of patternTime occurs *afterwards*.\n    // The below calls seem to work for this, but I couldn't tell you why.\n    if( Tone.getTransport().state === \"started\")\n    {\n      Tone.getTransport().stop();\n      if( this.onPatternTimeChange )\n      {\n        Tone.getDraw().schedule(\n          ()=>{\n            this.onPatternTimeChange( null );\n          },\n          Tone.getTransport().now()\n        );\n      }\n    }\n  }\n\n  setMutedForInstrument(instrumentID, muted)\n  {\n    this.samples[instrumentID].player.mute = muted;\n  }\n\n  setVolumeForInstrument(instrumentID, volume)\n  {\n    this.samples[instrumentID].gain.set( {gain : convertNormalToAudible(volume) } );\n  }\n\n  setTempo(tempo)\n  {\n    Tone.getTransport().bpm.value = tempo;\n  }\n};\n\n\n\nexport default ToneController;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport copy from \"copy-to-clipboard\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n\nfunction SharingDialog(props)\n{\n  return <Dialog\n    open={props.open}\n    onClose={props.onClose}\n    aria-labelledby=\"sharing-dialog\"\n    aria-describedby=\"sharing-dialog\"\n  >\n    <DialogContent>\n      <DialogContentText>\n      Your song is available at\n      </DialogContentText>\n      <DialogContentText>\n      {props.url}\n      <IconButton onClick={(e)=>{ copy(props.url); }}>\n        <FileCopyIcon />\n      </IconButton>\n      </DialogContentText>\n      <DialogActions>\n        <Button onClick={props.onClose}>\n          Close\n        </Button>\n      </DialogActions>\n    </DialogContent>\n  </Dialog>\n}\n\nSharingDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  url: PropTypes.string\n}\n\nexport default React.memo(SharingDialog);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplayIcon from '@material-ui/icons/Replay';\n\n/*\n  This file is based on the transfer-list example available in material UI.\n  https://material-ui.com/components/transfer-list/\n*/\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"auto\"\n  },\n  paper: {\n    width: 200,\n    height: 230,\n    overflow: \"auto\"\n  },\n  button: {\n    margin: theme.spacing(0.5, 0)\n  }\n}));\n\nexport default function TransferList({items, selectedItems, onChange}) {\n  const classes = useStyles();\n\n  const [checked, setChecked] = React.useState(items.map(item => false));\n\n  const handleChecked = (itemIndex) => {\n    const newChecked = [...checked.keys()].map(index=>(index===itemIndex ? !checked[index] : checked[index]));\n    setChecked( newChecked );\n  };\n\n  const handleCheckedRight = () => {\n    const newValues = selectedItems.concat( items.filter(item=>checked[item.value]) );\n    if(onChange){ onChange(newValues); }\n    setChecked(items.map(item => false))\n  };\n\n  const handleReset = () => {\n    if(onChange){ onChange([]); }\n    setChecked(items.map(item => false))\n  };\n\n  const customList = (items, checkable) => (\n    <Paper className={classes.paper}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map((item) => {\n          const labelId = `transfer-list-item-${item.value}-label`;\n\n          return (\n            <ListItem\n              key={item.value}\n              role=\"listitem\"\n              button\n              onClick={()=>{handleChecked(item.value)}}\n            >\n              { checkable &&\n                <ListItemIcon>\n                <Checkbox\n                  checked={checked[item.value]}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ \"aria-labelledby\": labelId }}\n                />\n                </ListItemIcon>\n              }\n              <ListItemText id={labelId} primary={item.label} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      justify=\"center\"\n      alignItems=\"center\"\n      className={classes.root}\n    >\n      <Grid item>{customList(items, true)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <IconButton\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedRight}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </IconButton>\n          <IconButton\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleReset}\n            aria-label=\"reset\"\n          >\n            <ReplayIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(selectedItems, false)}</Grid>\n    </Grid>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport CustomTransferList from \"./CustomTransferList\";\n\nfunction PatternCreateDialog(props)\n{\n  let [patternName, setPatternName] = React.useState(null);\n  let [patternRecipe, setPatternRecipe] = React.useState([]);\n\n\n  const closeAndCommit = (commit)=>{\n    if(commit && patternRecipe.length && patternName)\n    {\n      props.onChange({name: patternName, recipe: patternRecipe});\n    }\n    setPatternRecipe([]);\n    setPatternName(null);\n    props.onClose();\n  };\n\n  const patternChoices = [...props.patterns.keys()].map(\n    index =>{ return {value: index, label: props.patterns[index]}; }\n  );\n\n  const invalidPatternName = patternName && props.patterns.indexOf(patternName) !== -1;\n\n  return <Dialog\n    open={props.open}\n    onClose={props.onClose}\n    aria-labelledby=\"pattern-edit-dialog\"\n    aria-describedby=\"pattern-edit-dialog\"\n  >\n    <DialogContent>\n      <DialogContentText>\n        Combine Patterns\n      </DialogContentText>\n      <CustomTransferList\n        items={patternChoices}\n        selectedItems={patternRecipe}\n        onChange={setPatternRecipe}\n      />\n      <Box style={{display: \"flex\", flexDirection: \"column\"}}>\n        <TextField\n          error={invalidPatternName}\n          label=\"Pattern Name\"\n          helperText={invalidPatternName ? \"Pattern names must be unique.\" : undefined}\n          variant=\"outlined\"\n          onChange={(event)=>{setPatternName(event.target.value);}}\n          style={{alignSelf: \"flex-end\"}}\n        />\n      </Box>\n      <DialogActions>\n        <Button onClick={()=>{closeAndCommit(true)}} disabled={patternRecipe.length === 0 || !patternName || invalidPatternName}>\n          Confirm\n        </Button>\n        <Button onClick={()=>{closeAndCommit(false)}}>\n          Close\n        </Button>\n      </DialogActions>\n    </DialogContent>\n  </Dialog>\n}\n\nPatternCreateDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  patterns: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default PatternCreateDialog;\n","import React from 'react';\nimport Pattern from \"./Pattern\";\nimport PlaybackControls from \"./PlaybackControls\";\nimport notation from \"./notation\";\nimport InstrumentConfig from \"./instrumentConfig\";\nimport { createInstrumentMask } from \"./instrumentation\";\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TabitBar from \"./TabitBar\";\nimport PatternDrawer from \"./PatternDrawer\"\nimport ToneController from \"./ToneController\"\nimport SettingsDrawer from \"./SettingsDrawer\"\nimport { isMobile } from \"./Mobile\";\nimport SharingDialog from \"./SharingDialog\";\nimport PatternCreateDialog from \"./PatternCreateDialog\";\nimport Toolbar from '@material-ui/core/Toolbar';\n// todo: pass the needed .put function via a prop?\nimport * as SongStorage from \"./SongStorage\";\nimport memoizeOne from 'memoize-one';\n\nconst makeResolvedSettings = memoizeOne( (globalSettings, patternSettings) => {\n  let resolvedSettings = Object.assign({}, globalSettings);\n  if(patternSettings)\n  {\n    resolvedSettings = Object.assign(resolvedSettings, patternSettings);\n  }\n  return resolvedSettings;\n});\n\nclass SongView extends React.Component\n{\n\n  state = {\n    selectedPattern: 0,\n    patternSettings: this.props.songData.patternSettings,\n    formatSettings: this.props.songData.formatSettings,\n    songData: {instruments: this.props.songData.instruments,\n        instrumentIndex: this.props.songData.instrumentIndex,\n        instrumentMask: this.props.songData.instrumentMask,\n        patterns: this.props.songData.patterns,\n        title: this.props.songData.title\n    },\n    settingsOpen: false,\n    patternsOpen: true,\n    sharingDialogOpen: false,\n    patternCreateDialogOpen: false,\n    patternTime: null,\n    errorAlert: null,\n    locked: true\n  }\n\n  componentDidMount()\n  {\n    this.createController();\n    // save our work when we navigate away via tab-close\n    window.addEventListener('beforeunload', this.onSave);\n    if(isMobile()){ window.addEventListener(\"visibilitychange\", this.onHideView); }\n  }\n\n  createController()\n  {\n    if(this.audio){ this.audio.teardown(); }\n    const latencyHint = isMobile() ? \"playback\" : null;\n    const animateCallback = (time)=>{\n      const nullCheck = (this.state.patternTime === null) !== (time === null);\n      const currentBeatResolution = this.state.patternSettings[this.state.selectedPattern].beatResolution;\n      const currentBeat = Math.floor(this.state.patternTime / currentBeatResolution);\n      const nextBeat =  Math.floor(time / currentBeatResolution);\n      if( nullCheck || currentBeat !== nextBeat )\n      {\n        this.setState( {patternTime: time} )\n      }\n    };\n    this.audio = new ToneController(\n      this.state.songData.instrumentIndex,\n      this.state.songData.patterns,\n      100.0,\n      animateCallback,\n      latencyHint,\n      this.setError\n    );\n    this.audio.setActivePattern( this.state.songData.patterns[this.state.selectedPattern].name );\n  }\n\n  removePattern = (index) =>\n  {\n    if(this.audio){this.audio.stop();}\n\n    if( this.state.songData.patterns.length === 1 )\n    {\n      // don't let the app get into a bad state\n      return this.setError(\"Can't delete the last pattern\")\n    }\n\n    const indices = [...Array(this.state.songData.patterns.length).keys()].filter(ix => ix !== index);\n    const newPatterns = indices.map( ix => this.state.songData.patterns[ix] );\n    const patternSettings =  indices.map( ix => this.state.patternSettings[ix] );\n    const updatedSongData = Object.assign(\n      Object.assign({}, this.state.songData),\n      {patterns: newPatterns}\n    );\n    // if ix === selected, use the lower pattern index\n    // ix < selected shift down by one to keep the same pattern\n    // ix > selected, keep the same index\n    const samePatternIndex = index <= this.state.selectedPattern ? this.state.selectedPattern - 1 : this.state.selectedPattern;\n    // note that since we sometimes shift down, let's just bound ourselves sanely\n    const boundedPatternIndex = Math.min( Math.max( 0, samePatternIndex ), indices.length - 1 );\n\n    this.setState(\n      {\n        songData: updatedSongData,\n        patternSettings: patternSettings,\n        selectedPattern: boundedPatternIndex\n      },\n      () => {\n        this.createController();\n      }\n    );\n\n  }\n\n  addCombinedPattern = (name, recipe) =>\n  {\n    if(this.audio){this.audio.stop();}\n\n    let pattern = notation.clonePattern(name, this.state.songData.patterns[recipe[0].value]);\n    for(let recipeIndex = 1; recipeIndex < recipe.length; ++recipeIndex)\n    {\n      pattern = notation.combinePatterns(name, pattern, this.state.songData.patterns[recipe[recipeIndex].value])\n    }\n\n    const patternSettings = notation.guessPerPatternSettings(pattern.instrumentTracks);\n\n    const updatedSongData = Object.assign(\n      Object.assign({}, this.state.songData),\n      {patterns: this.state.songData.patterns.concat(pattern)}\n    );\n\n    this.setState(\n      {songData: updatedSongData, patternSettings: this.state.patternSettings.concat(patternSettings)},\n      () => {\n        this.createController();\n      }\n    );\n  }\n\n  componentWillUnmount()\n  {\n    // save our work, as we may be about to navigate away somewhere else in tabit\n    this.onSave();\n    window.removeEventListener('beforeunload', this.onSave);\n    if(isMobile()){ window.removeEventListener(\"visibilitychange\", this.onHideView); }\n    if( this.audio )\n    {\n      this.audio.teardown();\n      delete this.audio;\n    }\n  }\n\n  getExportState()\n  {\n    return {\n      instruments : this.state.songData.instruments,\n      instrumentIndex : this.state.songData.instrumentIndex,\n      patterns : this.state.songData.patterns,\n      songName: this.state.songData.title,\n      formatSettings: this.state.formatSettings,\n      patternSettings : this.state.patternSettings,\n      version: \"1.1.0\"\n    };\n  }\n\n  // note these functions could cleanly be locally defined\n  // but react gives better performance by not doing this, sadly\n  changeInstruments = (instruments) =>\n  {\n    let songData = Object.assign({}, this.state.songData);\n    songData.instruments = instruments;\n    songData.instrumentMask = createInstrumentMask(this.state.songData.instrumentIndex, instruments);\n    this.setState( {\n      songData: songData\n    } );\n  }\n\n  sendVolumeEvent = (event) =>\n  {\n    // TODO: volume & muted should not be ephemeral, they should go into\n    // exportState so that a mixing-profile can be preserved\n    if(\"volume\" in event)\n    {\n      const instrumentID = this.state.songData.instrumentIndex[ event.instrument ].id;\n      if(this.audio){ this.audio.setVolumeForInstrument( instrumentID, event.volume ); }\n    }\n    else if(\"muted\" in event)\n    {\n      const instrumentID = this.state.songData.instrumentIndex[ event.instrument ].id;\n      if(this.audio){ this.audio.setMutedForInstrument( instrumentID, event.muted ); }\n    }\n  }\n\n  handleSettingsChange = (change) =>\n  {\n    // change returns an object with .key, .value and .local\n    if(change.local)\n    {\n      const updateState = (state) => {\n        const modifiedSettings = state.patternSettings.map( (settings, index) => {\n          if(index !== state.selectedPattern){ return settings; }\n          else {\n            return Object.assign(\n              {},\n              state.patternSettings[state.selectedPattern],\n              {[change.key]: change.value}\n            );\n          }\n        });\n        return {patternSettings: modifiedSettings};\n      };\n      this.setState(updateState);\n    }\n    else\n    {\n      const updatedSettings = Object.assign(\n        {},\n        this.state.formatSettings,\n        {[change.key]: change.value}\n      );\n      this.setState(\n        {formatSettings: updatedSettings}\n      )\n    }\n  };\n\n  handlePatternsToggle = (e) => {\n    this.setState( { patternsOpen : !this.state.patternsOpen } );\n  };\n\n  handleSettingsToggle = (e) => {\n    this.setState( { settingsOpen : !this.state.settingsOpen } );\n  };\n\n  selectPattern = (patternIndex) =>\n  {\n    // it's important to do this before we re-render components\n    if(this.audio)\n    {\n      this.audio.setActivePattern(\n        this.state.songData.patterns[patternIndex].name\n      );\n    }\n\n    this.setState(\n      { selectedPattern: patternIndex }\n    );\n  };\n\n  onShare = () => {\n    SongStorage.put(this.getExportState())\n      .then(songID =>{\n        const permanentUrl = window.origin + process.env.PUBLIC_URL + \"/song/\" + songID;\n        this.setState({permanentUrl: permanentUrl, sharingDialogOpen: true});\n      })\n      .catch((err)=>{alert(\"Couldn't contact external server at this time.\")});\n  };\n\n  onDownload = () => {\n    SongStorage.download(this.getExportState())\n  }\n\n  closePatternCreateDialog = () => {\n    this.setState({patternCreateDialogOpen: false});\n  }\n\n  openPatternCreateDialog = () => {\n    this.setState({patternCreateDialogOpen: true});\n  }\n\n  onSave = () => {\n    SongStorage.saveToLocalHistory(this.getExportState());\n  }\n\n  onHideView = () => {\n      this.onStop();\n  }\n\n  handleSettingsToggle = (e)=>{\n    this.setState({settingsOpen: !this.state.settingsOpen});\n  }\n\n  handlePatternsToggle = (e)=>{\n    this.setState({patternsOpen: !this.state.patternsOpen})\n  }\n\n  closeSharingDialog = ()=>{\n    this.setState({sharingDialogOpen:false});\n  }\n\n  onPlay = () => {\n    if(this.audio){ this.audio.play(); }\n  }\n\n  onStop = () => {\n    if(this.audio){ this.audio.stop(); }\n    // this in most cases seems to be already covered by the animation\n    // but not all cases\n    this.setState({patternTime: null});\n  }\n\n  onSetTempo = (tempo) => {\n    if(this.audio){ this.audio.setTempo(tempo); }\n  }\n\n  setError = (message) => {\n    this.setState({errorAlert: message});\n  }\n\n  onToggleLocked = () => {\n    this.setState(\n      (state)=>{\n        const nowLocked = !state.locked;\n        if(!nowLocked && this.audio){ this.audio.stop(); }\n        // if we're unlocking the patterns, pop open the pattern drawer\n        return {locked: nowLocked, patternsOpen: state.patternsOpen || !nowLocked};\n      }\n    );\n  }\n\n  onToggleCompact = ()  => {\n    this.setState(\n      (state)=>{\n        const nowCompact = !this.state.formatSettings.compactDisplay;\n        const updatedSettings = {\n          ...this.state.formatSettings,\n          compactDisplay: nowCompact\n        };\n        return {formatSettings: updatedSettings};\n      }\n    );\n  }\n\n  render()\n  {\n    const pattern = this.state.songData.patterns[\n      this.state.selectedPattern\n    ];\n    const patternSpecifics = ( this.state.songData && this.state.patternSettings) ? this.state.patternSettings[this.state.selectedPattern] : null;\n    const resolvedSettings = makeResolvedSettings( this.state.formatSettings, patternSpecifics );\n    const mobile = isMobile();\n    const instrumentConfigColumns = mobile ? 12 : 8;\n    // todo: make this Toolbar unnecessary, it ensures pattern renders in the right place right now\n\n    return (\n      <div className=\"App\" style={{width: \"100%\", minWidth: \"100%\"}}>\n        <Toolbar variant=\"dense\"/>\n        <TabitBar\n          title={this.state.songData.title}\n          settingsToggle={this.handleSettingsToggle}\n          patternsToggle={this.handlePatternsToggle}\n          onShare={this.onShare}\n          locked={this.state.locked}\n          onLockUnlock={this.onToggleLocked}\n          compact={this.state.formatSettings.compactDisplay}\n          onToggleCompact={this.onToggleCompact}\n        />\n        {this.state.errorAlert &&\n        <Snackbar severity=\"error\" open={true} autoHideDuration={5000} onClose={() => {this.setState({errorAlert: null})}}>\n          <Alert severity=\"error\"  onClose={() => {this.setState({errorAlert: null})}}>\n            <AlertTitle>Error</AlertTitle>\n            <Box>\n            {this.state.errorAlert.split(\"\\n\").map(line=><Box>{line}</Box>)}\n            </Box>\n          </Alert>\n        </Snackbar>\n        }\n        <div style={{\n          display: \"flex\",\n          overflowX: \"auto\",\n          flexDirection: \"column\",\n          justifyContent: \"safe center\",\n          width: \"100%\",\n          maxWidth: \"100%\"\n        }}>\n          <Pattern\n            instruments={this.state.songData.instruments}\n            tracks={pattern.instrumentTracks}\n            config={resolvedSettings}\n            patternTime={this.state.patternTime}\n          />\n        </div>\n        <div style={{display: \"flex\", flexGrow : 1}} />\n        <PlaybackControls\n          onPlay={this.onPlay}\n          onStop={this.onStop}\n          onTempoChange={this.onSetTempo}\n          disabled={!this.state.locked}\n        />\n        <div style={{\n          display: \"flex\",\n          overflowX: \"auto\",\n          flexDirection: \"column\",\n          justifyContent: \"safe center\",\n          width: \"100%\",\n          maxWidth: \"100%\"\n        }}>\n        <Grid container>\n        {instrumentConfigColumns < 12 ? <Grid item xs={(12 - instrumentConfigColumns) / 2} /> : null}\n        <Grid item xs={instrumentConfigColumns}>\n          <InstrumentConfig\n              instruments={this.state.songData.instruments}\n              instrumentIndex={this.state.songData.instrumentIndex}\n              instrumentMask={this.state.songData.instrumentMask}\n              onChange={this.changeInstruments}\n              onVolumeEvent={this.sendVolumeEvent}\n              showAdvanced={!this.state.locked}\n            />\n        </Grid>\n        {instrumentConfigColumns < 12 ? <Grid item xs={(12 - instrumentConfigColumns) / 2} /> : null}\n        </Grid>\n        </div>\n        <PatternDrawer\n          open={this.state.patternsOpen}\n          onOpen={this.handlePatternsToggle}\n          onClose={this.handlePatternsToggle}\n          patterns={this.state.songData.patterns}\n          selectPattern={this.selectPattern}\n          onRemove={!this.state.locked ? this.removePattern : undefined}\n          onAdd={!this.state.locked ? this.openPatternCreateDialog : undefined}\n        />\n        <SettingsDrawer\n          open={this.state.settingsOpen}\n          onOpen={this.handleSettingsToggle}\n          onClose={this.handleSettingsToggle}\n          anchor=\"right\"\n          pattern={pattern}\n          settings={resolvedSettings}\n          onChange={this.handleSettingsChange}\n          onSave={this.onDownload}\n         />\n        <SharingDialog\n          open={this.state.sharingDialogOpen}\n          onClose={this.closeSharingDialog}\n          url={this.state.permanentUrl}\n          />\n        <PatternCreateDialog\n          open={this.state.patternCreateDialogOpen}\n          onClose={this.closePatternCreateDialog}\n          onChange={(change)=>{this.addCombinedPattern(change.name, change.recipe)}}\n          patterns={[...this.state.songData.patterns.keys()].map(index=>this.state.songData.patterns[index].name)}\n        />\n      </div>\n    );\n  }\n};\n\nexport default SongView;\n","// h2.js\n\nimport track from \"./track\";\nimport xml2js from \"xml2js\";\nimport { calculateResolution } from \"./utilities\";\n\n// TODO: This file was written with the hope that using xml2js would make things cleaner\n// it didn't, purely because xml2js is an okay library doing a difficult task\n// it ensures to produce a good json file but in doing so muddles the data a bit.\n// Should replace this with dom-parser and window.DOMParser\n\n// let's think about the data representation needed\n\nfunction calculatePatternResolution(pattern, size)\n{\n  const positions = Array.from(pattern.notes, note => note.position)\n  return calculateResolution(positions, size);\n}\n\nfunction parseHydrogenJs(result)\n{\n    // fixme:\n    // this parsing often assumes there's >=2 elements\n\n    // this \"zero\" here is presumably an artefact of xml --> json representation\n    const instrumentElements = result.song.instrumentList[0].instrument;\n\n    // instruments\n    // [  { id, name } ]\n    const instrumentArray = Array.from(\n      instrumentElements,\n      function(element){\n        const instrumentComponent = element.instrumentComponent[0];\n        let inst = {\n          \"id\" : parseInt(element.id),\n          \"name\" : element.name[0],\n          \"volume\" : parseFloat(element.volume),\n          \"muted\" : element.isMuted[0] === \"true\",\n          \"gain\" : parseFloat(element.gain),\n          \"drumkit\" : element.drumkit[0]\n        };\n        if( \"layer\" in instrumentComponent )\n        {\n          inst[\"filename\"] = instrumentComponent.layer[0].filename[0];\n        }\n        return inst;\n      }\n    );\n\n    const patternElements = result.song.patternList[0].pattern;\n    // patterns\n    // [  { name, size, notes } ]\n    const patternArray = Array.from(\n      patternElements,\n      function(element){\n        const noteElements = element.noteList[0].note;\n        const patternSize = parseInt(element.size);\n        let notes = [];\n        if( noteElements )\n        {\n          // notes\n          // [ {position, instrument(id}]\n          notes = Array.from(\n            noteElements,\n            function(noteElement){\n              return {\"position\" : parseInt(noteElement.position), \"instrument\" : parseInt(noteElement.instrument)};\n            }\n          );\n\n          // hydrogen permits you to have notes that reach past the pattern size,\n          // they then get revealed when you extend the pattern,\n          // here's an easy point to get rid of them, we don't want them to factor into any calculations\n          notes = notes.filter( n => n.position < patternSize );\n        }\n        return {\n          \"size\" : patternSize,\n          \"name\" : element.name[0],\n          \"notes\" : notes\n        };\n      }\n    );\n\n    // transform pattern to a managable data\n    const patternsWithTracks = Array.from(\n      patternArray,\n      function(pattern)\n      {\n        const resolution = calculatePatternResolution(pattern, pattern.size);\n        let instrumentTracks = {};\n        for( const instrument of instrumentArray )\n        {\n          const relevantNotes = pattern.notes.filter(\n            note => (note.instrument === instrument.id)\n          );\n          const relevantHits = Array.from(\n            relevantNotes,\n            note => note.position\n          );\n          instrumentTracks[ instrument.id.toString() ] = track.fromPositions( relevantHits, pattern.size, resolution);\n        }\n        pattern.resolution = resolution;\n        pattern.instrumentTracks = instrumentTracks;\n        return pattern;\n      }\n    );\n\n    // todo: refactor into (at least one) separate function\n    if(result.song.virtualPatternList)\n    {\n      // so unfortunately, virtualPatternGroup represents a directional graph and we have to build\n      // the tree of dependencies for each node, we implement this in a very simplistic way\n      // let's build a mapping( name -> [ names ] ) and continue to resolve it\n      // until we're done\n      const virtualPatternGroups = result.song.virtualPatternList[0].pattern;\n      if( virtualPatternGroups )\n      {\n        // each element looks like\n        //\n        // <pattern>\n        // <name>p2-a-djembe</name>\n        // <virtual>p2-a-bass</virtual>\n        // <virtual>p2-snare</virtual>\n        // </pattern>\n\n        let patternToRelated = {};\n\n        // record initial relations\n        for( const virtualGroup of Array.from(virtualPatternGroups) )\n        {\n          const rootPatternName = virtualGroup.name[0];\n          const relatedPatterns = Array.from(virtualGroup.virtual);\n          patternToRelated[rootPatternName] = new Set(relatedPatterns);\n        }\n\n        // expand connections until our object stops changing, brute-force\n        // this is a relatively large limit but is better than the potential of an infinite loop\n        // I think 3 layers would be pushing this feature\n        const MAX_ITERATIONS = 20;\n        for(let iteration = 0; iteration < MAX_ITERATIONS; ++iteration)\n        {\n          let expandedObject = {};\n          // we could do a check at the end of each loop, but it's easier to track object equality this way\n          let objectHasExpanded = false;\n          for(const [root, related] of Object.entries(patternToRelated))\n          {\n            let expandedNodeSet = new Set(related);\n            for( const node of expandedNodeSet )\n            {\n              if( node in patternToRelated )\n              {\n                // set union\n                expandedNodeSet = new Set([...expandedNodeSet, ...patternToRelated[node]]);\n              }\n            }\n            objectHasExpanded = objectHasExpanded || ( expandedNodeSet.size !== related.size );\n            expandedObject[ root ] = expandedNodeSet;\n\n          }\n          // exit if no change\n          if(!objectHasExpanded)\n          {\n            break;\n          }\n          // throw if we've failed to resolve all the connections by now, morelikely something has gone wrong\n          if( iteration === MAX_ITERATIONS )\n          {\n            throw new Error(\"Reached max virtual_pattern recursion depth.\");\n          }\n          // otherwise update mapping and continue\n          patternToRelated = expandedObject;\n        }\n\n        for( const [rootPatternName, relatedPatternSet] of Object.entries(patternToRelated) )\n        {\n          // could do filter, and assert on length?\n          let rootPattern = patternsWithTracks.find(p => p.name === rootPatternName);\n          for( const patternToMergeName of relatedPatternSet )\n          {\n            const patternToMerge = patternsWithTracks.find(p => p.name === patternToMergeName );\n            for( const [id, t] of Object.entries(patternToMerge.instrumentTracks) )\n            {\n              if( id in rootPattern.instrumentTracks )\n              {\n                const merged = rootPattern.instrumentTracks[ id ].aggregate( t );\n                // we match hydrogen's implementation here and discard values past the length of the original track\n                merged.rep.length = rootPattern.size  / merged.resolution;\n                rootPattern.instrumentTracks[ id ] = merged;\n              }\n              else\n              {\n                // ensure track is the appropriate length & res\n                let copiedTrack = t.format(rootPattern.resolution);\n                copiedTrack.length = rootPattern.size  / rootPattern.resolution;\n                rootPattern.instrumentTracks[id] = copiedTrack;\n              }\n            }\n          }\n          // reassess resolution and apply to all tracks\n          // this may not be necessary but it's probably nice\n          const resolution = calculatePatternResolution(rootPattern, rootPattern.size);\n          rootPattern.resolution = resolution;\n          for( const [id, track] of Object.entries(rootPattern.instrumentTracks) )\n          {\n            // ensure that\n            rootPattern[id] = track.format( resolution );\n          }\n        }\n\n      }\n    }\n\n    return {\n      \"instruments\" : instrumentArray,\n      \"patterns\" : patternsWithTracks\n    }\n}\n\nasync function parseHydrogenPromise(xmlString)\n{\n  let parser = new xml2js.Parser();\n\n  return parser.parseStringPromise(xmlString).then(parseHydrogenJs);\n}\n\nconst moduleExports = { parseHydrogenPromise };\n\nexport default moduleExports;\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport SongLoaders from \"./SongLoaders\"\nimport * as SongStorage from \"./SongStorage\";\nimport SongView from \"./SongView\"\nimport {decodeState} from \"./SongStorage\";\nimport hash from \"object-hash\";\nimport h2 from \"./h2\"\n\nfunction WaitingMessage(props)\n{\n  return (\n    <div className=\"App\">\n      <div>\n        <CircularProgress color=\"secondary\"/>\n        <Typography> Loading song... </Typography>\n      </div>\n    </div>\n  );\n}\n\nclass ExampleSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load example data. \" +\n        \"This likely represents a bug - please raise an issue in github!\"\n      });\n    };\n    SongLoaders.LoadExample().then(\n      (songData) => {\n        this.setState(\n          { songData : songData }\n        );\n      }\n    ).catch(navigateHomeWithError);\n  }\n\n  render()\n  {\n    return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\nfunction SongNameFromFile(filename)\n{\n  if(filename === null || filename === undefined)\n  {\n    return null;\n  }\n  if( filename.includes(\".\") )\n  {\n    const songTitle = filename.split('.').slice(0, -1).join('.');\n    return songTitle;\n  }\n  else\n  {\n    return filename;\n  }\n}\n\nclass FileImportSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n    if(!this.props.filename)\n    {\n      // silently navigate home\n      let history = this.props.history;\n      history.push({pathname: '/'});\n      return;\n    }\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load \" + this.props.filename + \". \" +\n        \"If you're sure this is a Hydrogen file, please consider raising an issue in github!\"\n      });\n    };\n    if(this.props.filename.includes(\"h2song\"))\n    {\n      // assume it's a tabit file!\n        h2.parseHydrogenPromise(this.props.content)\n          .then(h => {\n            return SongLoaders.LoadJSON(\n              h,\n              SongNameFromFile(this.props.filename),\n              this.props.filename,\n              true // fromHydrogen\n            );\n          })\n          .then(setState)\n          .catch(navigateHomeWithError);\n    }\n    else\n    {\n      Promise.resolve(this.props.content)\n        .then((content)=>{\n          // in the case of localStorage API content will be an object already\n          return typeof(content) === \"string\" ? JSON.parse(content) : content;\n        })\n        .then( data => {\n          return SongLoaders.LoadJSON(\n            data,\n            data.songName ? data.songName : SongNameFromFile(this.props.filename),\n            this.props.filename,\n            false // fromHydrogen\n          );\n        } )\n        .then(setState)\n        .catch(navigateHomeWithError);\n    }\n  }\n\n  render()\n  {\n    return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\n\nclass SongStorageSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load song \" + this.props.songID + \" from database. \" +\n        \"This could represent a corrupted entry/a bug in our software. Please consider raising an issue in github!\"\n      });\n    };\n    SongStorage.get(this.props.songID)\n      .then( data => {\n        return SongLoaders.LoadJSON(\n          data,\n          data.songName,\n          data.loadedFile,\n          false // fromHydrogen\n        );\n      } )\n      .then(setState)\n      .catch(navigateHomeWithError);\n  }\n\n  render()\n  {\n    return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\nclass LocalStorageSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load recently viewed song \" + this.props.name + \". \"\n      });\n    };\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n\n    const history = SongStorage.getLocalHistory();\n    const matches = history.filter( song => ( song.id === this.props.songID ) );\n    if(matches.length < 1)\n    {\n      // provide no error message, its not currently logged\n      navigateHomeWithError();\n    }\n\n    Promise.resolve(matches[0])\n      .then( (song)=>{\n        const stateHash = hash(song.content);\n        if( stateHash !== this.props.songID )\n        {\n          throw new Error(\"Hash did not match\");\n        }\n        const decodedState = decodeState(song.content);\n        return decodedState;\n      }).then( data => {\n        return SongLoaders.LoadJSON(\n          data,\n          data.songName,\n          data.songName,\n          false // fromHydrogen\n        );\n      }).then(setState)\n      .catch(navigateHomeWithError);\n    }\n\n    render()\n    {\n      return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                                 : <WaitingMessage />;\n    }\n}\n\nexport {\n  ExampleSongView,\n  FileImportSongView,\n  SongStorageSongView,\n  LocalStorageSongView\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport TitleScreen from \"./TitleScreen\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  ExampleSongView,\n  FileImportSongView,\n  SongStorageSongView,\n  LocalStorageSongView\n} from \"./LazySongViews\";\n\nexport default function Routes(props) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = responsiveFontSizes( React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: '#d7ccc8'\n          },\n          secondary: {\n            main: '#00acc1'\n          }\n        },\n      }),\n    [prefersDarkMode]\n  ) );\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props)=>{\n              return <TitleScreen\n                history={props.history}\n                location={props.location}\n                error={props.location.error}\n              />\n            }}\n          />\n          <Route\n            exact\n            path=\"/example\"\n            render={(props)=>{\n              return <ExampleSongView\n                history={props.history}\n                location={props.location}\n              />\n            }}\n          />\n          <Route\n            path=\"/song/:songID\"\n            render={(props)=>{\n              return <SongStorageSongView\n                history={props.history}\n                location={props.location}\n                songID={props.match.params.songID}\n              />\n            }}\n          />\n          <Route\n            path=\"/import\"\n            render={(props)=>{\n              return <FileImportSongView\n                history={props.history}\n                location={props.location}\n                filename={props.location.filename}\n                content={props.location.content}\n              />\n            }}\n          />\n          <Route\n            path=\"/recent/:songID\"\n            render={(props)=>{\n              return <LocalStorageSongView\n                history={props.history}\n                location={props.location}\n                songID={props.match.params.songID}\n              />\n            }}\n          />\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  )\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import hash from \"object-hash\";\nimport zlib from \"zlib\";\nimport { saveAs } from 'file-saver';\n\nconst storageAvailable = (type) => {\n    // this is code copied from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage;\n    try {\n        storage = window[type];\n        let x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch(e) {\n    // accept certain types of exceptions as legitimate consequences of the feature working\n        return e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n};\n\nconst encodeState = (songData) =>\n{\n  // json\n  const js = JSON.stringify(songData);\n  // compress\n  const compressedState = zlib.deflateSync(js).toString(\"base64\");\n  return { state : compressedState };\n}\n\nconst decodeState = (state) =>\n{\n  const binaryBuffer = new Buffer(state.state, \"base64\");\n  const decompressedString = zlib.inflateSync(binaryBuffer);\n  return JSON.parse(decompressedString);\n};\n\nconst JSON_BIN_API = \"https://api.jsonbin.io\";\nconst JSON_BIN_API_BINS = JSON_BIN_API + \"/b\";\nconst JSON_BIN_API_SECRET = \"$2b$10$Z2eAUT2PfRKn5RB55/Y30ujW8aUB1CCgRuUua3Jo9JX2WTetZRfIG\";\nconst TABIT_SONG_COLLECTION_ID = \"60218fa606934b65f53046ad\";\n\nconst put = (exportState, name) =>\n{\n  const binName = name ? name : exportState.songName;\n  // names are limited to 128 characters, let's be safe\n  const binShort = binName.slice(0, 64);\n  const stateToShare = encodeState(exportState);\n  const metadata = {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      \"secret-key\": JSON_BIN_API_SECRET,\n      \"collection-id\": TABIT_SONG_COLLECTION_ID,\n      private: false,\n      name: binShort\n    },\n    body: JSON.stringify(stateToShare)\n  };\n  return fetch( JSON_BIN_API_BINS, metadata )\n    .then(response => {\n      if(!response.ok)\n      {\n        throw new Error(\"Failed to upload song\");\n      }\n      else\n      {\n        return response.json();\n      }\n    }).then(data => {\n      return data.id;\n    });\n}\n\nconst get = (binID) =>\n{\n  const metadata = {\n    headers: { 'Content-Type': 'application/json' },\n  };\n  return fetch( JSON_BIN_API_BINS + \"/\" + binID, metadata )\n    .then( response => {\n      if(!response.ok)\n      {\n        throw new Error(\"Failed to upload song\");\n      }\n      else\n      {\n        return response.json();\n      }\n    } )\n    .then( js => {\n      return decodeState(js);\n    });\n};\n\nconst getLocalHistory = () => {\n  if(!storageAvailable('localStorage'))\n  {\n    return [];\n  }\n  const jsonHistory = localStorage.getItem(\"tabit-history\");\n  const songHistory = jsonHistory ? JSON.parse(jsonHistory).sort( (a,b) =>(b.date - a.date) ) : [];\n  return songHistory;\n};\n\nconst saveToLocalHistory = (exportState) => {\n    const stateToShare = encodeState(exportState);\n    const stateHash = hash(stateToShare);\n    let history = getLocalHistory();\n    const relevantHistory = history.filter( song => ( song.id === stateHash && song.name === exportState.songName ) );\n    if( relevantHistory.length !== 0 )\n    {\n      // found at least one history entry identical to this one ...\n      // update one, so it's the most recent entry\n      relevantHistory[0].date = Date.now();\n    }\n    else\n    {\n      // add history entry\n      const historyEntry = {\n        name: exportState.songName,\n        id: stateHash,\n        date: Date.now(),\n        content: stateToShare\n      };\n      history.push(historyEntry);\n    }\n\n    // resort & cap how many files we remember\n    const restrictedHistory = history.sort( (a,b) =>(b.date - a.date)  ).slice(0, 30);\n    localStorage.setItem(\"tabit-history\", JSON.stringify(restrictedHistory));\n};\n\nconst download = (exportState) => {\n  const destFilename = exportState.songName + \".tabit\";\n  const js = JSON.stringify(exportState, null, 4);\n  const blob = new Blob([js], {type: \"application/json\"});\n  saveAs(blob, destFilename);\n};\n\nexport {\n  decodeState,\n  get,\n  put,\n  download,\n  getLocalHistory,\n  saveToLocalHistory\n};\n","// Mobile.js\n\nfunction  isMobile()\n{\n  // the simple version from\n  // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n  const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n  const toMatch = [\n      /Android/i,\n      /webOS/i,\n      /iPhone/i,\n      /iPad/i,\n      /iPod/i,\n      /BlackBerry/i,\n      /Windows Phone/i\n  ];\n\n  return toMatch.some((toMatchItem) => {\n      return userAgent.match(toMatchItem);\n  });\n}\n\nexport { isMobile };","import { calculateResolution } from \"./utilities\"\n\n// stolen from https://studymaths.co.uk/topics/findingHCFWithJavaScript.php\nfunction findHCF(x, y) {\n\n   // If the input numbers are less than 1 return an error message.\n   if (x < 1 || y < 1) {\n    throw new Error(\"x<1 || y<1\");\n      // return \"Please enter values greater than zero.\";\n   }\n\n   // Now apply Euclid's algorithm to the two numbers.\n   while (Math.max(x, y) % Math.min(x, y) !== 0) {\n      if (x > y) {\n         x %= y;\n      }\n      else {\n         y %= x;\n      }\n   }\n\n   // When the while loop finishes the minimum of x and y is the HCF.\n   return Math.min(x, y);\n}\n\nclass track\n{\n\n  constructor(patternArray, resolution)\n  {\n    if(patternArray.length === 0)\n    {\n      throw new Error(\"patternArray must not be zero length\");\n    }\n    this.rep = patternArray;\n    this.resolution = resolution;\n  }\n\n  length()\n  {\n    return this.rep.length * this.resolution;\n  }\n\n  empty()\n  {\n    return this.rep.reduce( (a,b) => ( a + b ) ) === 0;\n  }\n\n  _sumOverlapsOfArrays(a,b)\n  {\n    let count = 0;\n    for( let i = 0; i < a.length; ++i)\n    {\n      if(a[i] && b[i])\n      {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  static optimalResolution(a,b)\n  {\n    return findHCF(a,b);\n  }\n\n  countOverlaps(other)\n  {\n    if( this.resolution === other.resolution )\n    {\n      return this._sumOverlapsOfArrays( this.rep, other.rep );\n    }\n    else\n    {\n      const hcf = track.optimalResolution(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return this._sumOverlapsOfArrays( a.rep, b.rep );\n    }\n  }\n\n  aggregate(other)\n  {\n\n    if( this.resolution === other.resolution )\n    {\n      // when we aggregate, we specifically\n      const length = Math.max( this.rep.length, other.rep.length );\n      const pat = new Array(length).fill(0);\n      for(let index = 0; index < pat.length; ++index)\n      {\n        pat[index] = ( ( index < this.rep.length ) ? this.rep[index] : 0 )\n                  || ( ( index < other.rep.length ) ? other.rep[index] : 0 );\n      }\n      return new track( pat, this.resolution );\n    }\n    else\n    {\n      const hcf = track.optimalResolution(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return a.aggregate(b);\n    }\n  }\n\n  static representPoints(points, resolution, size)\n  {\n    if( size <= 0 )\n    {\n      throw new Error(\"size must be greater than zero\");\n    }\n    if( size < resolution || (size % resolution) !== 0)\n    {\n      throw new Error(\"resolution must be less than size and divide it evenly\");\n    }\n    let s = new Array(size / resolution).fill(0);\n    for( const p of points )\n    {\n      if( (p % resolution) !== 0)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" at resolution \" + resolution.toString());\n      }\n      if (p >= size)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" for invalid specified size \" + size.toString());\n      }\n      const arrayIndex = p / resolution;\n      s[arrayIndex] = 1;\n    }\n    return s;\n  }\n\n  format(formatResolution)\n  {\n    // formatResolution must cleanly divide for every hit & the length of the pattern\n\n    const totalLength = (this.resolution * this.rep.length);\n    const points = this.toPoints();\n    const rep = track.representPoints(points, formatResolution, totalLength);\n    if(!rep)\n    {\n      return null;\n    }\n    return new track(\n      rep,\n      formatResolution\n    );\n  }\n\n  toPoints()\n  {\n    let points = [];\n    for( const arrayIndex of Array(this.rep.length).keys() )\n    {\n      const indicator = this.rep[arrayIndex];\n      if(indicator)\n      {\n        points.push( this.resolution * arrayIndex )\n      }\n    }\n    return points;\n  }\n\n  static fromPositions(positions, size, resolution = null)\n  {\n    const resolutionToUse = resolution ?? calculateResolution( positions, size );\n    return new track(\n      track.representPoints(positions, resolutionToUse, size),\n      resolutionToUse\n    );\n  }\n\n  static combine(a, b, size, resolution)\n  {\n    if(!a && !b)\n    {\n      throw new Error(\"Can't combine two null tracks\");\n    }\n    if(!size || !resolution)\n    {\n      throw new Error(\"Need size and resolution parameters to be set\");\n    }\n    const pointsA = a ? a.toPoints() : [];\n    const sizeA = a ? a.length() : size - b.length();\n    const pointsB = b ? b.toPoints().map(ix => ix + sizeA) : [];\n    const allPoints = [ ...pointsA, ...pointsB ];\n    return track.fromPositions(allPoints, size, resolution);\n  }\n\n  clone()\n  {\n    return new track( [...this.rep], this.resolution );\n  }\n}\n\nexport default track;\n"],"sourceRoot":""}
{"version":3,"sources":["track.js","utilities.js","Mobile.js","App.js","formatSettings.js","FileImport.js","h2.js","Part.js","PartWithTitle.js","Pattern.js","Audio.js","ToneBoard.js","Routes.js","serviceWorker.js","index.js","notation.js","instrumentation.js","instrumentConfig.js"],"names":["findHCF","x","y","Error","Math","max","min","track","patternArray","resolution","length","this","rep","reduce","a","b","count","i","other","_sumOverlapsOfArrays","hcf","formatResolution","pat","Array","fill","index","aggregate","totalLength","points","toPoints","representPoints","keys","arrayIndex","push","size","s","p","toString","positions","resolutionToUse","calculateResolution","implicitPositions","concat","allNotesPass","isMobile","userAgent","navigator","vendor","window","opera","some","toMatchItem","match","theme","createMuiTheme","palette","type","primary","main","secondary","ignoreEvent","event","key","getJsonStorageUrl","slug","getJsonDestinationUrl","modalStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","background","border","boxShadow","shadows","padding","spacing","App","props","state","instruments","instrumentIndex","instrumentMask","patterns","formatSettings","Object","assign","DefaultSettings","patternSettings","loadedFile","selectedPattern","settingsOpen","patternsOpen","progress","showSharingDialog","showTitleOptions","undefined","params","song","permanentUrl","pattern","React","createRef","fetch","then","response","json","js","decodedState","decodeState","hash","handleJson","catch","e","setState","alert","destFilename","fileParts","split","slice","join","JSON","stringify","getExportState","blob","Blob","saveAs","zlib","deflateSync","binaryBuffer","Buffer","decompressedString","inflateSync","parse","stateToShare","encodeState","stateHash","uploadUrl","metadata","method","headers","body","origin","err","from","notation","guessPerPatternSettings","instrumentTracks","title","prevState","createInstrumentMask","patternData","replacedTracks","entries","id","trackData","patternWithTracks","createTracks","file","name","includes","h2","parseHydrogenPromise","content","h","assessedInstruments","figureInstruments","DEFAULT_INSTRUMENT_SYMBOLS","activeInstrumentation","volume","figurePatternSettings","error","Promise","resolve","patternIndex","resolvedSettings","Fragment","tracks","config","active","ref","onPatternTimeChange","time","current","k","createObjects","kuva","trackLength","t","optionalAlert","severity","controls","variant","onClick","loadExample","bind","style","margin","onImport","handleFileImport","accept","waitingMessage","position","bottom","href","iOS","mobile","classes","handlePatternsClose","disableBackdropTransition","disableDiscovery","className","drawer","open","onOpen","onClose","drawerHeader","drawerContainer","map","button","selectPattern","patternConfig","handleDrawerClose","patternToRender","patternDetails","getTrackLength","anchor","drawerPaper","onChange","existingPatternSettings","existingGlobalSettings","v","settings","color","default","save","share","aria-labelledby","aria-describedby","copy","renderTitlePage","patternContent","renderPattern","process","browser","test","instrumentConfigColumns","renderSharingDialog","width","aria-label","edge","clsx","hide","flexGrow","container","item","xs","onVolumeEvent","instrument","muted","renderPatternDrawer","renderSettingsDrawer","mainContent","renderMainContent","Component","withStyles","withRouter","useStyles","makeStyles","formControl","minWidth","camelToReadable","spacedString","replace","toUpperCase","FormatSettings","useTheme","tokenStateToItem","value","tokenItemToState","handleOptionChange","updatedState","handleCheckedChange","target","checked","createOptionMenu","options","itemToState","stateToItem","idString","labelId","op","lineLengths","beatResolution","sort","beatResolutions","c","lineResolution","root","FORMAT_CONFIG_STRINGS","prev","curr","FORMAT_CONFIG_BOOLS","control","label","parseInt","r","DEFAULT_FORMAT_CONFIG","FileImport","hiddenFileInput","fileObject","files","reader","FileReader","onload","loadEvent","result","readAsText","buttonProps","click","hidden","calculatePatternResolution","notes","note","parseHydrogenJs","instrumentElements","instrumentList","instrumentArray","element","instrumentComponent","inst","parseFloat","isMuted","gain","drumkit","layer","filename","patternElements","patternList","noteElements","noteList","patternSize","noteElement","filter","n","patternsWithTracks","relevantNotes","relevantHits","fromPositions","virtualPatternList","virtualPatternGroups","patternToRelated","virtualGroup","rootPatternName","relatedPatterns","virtual","Set","iteration","expandedObject","objectHasExpanded","related","expandedNodeSet","node","relatedPatternSet","rootPattern","find","patternToMergeName","patternToMerge","merged","copiedTrack","format","xmlString","parser","xml2js","Parser","parseStringPromise","Part","values","formatPatternString","restMark","patternResolution","patternLines","chunkArray","beatsPerLine","beatChunkSize","linesWithBeats","line","lineIndices","formatLine","startBeat","beats","lineMark","beat","activeNote","showBeatMark","beatMark","numberLine","createNumberMarker","numberRestMark","beatChunks","showBeatNumbers","lineIndex","whiteSpace","PartWithTitle","Title","headingLevel","defaultLevel","safeHeading","toLowerCase","getTitleType","instrumentName","Pattern","patternTime","instrumentIndices","floor","fontFamily","textAlign","Audio","AudioContext","webkitAudioContext","minResolution","empty","combined","peakValue","channel","numberOfChannels","combinedChannel","getChannelData","sample","abs","peakAmplitude","context","sounds","tempo","determineTrackLength","trackLengthSamples","totalSamples","samplesPerHydrogen","createBuffer","selected","audioBuffer","audioChannel","trackPoints","sampleStart","normalizeAudioBuffer","buffer","source","createBufferSource","loop","playbackRate","connect","destination","DRUMKITS","ToneBoard","samplerCount","sequences","Tone","toDestination","bpm","drumkitName","expectedSamplerCount","mapping","selectedInstrument","player","mute","clampedVolume","relativeUrl","chooseAppropriateUrlForInstrument","samples","determineMinResolution","patternLength","tick","_part","start","now","toSeconds","timeFromBarEnd","loopEnd","queueTransition","enableNewTrack","setLoopPoints","scheduleOnce","sampleCount","expectedSampleCount","indexFromStart","lastTickTime","trackLengthRes","samplesReady","schedule","notePosition","stop","populateSamples","createSequences","schedulePlaybackForNewTracks","prevProps","snapshot","set","Slider","defaultValue","step","valueLabelDisplay","IconButton","play","Grid","tempoControl","Routes","basename","path","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","console","message","formatConfig","propName","hasOwnProperty","str","chunkSize","RegExp","chunks","lineLength","beatCount","ceil","numberMarkerArray","asHTML","validateConfig","formatSymbol","symbol","numericPosition","formattedLine","charAt","lineWithBeats","chunkString","trackDict","defaultLineResolution","charIndex","trackID","trackSymbol","trackInstance","resolveConfig","patternString","lineArray","formattedLineArray","formatLineWithMarkers","normalizeInstrumentsForFiguring","nInst","manageAccentOrGhost","accentSymbol","ghostSymbol","outputInstruments","t0","t1","zeroLouder","activeInstruments","nonTrivialInstruments","instrumentID","add","has","defaultSymbolForSingleInstrument","symbolConfig","lowerName","instrumentsRaw","output","worthwhileInstruments","relevantTracks","trackIsClick","tomIndex","bassIndex","collated","candidate","clickTrack","hitTrack","instrumentIsTom","rawInstrumentName","lastTrack","figureClickyInstruments","djembeTracks","slapArray","toneArray","bassArray","djembeMapping","figureDjembes","figureSnares","figureShakers","instrumentUsed","ThinFormControlLabel","marginLeft","marginRight","FormControlLabel","InlinableIconButton","NoDividerCenterTableCell","borderBottom","paddingBottom","TableCell","CenterTableCell","VolumeWidget","useState","setActive","sliderValue","setSliderValue","sliderRef","useRef","height","FixedHeightStylings","top","SliderStyles","paddingLeft","IconStyles","onClickNHold","dispatchEvent","nativeEvent","onEnd","disableRipple","disableFocusRipple","onMuteToggle","orientation","onChangeCommitted","setVolume","fontSize","InstrumentConfig","renamingInstrument","setRenamingInstrument","nameState","setNameState","createCell","align","oldInstrumentIndex","findIndex","dstInstrumentIndex","oldInstrument","replacedSrcInstrument","dstInstrument","replacedInstruments","handleChange","createMatchingRow","component","scope","removeInstrument","editSymbol","setEditSymbol","editSymbolState","setEditSymbolState","autoFocus","fullWidth","trim","extraInstrument","updatedSymbol","table","currentSymbol","startEditingSymbol","baseInstrumentIndex","baseInstrumentId","targetInstrumentIndex"],"mappings":"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","file":"static/js/main.e0f2ba23.chunk.js","sourcesContent":["import { calculateResolution } from \"./utilities\"\n\n// stolen from https://studymaths.co.uk/topics/findingHCFWithJavaScript.php\nfunction findHCF(x, y) {\n\n   // If the input numbers are less than 1 return an error message.\n   if (x < 1 || y < 1) {\n    throw new Error(\"x<1 || y<1\");\n      // return \"Please enter values greater than zero.\";\n   }\n\n   // Now apply Euclid's algorithm to the two numbers.\n   while (Math.max(x, y) % Math.min(x, y) !== 0) {\n      if (x > y) {\n         x %= y;\n      }\n      else {\n         y %= x;\n      }\n   }\n   \n   // When the while loop finishes the minimum of x and y is the HCF.\n   return Math.min(x, y);\n}\n\nclass track\n{\n  \n  constructor(patternArray, resolution)\n  {\n    if(patternArray.length === 0)\n    {\n      throw new Error(\"patternArray must not be zero length\");\n    }\n    this.rep = patternArray;\n    this.resolution = resolution;\n  }\n\n  length()\n  {\n    return this.rep.length * this.resolution;\n  }\n\n  empty()\n  {\n    return this.rep.reduce( (a,b) => ( a + b ) ) === 0;\n  }\n\n  _sumOverlapsOfArrays(a,b)\n  {\n    let count = 0;\n    for( let i = 0; i < a.length; ++i)\n    {\n      if(a[i] && b[i])\n      {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  countOverlaps(other)\n  {\n    if( this.resolution === other.resolution )\n    {\n      return this._sumOverlapsOfArrays( this.rep, other.rep );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return this._sumOverlapsOfArrays( a.rep, b.rep );\n    }\n  }\n\n  aggregate(other)\n  {\n\n    if( this.resolution === other.resolution )\n    {\n      // when we aggregate, we specifically\n      const length = Math.max( this.rep.length, other.rep.length );\n      const pat = new Array(length).fill(0);\n      for(let index = 0; index < pat.length; ++index)\n      {\n        pat[index] = ( ( index < this.rep.length ) ? this.rep[index] : 0 )\n                  || ( ( index < other.rep.length ) ? other.rep[index] : 0 );\n      }\n      return new track( pat, this.resolution );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return a.aggregate(b);\n    }\n  }\n\n  static representPoints(points, resolution, size)\n  {\n    if( size <= 0 )\n    {\n      throw new Error(\"size must be greater than zero\");\n    }\n    if( size < resolution || (size % resolution) !== 0)\n    {\n      throw new Error(\"resolution must be less than size and divide it evenly\");\n    }\n    let s = new Array(size / resolution).fill(0);\n    for( const p of points )\n    {\n      if( (p % resolution) !== 0)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" at resolution \" + resolution.toString());\n      }\n      if (p >= size)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" for invalid specified size \" + size.toString());\n      }\n      const arrayIndex = p / resolution;\n      s[arrayIndex] = 1;\n    }\n    return s;\n  }\n\n  format(formatResolution)\n  {\n    // formatResolution must cleanly divide for every hit & the length of the pattern\n\n    const totalLength = (this.resolution * this.rep.length);\n    const points = this.toPoints();\n    const rep = track.representPoints(points, formatResolution, totalLength);\n    if(!rep)\n    {\n      return null;\n    }\n    return new track(\n      rep,\n      formatResolution\n    );\n  }\n\n  toPoints()\n  {\n    let points = [];\n    for( const arrayIndex of Array(this.rep.length).keys() )\n    {\n      const indicator = this.rep[arrayIndex];\n      if(indicator)\n      {\n        points.push( this.resolution * arrayIndex )\n      }\n    }\n    return points;\n  }\n\n  static fromPositions(positions, size, resolution = null)\n  {\n    const resolutionToUse = resolution ?? calculateResolution( positions, size );\n    return new track( \n      track.representPoints(positions, resolutionToUse, size), \n      resolutionToUse\n    );\n  }\n}\n\nexport default track;","// utilities.js\n\nfunction calculateResolution(positions, size)\n{\n  // hydrogen treats 48 as a beat\n  const basesToTry = [\n    48, // beat\n    24, // 1/2 beat\n    16, // 1/3 beat\n    12, // 1/4\n    8, // 1/6 \n    6, // 1/8\n    4, // 1/12\n    3, // 1/16\n    2, // 1/24\n    1 // 1/48\n  ];\n\n  // note that, fundamentally the size of the pattern is a \"keypoint\"\n  // that needs to be properly recorded by the resolution\n  const implicitPositions = positions.concat( [size] );\n\n  for( const b of basesToTry )\n  {\n    let allNotesPass = true;\n    for( const p of implicitPositions )\n    {\n      if( (p % b) !== 0 )\n      {\n        allNotesPass = false;\n        break;\n      }\n    }\n    if(allNotesPass)\n    {\n      return b;\n    }\n  }\n  throw new Error(\"Failed to predict base\");\n}\n\nexport { calculateResolution };","// Mobile.js\n\nfunction  isMobile()\n{\n  // the simple version from\n  // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n  const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n  const toMatch = [\n      /Android/i,\n      /webOS/i,\n      /iPhone/i,\n      /iPad/i,\n      /iPod/i,\n      /BlackBerry/i,\n      /Windows Phone/i\n  ];\n\n  return toMatch.some((toMatchItem) => {\n      return userAgent.match(toMatchItem);\n  });\n}\n\nexport { isMobile };","import React from 'react';\nimport clsx from 'clsx';\nimport FileImport from \"./FileImport\";\nimport Pattern from \"./Pattern\";\nimport h2 from './h2';\nimport './App.css';\n\nimport { Alert } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// define mui theme, including responsiveFont\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n// drawer\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { withStyles } from '@material-ui/core/styles';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n// notationSettings\n\nimport {FormatSettings, DefaultSettings} from \"./formatSettings\";\nimport {createInstrumentMask, InstrumentConfig} from \"./instrumentConfig\";\nimport { activeInstrumentation, figureInstruments, DEFAULT_INSTRUMENT_SYMBOLS } from \"./instrumentation\";\nimport notation from \"./notation\";\n\nimport Grid from '@material-ui/core/Grid';\n\n// load static data\nimport kuva from \"./kuva.json\";\nimport track from \"./track\";\n\nimport { saveAs } from 'file-saver';\n\nimport ToneBoard from \"./ToneBoard\";\nimport { withRouter } from \"react-router-dom\";\n\nimport hash from \"object-hash\";\nimport zlib from \"zlib\";\nimport copy from \"copy-to-clipboard\";\n\nimport { isMobile } from \"./Mobile\";\n\n// mui theme config\nlet theme = createMuiTheme( { \n  palette: { \n    type: 'dark',\n    primary: { main: '#36d9be' },\n    secondary: { main: '#f50057' }\n   } \n} );\n\nconst ignoreEvent = (event) => {\n  return event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift');\n};\n\nconst getJsonDestinationUrl = (slug) => {\n  const jsonbase_url = \"https://jsonbase.com/tabit-song/\" + slug;\n  return jsonbase_url;\n}\n\nconst getJsonStorageUrl = (slug) => {\n  // jsonbase doesn't give cross-origin headers, \n  // so we use cors-anywhere to add them\n\n  // this is obviously a hack, but it enables us to use jsonbase\n  // as a transitive (semi-permanent) database, on a static site!\n  const cors_url = \"https://cors-anywhere.herokuapp.com/\";\n  return cors_url + getJsonDestinationUrl(slug);\n}\n\nconst modalStyles = {\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n};\n\nclass App extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      // data\n      instruments : null,\n      instrumentIndex : null,\n      instrumentMask : null,\n      patterns : null,\n      formatSettings : Object.assign({}, DefaultSettings),\n      patternSettings : [],\n      // ui state\n      loadedFile : null,\n      selectedPattern : null,\n      settingsOpen : false,\n      patternsOpen : false,\n      progress : null,\n      showSharingDialog : false,\n      showTitleOptions : this.props.match.params.song === undefined,\n      permanentUrl : \"\"\n    };\n    this.pattern = React.createRef();\n  }\n\n  componentDidMount()\n  {\n    if( this.props.match.params.song )\n    {\n      fetch(getJsonStorageUrl(this.props.match.params.song))\n      .then( response => { return response.json(); } )\n      .then( js => {\n        const decodedState = this.decodeState(js);\n        const stateHash = hash(js);\n        if( stateHash !== this.props.match.params.song )\n        {\n          throw new Error(\"Hash did not match\");\n        }\n        this.handleJson(null, decodedState);\n      }).catch( (e) => {\n        this.setState({showTitleOptions : true});\n        alert(\"Song \" + this.props.match.params.song + \" could not be found.\" );\n      } );\n    }\n  }\n\n  getExportState()\n  {\n    return {\n      instruments : this.state.instruments,\n      instrumentIndex : this.state.instrumentIndex,\n      patterns : this.state.patterns,\n      formatSettings: this.state.formatSettings,\n      patternSettings : this.state.patternSettings\n    }\n  }\n\n  save()\n  {\n    let destFilename = \"download.tabit\";\n    if(this.state.loadedFile)\n    {\n      const fileParts = this.state.loadedFile.split(\".\");\n      if( fileParts.length === 1 )\n      {\n        destFilename = fileParts[0] + \".tabit\";\n      }\n      else\n      {\n        destFilename = fileParts.slice(0, fileParts.length - 1).join(\".\") + \".tabit\";\n      }\n    }\n\n    const js = JSON.stringify(this.getExportState(), null, 4);\n    const blob = new Blob([js], {type: \"application/json\"});\n    saveAs(blob, destFilename);\n  }\n\n  encodeState(state)\n  {\n    // json\n    const js = JSON.stringify(this.getExportState());\n    // compress\n    const compressedState = zlib.deflateSync(js).toString(\"base64\");\n    return { state : compressedState };\n  }\n\n  decodeState(state)\n  {\n    const binaryBuffer = new Buffer(state.state, \"base64\");\n    const decompressedString = zlib.inflateSync(binaryBuffer);\n    return JSON.parse(decompressedString);\n  }\n\n  share()\n  {\n    const stateToShare = this.encodeState(this.getExportState());\n    const stateHash = hash(stateToShare);\n    const uploadUrl = getJsonStorageUrl(stateHash);\n\n    const metadata = {\n      method: \"PUT\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(stateToShare)\n    };\n\n    const permanentUrl = window.origin + process.env.PUBLIC_URL + \"/song/\" + stateHash;\n    fetch(uploadUrl, metadata).then(\n      e => {\n        this.setState({permanentUrl : permanentUrl, showSharingDialog: true})\n      }\n    ).catch(err => { alert(\"Couldn't upload song at this time. Sorry for any inconvenience.\"); });\n  }\n\n  figurePatternSettings(patterns)\n  {\n    return Array.from(\n      patterns,\n      (p) => notation.guessPerPatternSettings( p.instrumentTracks )\n    );\n  }\n\n\n  handleJson(title, prevState)\n  {\n    const createTracks = (patternData) =>\n    {\n      // the instruments currently work as simple objects\n      // we need to create tracks!\n      let patterns = [];\n      for( let pattern of patternData )\n      {\n        let replacedTracks = {};\n        // todo: find a more compact way of doing this\n        for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n        {\n          replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n        }\n        let patternWithTracks = Object.assign({}, pattern);\n        patternWithTracks.instrumentTracks = replacedTracks;\n        patterns.push(patternWithTracks);\n      }\n      return patterns;\n    }\n\n    this.setState( {\n      instrumentIndex : prevState.instrumentIndex,\n      instrumentMask : createInstrumentMask(prevState.instrumentIndex, prevState.instruments),\n      instruments : prevState.instruments,\n      patterns : createTracks(prevState.patterns),\n      formatSettings : prevState.formatSettings,\n      patternSettings : prevState.patternSettings,\n      // general app state\n      loadedFile : title ?? prevState.loadedFile,\n      selectedPattern : prevState.patterns.length === 0 ? null : 0,\n      patternsOpen : prevState.patterns.length !== 0\n    } );\n  }\n\n  handleFileImport(e)\n  {\n    if( e.file.name.includes(\"h2song\") )\n    {\n      // e = { file : , content : }\n      h2.parseHydrogenPromise(e.content).then(h => {\n        const assessedInstruments = figureInstruments(h.instruments, DEFAULT_INSTRUMENT_SYMBOLS, h.patterns);\n        const instrumentIndex = activeInstrumentation(h.instruments, h.patterns);\n\n        // fixme: convert hydrogen volume/gain to normal values, somewhere\n        for( let instrument of instrumentIndex )\n        {\n          instrument.volume = 1.0;\n        }\n\n        this.setState({\n          // data\n          instrumentIndex : instrumentIndex,\n          instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n          instruments : assessedInstruments,\n          patterns : h.patterns,\n          patternSettings : this.figurePatternSettings(h.patterns),\n          // general app state\n          loadedFile : e.file.name,\n          patternsOpen : true,\n          selectedPattern : h.patterns.length === 0 ? null : 0,\n        });\n      }).catch( (error)=>{ alert(\"Failed to load file \" + e.file.name  + \" with error \" + error); } );\n    }\n    else\n    {\n\n      // assume it's a tabit file!\n      Promise.resolve(e.content)\n        .then(JSON.parse)\n        .then( prevState => { this.handleJson(e.file.name,prevState); } )\n        .catch( (error)=>{ alert(\"Failed to load file \" + e.file.name  + \" with error \" + error); } );\n    }\n  }\n\n  selectPattern(patternIndex)\n  {\n    this.setState( { selectedPattern: patternIndex } );\n  }\n\n  // todo: this is a separate component!\n  renderPattern(pattern, resolvedSettings)\n  {\n    return (\n      <React.Fragment>\n        <Pattern \n          instruments={this.state.instruments} \n          tracks={pattern.instrumentTracks}\n          config={resolvedSettings}\n          active={this.state.progress}\n          ref={this.pattern}\n        />\n        <ToneBoard \n          instruments={this.state.instruments} \n          instrumentIndex={this.state.instrumentIndex} \n          selectedPattern={pattern}\n          patterns={this.state.patterns}\n          onPatternTimeChange = {(time)=>{this.onPatternTimeChange(time);}}\n        />\n      </React.Fragment>\n    );\n  }\n\n  onPatternTimeChange(time)\n  {\n    this.pattern.current.onPatternTimeChange(time);\n  }\n\n  loadExample()\n  {\n    const createObjects = (state) => \n    {\n      // the instruments currently work as simple objects\n      // we need to create tracks!\n      for( let pattern of state.patterns )\n      {\n        let replacedTracks = {};\n        // todo: find a more compact way of doing this\n        for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n        {\n          replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n        }\n        pattern.instrumentTracks = replacedTracks;\n      }\n      return state;\n    }\n    const k = createObjects(kuva);\n    const assessedInstruments = figureInstruments(k.instruments, DEFAULT_INSTRUMENT_SYMBOLS, k.patterns);\n    const instrumentIndex = activeInstrumentation(k.instruments, k.patterns);\n\n    // fixme: convert hydrogen volume/gain to normal values, somewhere\n    for( let instrument of instrumentIndex )\n    {\n      instrument.volume = 1.0;\n    }\n\n    this.setState({\n      instrumentIndex : instrumentIndex,\n      instrumentMask : createInstrumentMask(instrumentIndex, assessedInstruments),\n      instruments : assessedInstruments,\n      patterns : k.patterns,\n      selectedPattern : k.patterns.length === 0 ? null : 0,\n      loadedFile : \"kuva.example\",\n      patternsOpen : true,\n      patternSettings : this.figurePatternSettings(k.patterns)\n    });\n  }\n\n  getTrackLength(pattern)\n  {\n    let trackLength = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        trackLength = Math.max( trackLength, t.length() );\n    }\n    return trackLength;\n  }\n\n  getResolution(pattern)\n  {\n    let resolution = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        resolution = Math.min( resolution, t.resolution );\n    }\n    return resolution;\n  }\n\n  renderTitlePage()\n  {\n    const showAlert = this.state.patterns != null && this.state.patterns.length === 0;\n    const optionalAlert = showAlert ? ( <Alert severity=\"error\">{this.state.loadedFile} contained no patterns! Try another.</Alert> )\n                                    : \"\";\n    // if a load of a song is in flight don't show file open buttons\n    const controls = (\n      <React.Fragment>\n        <Button variant=\"contained\" onClick={this.loadExample.bind(this)} style={{margin: \"1em\"}}>Load example</Button>\n        <FileImport\n          style={{margin: \"1em\"}}\n          variant=\"contained\"\n          onImport={this.handleFileImport.bind(this)}\n          accept=\".tabit,.h2song\"\n          />\n          {optionalAlert}\n      </React.Fragment>\n    );\n    const waitingMessage = (<React.Fragment>\n        <p> Loading song... </p>\n        <CircularProgress />\n      </React.Fragment>\n    );\n    return (\n      <React.Fragment>\n      <div>\n        <h2>tabit</h2>\n        <p>I read .h2songs and write tab</p>\n        {this.state.showTitleOptions ? controls : waitingMessage}\n      </div>\n      <div style={{ position:\"absolute\", bottom:0 }} >\n        <p>tabit relies on publicly available sound libraries listed at <a href=\"https://github.com/andrew-murray/tabit\">https://github.com/andrew-murray/tabit</a></p>\n      </div>\n      </React.Fragment>\n    );\n  }\n\n  renderPatternDrawer(iOS, mobile)\n  {\n    const classes = this.props;\n    const handlePatternsClose = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( { patternsOpen : false } );\n    };\n    const handlePatternsOpen = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( { patternsOpen : true } );\n    };\n\n    return (\n      <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n      className={classes.drawer}\n      variant={ mobile ? undefined : \"persistent\" }\n      open={this.state.patternsOpen}\n      onOpen={handlePatternsOpen}\n      onClose={handlePatternsClose}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handlePatternsClose}>\n              <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <div className={classes.drawerContainer}>\n          <List>\n            {(this.state.patterns ?? []).map( (pattern, index) => (\n              <ListItem button key={\"drawer-pattern\" + index.toString()} onClick={() => this.selectPattern(index)}>\n                  <ListItemText primary={pattern.name} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </SwipeableDrawer>\n    );\n  }\n\n\n\n  renderSettingsDrawer(iOS, mobile, patternConfig)\n  {\n    const classes = this.props;\n    const settingsChangeCallback = (config) => {\n      let existingPatternSettings = Array.from( this.state.patternSettings );\n      let existingGlobalSettings = Object.assign( {}, this.state.formatSettings );\n      for( let [k,v] of Object.entries(config) )\n      {\n        if( k in existingPatternSettings[this.state.selectedPattern] )\n        {\n          existingPatternSettings[this.state.selectedPattern][k] = v;\n        }\n        else\n        {\n          existingGlobalSettings[k] = v;\n        }\n      }\n      this.setState( { formatSettings: existingGlobalSettings, patternSettings : existingPatternSettings } );\n    };\n\n    const handleDrawerOpen = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( {settingsOpen : true} );\n    };\n\n    const handleDrawerClose = (e) => {\n      if( ignoreEvent(e) ){ return; }\n      this.setState( {settingsOpen : false} );\n    };\n\n    const patternToRender = this.state.patterns[this.state.selectedPattern];\n\n    const patternDetails = {\n      name : patternToRender.name,\n      resolution : patternToRender.resolution,\n      \"length\" : this.getTrackLength(patternToRender)\n    };\n\n    return (\n      <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n        className={classes.drawer}\n        variant={ mobile ? undefined : \"persistent\" }\n        anchor=\"right\"\n        open={this.state.settingsOpen}\n        onOpen={handleDrawerOpen}\n        onClose={handleDrawerClose}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n              <ChevronRightIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <FormatSettings\n          onChange={settingsChangeCallback}\n          settings={patternConfig}\n          pattern={patternDetails}\n          />\n        <Button\n          style={{backgroundColor : \"white\", color : theme.palette.background.default}}\n          onClick={(e) => { this.save(); } }\n        >Download</Button>\n        <Divider />\n        <Button\n          style={{backgroundColor : \"white\", color : theme.palette.background.default}}\n          onClick={(e) => { this.share(); } }\n        >Share</Button>\n      </SwipeableDrawer>\n    );\n  }\n\n  renderSharingDialog()\n  {\n    return (\n      <Dialog\n        open={this.state.showSharingDialog}\n        onClose={(e)=>{this.setState({showSharingDialog: false});}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n          Your song is available at\n          </DialogContentText>\n          <DialogContentText>\n          {this.state.permanentUrl}\n          <IconButton onClick={(e)=>{ copy(this.state.permanentUrl); }}>\n            <FileCopyIcon />\n          </IconButton>\n          </DialogContentText>\n          <DialogActions>\n            <Button onClick={(e)=>{this.setState({showSharingDialog: false})}}>\n              Close\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  renderMainContent()\n  {\n    if(this.state.patterns == null || this.state.patterns.length === 0)\n    {\n      return this.renderTitlePage();\n    }\n    else\n    {\n      const patternToRender = this.state.patterns[this.state.selectedPattern];\n      const patternConfig = Object.assign(\n        Object.assign({}, this.state.formatSettings), // global settings\n        this.state.patternSettings[this.state.selectedPattern] // then apply per-pattern settings\n      );\n      const patternContent = this.renderPattern(patternToRender, patternConfig);\n       \n\n      const changeInstrumentsCallback = (instruments) => {\n        this.setState( {\n          instruments : instruments,\n          instrumentMask : createInstrumentMask(this.state.instrumentIndex, instruments)\n        } );\n      }\n\n      const classes = this.props;\n      const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n      const mobile = isMobile();\n\n      const instrumentConfigColumns = mobile ? 12 : 8;\n\n      const sendVolumeEvent = (event) =>\n      {\n        if(\"volume\" in event)\n        {\n          this.setState( (prevState,props) => {\n            let instrumentIndex = Array.from(prevState.instrumentIndex);\n            instrumentIndex[event.instrument].volume = event.volume;\n            return { instrumentIndex : instrumentIndex };\n          } );\n        }\n        else if(\"muted\" in event)\n        {\n          this.setState( (prevState,props) => {\n            let instrumentIndex = Array.from(prevState.instrumentIndex);\n            instrumentIndex[event.instrument].muted = event.muted;\n            return { instrumentIndex : instrumentIndex };\n          } );\n        }\n      };\n\n      return (\n        <React.Fragment>\n          {this.renderSharingDialog()}\n          <div style={{display:\"flex\", width: \"95%\"}}> \n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open pattern list\"\n              edge=\"start\"\n              onClick={(e)=>{ this.setState( {patternsOpen: true } )}}\n              className={clsx({\n                [classes.hide] : !this.state.patternsOpen\n              })}\n            >\n              <ChevronRightIcon />\n            </IconButton>\n            <div className=\"content-title\" style={{flexGrow:1}}>\n            </div>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open settings\"\n              edge=\"end\"\n              onClick={(e)=>{ this.setState( {settingsOpen: true } )}}\n              className={clsx(this.state.settingsOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n          {patternContent}\n          <Grid container>\n          <Grid item xs={(12 - instrumentConfigColumns ) / 2} />\n          <Grid item xs={instrumentConfigColumns}>\n            <InstrumentConfig\n              instruments={this.state.instruments}\n              instrumentIndex={this.state.instrumentIndex}\n              instrumentMask={this.state.instrumentMask}\n              onChange={changeInstrumentsCallback}\n              onVolumeEvent={sendVolumeEvent}\n            />\n          </Grid>\n          <Grid item xs={(12 - instrumentConfigColumns ) / 2} />\n          </Grid>\n          {this.renderPatternDrawer(iOS,mobile)}\n          {this.renderSettingsDrawer(iOS,mobile, patternConfig)}\n        </React.Fragment>\n      );\n    }\n  }\n\n  render() {\n    const mainContent = this.renderMainContent();\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          {mainContent}\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(modalStyles)(withRouter(App));\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport notation from \"./notation\";\nimport HelpIcon from '@material-ui/icons/HelpOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nfunction camelToReadable(s)\n{\n  const spacedString = s.replace(/([A-Z])/g, ' $1');\n  return spacedString[0].toUpperCase() + spacedString.slice(1);\n}\n\nfunction FormatSettings(props) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  // todo: change to multiple useState calls?\n\n  function tokenStateToItem(value)\n  {\n    return value === \" \" ? \"space\" : value;\n  }\n\n  function tokenItemToState(value)\n  {\n    return value === \"space\" ? \" \" : value;\n  }\n\n  const handleOptionChange = (name, value) => {\n    const updatedState = {...props.settings, [name]: value};\n    props.onChange(updatedState);\n  };\n\n  const handleCheckedChange = (event) => {\n    const updatedState = {...props.settings, [event.target.name]: event.target.checked};\n    props.onChange(updatedState);\n  };\n\n  function createOptionMenu(\n    name,\n    options,\n    itemToState = tokenItemToState,\n    stateToItem = tokenStateToItem\n  )\n  {\n    const idString = \"form-control-\" + name + \"-id\";\n    return (\n      <FormControl variant=\"filled\" className={classes.formControl} key={idString} id={idString}>\n        <InputLabel id=\"settings-option-{name}\">{name}</InputLabel>\n        <Select\n          labelId={\"settings-option-\" + name + \"-labelID\"}\n          id={\"settings-option-\" + name + \"-id\"}\n          value={stateToItem(props.settings[name])}\n          name={name}\n          onChange={(e) => handleOptionChange( e.target.name, itemToState(e.target.value))}\n        >\n          {options.map((op) => <MenuItem key={\"settings-menu-item-\" + name + \"-\" + op} value={stateToItem(op)}>{stateToItem(op)}</MenuItem>)}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  function createBoolControl(name)\n  {\n    return (\n      <FormControlLabel\n        control={<Switch checked={props.settings[name]} onChange={handleCheckedChange} name={name} />}\n        label={camelToReadable(name)}\n        key={\"switch-\"+name}\n      />\n    );\n  };\n\n  const resolutionToBeatString = (r) => ( r / props.settings.beatResolution ).toString();\n  const beatStringToResolution = (b) => props.settings.beatResolution * parseInt(b);\n  \n  const candidateLineLengths = [ 2, 3, 4, 5, 6, 7, 8, 14, 16, 32 ];\n  let lineLengths = [];\n  for( const c of candidateLineLengths )\n  {\n    const resolution = c * 48;\n    if( (resolution % props.settings.beatResolution) === 0\n      && (resolution <= props.pattern.length)\n     )\n    {\n      lineLengths.push( resolution );\n    }\n  }\n\n  if( !lineLengths.includes( props.pattern.length ) )\n  {\n    lineLengths.push( props.pattern.length );\n    lineLengths.sort();\n  }\n\n  const candidateBeatResolutions = [24, 36, 48, 72, 96];\n  let beatResolutions = [];\n  for( const c of candidateBeatResolutions )\n  {\n    if( (c % props.pattern.resolution) === 0 && ( props.settings.lineResolution % c ) === 0)\n    {\n      beatResolutions.push( c );\n    }\n  }\n  const beatLineHelp = \"Only options that produce lines made up of 'n' whole beats (no part-beats) are shown. \"\n  + \"If the options displayed for either lineResolution or beatResolution are too restrictive, try changing the other option.\"\n  + \"If lineResolution only results in one line, more options for beatResolution will be shown.\"\n  return (\n    <FormGroup className={classes.root}>\n      {notation.FORMAT_CONFIG_STRINGS.map( op => createOptionMenu( op[0], op[1] ) ).reduce((prev, curr) => [prev, curr])}\n      {notation.FORMAT_CONFIG_BOOLS.map( op => createBoolControl( op )).reduce((prev, curr) => [prev, curr]) }\n      <div style={{backgroundColor : \"white\", color : theme.palette.background.default}}><p> {props.pattern.name + \" Options\"} </p></div>\n      {\n        createOptionMenu(\n          \"beatResolution\",\n          beatResolutions,\n          (v) => v.toString(), // stateToItem\n          (v) => parseInt(v) // itemToState\n        )\n      }\n      {createOptionMenu(\n        \"lineResolution\",\n        lineLengths,\n        beatStringToResolution,\n        resolutionToBeatString\n      )}\n      <Grid container>\n        <Grid item xs={8}/>\n        <Grid item xs={4}>\n          <Tooltip title={beatLineHelp} aria-label=\"help\">\n            <Icon>\n              <HelpIcon />\n            </Icon>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </FormGroup>\n  );\n}\n\nconst DefaultSettings = notation.DEFAULT_FORMAT_CONFIG; \n\n\nexport { FormatSettings, DefaultSettings }\nexport default FormatSettings;","// FileUpload.react.js\n\n// inspired by https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n// and https://stackoverflow.com/questions/55830414/how-to-read-text-file-in-react\n\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\n\nclass FileImport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.hiddenFileInput = React.createRef();\n  }\n\n  onChange(e) {\n    const fileObject = e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = loadEvent => {\n      if( this.props.onImport )\n      {\n        this.props.onImport(\n          { file: fileObject, content : loadEvent.target.result}\n        );\n      }\n    }\n    reader.readAsText(fileObject);\n  }\n\n  render() {\n    const clickFile = (e) => {\n      this.hiddenFileInput.current.click();\n    }\n\n    const {onImport, accept, ...buttonProps} = {...this.props};\n    return (\n      <React.Fragment>\n        <Button onClick={clickFile} {...buttonProps}>Import File</Button>\n        <input\n          type=\"file\"\n          hidden\n          accept={accept}\n          onChange={(e) => this.onChange(e)} ref={this.hiddenFileInput}\n          />\n      </React.Fragment>\n   )\n  }\n}\n\nexport default FileImport;\n","// h2.js\n\nimport track from \"./track\";\nimport xml2js from \"xml2js\";\nimport { calculateResolution } from \"./utilities\";\n\n// TODO: This file was written with the hope that using xml2js would make things cleaner\n// it didn't, purely because xml2js is an okay library doing a difficult task\n// it ensures to produce a good json file but in doing so muddles the data a bit.\n// Should replace this with dom-parser and window.DOMParser\n\n// let's think about the data representation needed\n\nfunction calculatePatternResolution(pattern, size)\n{\n  const positions = Array.from(pattern.notes, note => note.position)\n  return calculateResolution(positions, size);\n}\n\nfunction parseHydrogenJs(result)\n{\n    // fixme:\n    // this parsing often assumes there's >=2 elements\n\n    // this \"zero\" here is presumably an artefact of xml --> json representation\n    const instrumentElements = result.song.instrumentList[0].instrument;\n\n    // instruments\n    // [  { id, name } ]\n    const instrumentArray = Array.from(\n      instrumentElements,\n      function(element){\n        const instrumentComponent = element.instrumentComponent[0];\n        let inst = {\n          \"id\" : parseInt(element.id), \n          \"name\" : element.name[0],\n           \"volume\" : parseFloat(element.volume), \n           \"muted\" : element.isMuted[0] === \"true\",\n           \"gain\" : parseFloat(element.gain),\n           \"drumkit\" : element.drumkit[0]\n        };\n        if( \"layer\" in instrumentComponent )\n        {\n          inst[\"filename\"] = instrumentComponent.layer[0].filename[0];\n        }\n        return inst;\n      }\n    );\n\n    const patternElements = result.song.patternList[0].pattern;\n    // patterns\n    // [  { name, size, notes } ]\n    const patternArray = Array.from(\n      patternElements,\n      function(element){\n        const noteElements = element.noteList[0].note;\n        const patternSize = parseInt(element.size);\n        let notes = [];\n        if( noteElements )\n        {\n          // notes \n          // [ {position, instrument(id}]\n          notes = Array.from(\n            noteElements,\n            function(noteElement){\n              return {\"position\" : parseInt(noteElement.position), \"instrument\" : parseInt(noteElement.instrument)};\n            }\n          );\n\n          // hydrogen permits you to have notes that reach past the pattern size, \n          // they then get revealed when you extend the pattern, \n          // here's an easy point to get rid of them, we don't want them to factor into any calculations\n          notes = notes.filter( n => n.position < patternSize );\n        }\n        return {\n          \"size\" : patternSize, \n          \"name\" : element.name[0],\n          \"notes\" : notes\n        };\n      }\n    );\n\n    // transform pattern to a managable data\n    const patternsWithTracks = Array.from(\n      patternArray,\n      function(pattern)\n      { \n        const resolution = calculatePatternResolution(pattern, pattern.size);\n        let instrumentTracks = {};\n        for( const instrument of instrumentArray )\n        {\n          const relevantNotes = pattern.notes.filter( \n            note => (note.instrument === instrument.id)\n          );\n          const relevantHits = Array.from(\n            relevantNotes,\n            note => note.position\n          );\n          instrumentTracks[ instrument.id.toString() ] = track.fromPositions( relevantHits, pattern.size, resolution);\n        }\n        pattern.resolution = resolution;\n        pattern.instrumentTracks = instrumentTracks;\n        return pattern;\n      }\n    );\n\n    // todo: refactor into (at least one) separate function\n    if(result.song.virtualPatternList)\n    {\n      // so unfortunately, virtualPatternGroup represents a directional graph and we have to build\n      // the tree of dependencies for each node, we implement this in a very simplistic way\n      // let's build a mapping( name -> [ names ] ) and continue to resolve it\n      // until we're done\n      const virtualPatternGroups = result.song.virtualPatternList[0].pattern;    \n      if( virtualPatternGroups )\n      {\n        // each element looks like\n        //\n        // <pattern>\n        // <name>p2-a-djembe</name>\n        // <virtual>p2-a-bass</virtual>\n        // <virtual>p2-snare</virtual>\n        // </pattern>\n\n        let patternToRelated = {};\n\n        // record initial relations\n        for( const virtualGroup of Array.from(virtualPatternGroups) )\n        {\n          const rootPatternName = virtualGroup.name[0];\n          const relatedPatterns = Array.from(virtualGroup.virtual);\n          patternToRelated[rootPatternName] = new Set(relatedPatterns);\n        }\n\n        // expand connections until our object stops changing, brute-force\n        // this is a relatively large limit but is better than the potential of an infinite loop\n        // I think 3 layers would be pushing this feature\n        const MAX_ITERATIONS = 20;\n        for(let iteration = 0; iteration < MAX_ITERATIONS; ++iteration)\n        {\n          let expandedObject = {};\n          // we could do a check at the end of each loop, but it's easier to track object equality this way\n          let objectHasExpanded = false;\n          for(const [root, related] of Object.entries(patternToRelated))\n          {\n            let expandedNodeSet = new Set(related);\n            for( const node of expandedNodeSet )\n            {\n              if( node in patternToRelated )\n              {\n                // set union\n                expandedNodeSet = new Set([...expandedNodeSet, ...patternToRelated[node]]);\n              }\n            }\n            objectHasExpanded = objectHasExpanded || ( expandedNodeSet.size !== related.size );\n            expandedObject[ root ] = expandedNodeSet;\n\n          }\n          // exit if no change\n          if(!objectHasExpanded)\n          {\n            break;\n          }\n          // throw if we've failed to resolve all the connections by now, morelikely something has gone wrong\n          if( iteration === MAX_ITERATIONS )\n          {\n            throw new Error(\"Reached max virtual_pattern recursion depth.\");\n          }\n          // otherwise update mapping and continue\n          patternToRelated = expandedObject;\n        }\n\n        for( const [rootPatternName, relatedPatternSet] of Object.entries(patternToRelated) )\n        {\n          // could do filter, and assert on length?\n          let rootPattern = patternsWithTracks.find(p => p.name === rootPatternName);\n          for( const patternToMergeName of relatedPatternSet )\n          {\n            const patternToMerge = patternsWithTracks.find(p => p.name === patternToMergeName );\n            for( const [id, t] of Object.entries(patternToMerge.instrumentTracks) )\n            {\n              if( id in rootPattern.instrumentTracks )\n              {\n                const merged = rootPattern.instrumentTracks[ id ].aggregate( t );\n                // we match hydrogen's implementation here and discard values past the length of the original track\n                merged.rep.length = rootPattern.size  / merged.resolution;\n                rootPattern.instrumentTracks[ id ] = merged; \n              }\n              else\n              {\n                // ensure track is the appropriate length & res\n                let copiedTrack = t.format(rootPattern.resolution);\n                copiedTrack.length = rootPattern.size  / rootPattern.resolution;\n                rootPattern.instrumentTracks[id] = copiedTrack;\n              }\n            }\n          }\n          // reassess resolution and apply to all tracks\n          // this may not be necessary but it's probably nice\n          const resolution = calculatePatternResolution(rootPattern, rootPattern.size);\n          rootPattern.resolution = resolution;\n          for( const [id, track] of Object.entries(rootPattern.instrumentTracks) )\n          {\n            // ensure that \n            rootPattern[id] = track.format( resolution );\n          }\n        }\n\n      }\n    }\n\n\n    return {\n      \"instruments\" : instrumentArray,\n      \"patterns\" : patternsWithTracks\n    }\n}\n\nasync function parseHydrogenPromise(xmlString)\n{\n  let parser = new xml2js.Parser();\n\n  return parser.parseStringPromise(xmlString).then(parseHydrogenJs);\n}\n\nexport default { parseHydrogenPromise };","import React from 'react';\nimport notation from \"./notation\"\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    whiteSpace:\"pre\"\n  },\n});\n\nclass Part extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const tracks = Object.values(this.props.tracks);\n    if(tracks.length === 0 )\n    {\n      return <React.Fragment />\n    }\n    const patternArray = notation.formatPatternString(\n      this.props.instrument,\n      this.props.tracks,\n      this.props.config.restMark\n    );\n    // don't support a multi-line pattern, that doesn't divide the beatResolution\n    // because it's a nightmare!\n    const patternResolution = tracks[0].resolution;\n    if( (this.props.config.lineResolution % this.props.config.beatResolution) !== 0\n        && ( patternArray.length * patternResolution > this.props.config.lineResolution ) )\n    {\n      throw new Error(\"This code only supports a beatResolution that divides the lineResolution\");\n    }\n    // this code has got very convoluted\n    const patternLines = notation.chunkArray(patternArray, this.props.config.lineResolution / patternResolution, 0);\n    const beatsPerLine = this.props.config.lineResolution / this.props.config.beatResolution;\n    const beatChunkSize = this.props.config.beatResolution / patternResolution;\n    const linesWithBeats = patternLines.map(\n      line => notation.chunkArray( line, beatChunkSize )\n    );\n    const lineIndices = [...patternLines.keys()];\n    const formatLine = (key, line, startBeat)=>{\n      const beats = [...line.keys()];\n      return (\n        <p key={\"pattern-line-\" + key}>\n          <span key={\"line-start-\" + key}>{this.props.config.lineMark}</span>\n          {\n            beats.map( beat => <React.Fragment key={\"fragment-beat-\"+ (beat + startBeat).toString()}>\n              <span key={\"span-beat-\" + (beat + startBeat).toString()} className={(beat + startBeat) === this.props.activeNote ? \"activeNote\" : \"\"}>{line[beat].join(\"\")}</span>\n              <span key={\"span-beat-marker-\" + (beat + startBeat).toString()}>{(this.props.config.showBeatMark && beat !== beats[beats.length-1]) ? this.props.config.beatMark : \"\"}</span>\n            </React.Fragment>\n            )\n          }\n          <span key={\"line-end-\" + key}>{this.props.config.lineMark}</span>\n        </p>\n      );\n    };\n\n    const numberLine = notation.createNumberMarker(\n      this.props.config.numberRestMark,\n      this.props.config.beatResolution,\n      patternResolution,\n      Math.min( this.props.config.lineResolution, patternLines[0].length * patternResolution )\n    );\n    const beatChunks = notation.chunkArray(\n      numberLine,\n      this.props.config.beatResolution / patternResolution\n    );\n    return (\n      <React.Fragment>\n        {this.props.config.showBeatNumbers ? formatLine(\"beat\", beatChunks, 0) : \"\" }\n        {lineIndices.map(lineIndex=>formatLine(lineIndex.toString(), linesWithBeats[lineIndex], beatsPerLine * lineIndex))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Part);","import React from 'react';\nimport Part from \"./Part\";\n\nfunction getTitleType(headingLevel, defaultLevel)\n{\n    const validHeadingLevels = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    const safeHeading = headingLevel ? headingLevel.toLowerCase() : '';\n    const Title = validHeadingLevels.includes(safeHeading) ? safeHeading : defaultLevel;\n    return Title;\n}\n\nclass PartWithTitle extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const Title = getTitleType(this.props.headingLevel, \"h4\");\n    return (\n      <article>\n        <Title>{this.props.instrumentName}</Title>\n        <Part \n          instrument={this.props.instrument}\n          tracks={this.props.tracks}\n          config={this.props.config}\n          activeNote={this.props.activeNote}\n        />\n      </article>\n    );\n  }\n}\n\nexport default PartWithTitle;","import React from 'react';\nimport PartWithTitle from \"./PartWithTitle\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    \"margin-bottom\": theme.spacing(2),\n    fontFamily: \"Roboto Mono\",\n    textAlign: \"left\",\n    whiteSpace:\"pre\",\n    \"& .activeNote\": {\n      color : theme.palette.primary.main\n    }\n  },\n});\n\nclass Pattern extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      patternTime : undefined\n    };\n  }\n\n  onPatternTimeChange(patternTime)\n  {\n    if( patternTime !== null && patternTime !== undefined )\n    {\n      this.setState({patternTime : patternTime});\n    }\n    else\n    {\n      this.setState({patternTime : undefined });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const instrumentIndices = [...this.props.instruments.keys()];\n    const beatResolution = this.props.config.beatResolution;\n    return (\n      <div className={classes.root} >\n        { instrumentIndices.map( \n            (instrumentIndex) => ( <PartWithTitle \n              key={\"part-\" + instrumentIndex.toString()}\n              instrumentName={this.props.instruments[instrumentIndex][0]}\n              instrument={this.props.instruments[instrumentIndex][1]}\n              tracks={this.props.tracks}\n              config={this.props.config}\n              activeNote={this.state.patternTime !== undefined ? Math.floor(this.state.patternTime / beatResolution) : undefined}\n            /> )\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Pattern);","class Audio\n{\n\n  // todo: we replace a valid audioContext with a blank object, so that we can run tests in node\n  //       this should probably be replaced by https://github.com/audiojs/web-audio-api \n  //       and a test-suite written\n  static createWebContext()\n  {\n    return new (window.AudioContext || window.webkitAudioContext || Object)();\n  }\n\n  static determineMinResolution(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let minResolution = 48; \n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty()\n        )\n        {\n          minResolution = Math.min( minResolution, t.resolution );\n        }\n      }\n      return minResolution;\n  }\n\n  static determineTrackLength(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let trackLength = 48;\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && !t.empty() \n        )\n        {\n          trackLength = Math.max( trackLength, t.length() );\n        }\n      }\n      return trackLength;\n  }\n\n  static peakAmplitude(\n    combined\n  )\n  {\n    let peakValue = 0.0;\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for( let sample = 0; sample < combinedChannel.length; ++sample)\n      {\n        peakValue = Math.max( Math.abs(combinedChannel[sample]), peakValue );\n      }\n    }\n    return peakValue;\n  }\n\n  static normalizeAudioBuffer(\n    combined\n  )\n  {\n    const peakValue = Audio.peakAmplitude( combined );\n    if( peakValue > 1.0 )\n    {\n      for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n        let combinedChannel = combined.getChannelData(channel);\n        for( let sample = 0; sample < combinedChannel.length; ++sample)\n        {\n          combinedChannel[sample] = combinedChannel[sample] / peakValue;\n        }\n      }\n    }\n    return combined;\n  }\n\n  static createMasterTrack(\n    context,\n    tracks,\n    instrumentIndex,\n    sounds,\n    tempo\n  )\n  {\n    const trackLength = Audio.determineTrackLength( instrumentIndex, tracks );\n\n\n    const beatTime =  (60.0 / tempo) * 1000;\n    const timePerHydrogen = beatTime / 48.0;\n\n\n    // let's assume we can do some simple things\n\n    const sampleRate = 44100;\n    const channels = 2;\n    const trackLengthMs = trackLength * timePerHydrogen;\n    const trackLengthSamples = trackLengthMs * sampleRate / 1000.0;\n    const totalSamples = Math.floor(trackLengthSamples);\n    const samplesPerHydrogen = Math.floor( totalSamples / trackLength );\n    const combined = context.createBuffer(channels, totalSamples, sampleRate);\n\n    // populate blank buffer with sounds\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for(const [id,t] of Object.entries(tracks))\n      { \n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if( \n          selected.length > 0 \n          && selected[0].id in sounds\n          && !t.empty()\n        )\n        {\n          const audioBuffer = sounds[selected[0].id];\n          // fallback to copying the mono buffer across both channels\n          const audioChannel = audioBuffer.numberOfChannels === 2 ? audioBuffer.getChannelData(channel) : audioBuffer.getChannelData(0);\n          const trackPoints = t.toPoints();\n          for( const noteStart of trackPoints )\n          {\n            const sampleStart = noteStart * samplesPerHydrogen;\n            for( let sample = 0; sample < audioBuffer.length; ++sample )\n            {\n              // add sample to mega track\n              combinedChannel[sampleStart + sample] = combinedChannel[sampleStart + sample] + audioChannel[sample];\n            }\n          }\n        }\n      }\n    }\n\n    return Audio.normalizeAudioBuffer( combined );\n  }\n\n  static createAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=true;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n  static createOneShotAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=false;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n}\n\nexport default Audio;","import React from 'react';\nimport Audio from \"./Audio\"\n\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport * as Tone from \"tone\";\n\n// these are the hydrogen drumkits available by GPL/CC\n\nconst DRUMKITS = [\n  \"circAfrique v4\",\n  \"DeathMetal\",\n  \"The Black Pearl 1.0\",\n  \"GMRockKit\",\n  \"TR808EmulationKit\"\n];\n\n// TODO: This is very much not a react component, as it stands\n//   \n\n\nconst gainValueToDB = (value) => {\n  // https://groups.google.com/g/tonejs/c/Ag9vix_d2L4\n  // https://stackoverflow.com/questions/22604500/web-audio-api-working-with-decibels\n  // https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/maxDecibels\n  const mapped = (1.0 - value) * -60.0;\n  return Math.max( Math.min( mapped, 0.0 ), -60.0 );\n};\n\nclass ToneBoard extends React.Component\n{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tempo: 100.0\n    };\n    this.samplerCount = 0;\n    this.sequences = {};\n    this.gain = new Tone.Gain();\n    this.gain.toDestination();\n    Tone.Transport.bpm.value = this.state.tempo;\n  }\n\n\n  chooseAppropriateUrlForInstrument(drumkitName, instrumentName)\n  {\n    const name = instrumentName.toLowerCase();\n    // this is currently very basic\n    if(name.includes(\"kick\"))\n    {\n        return \"The Black Pearl 1.0/PearlKick-Hard.wav\";\n    }\n    else if(name.includes(\"stick\"))\n    {\n        return \"DeathMetal/16297_ltibbits_sticks_low_pitch.wav\";\n    }\n    else if(name.includes(\"tom\"))\n    {\n        return \"TR808EmulationKit/808_Tom_Mid.wav\"\n    }\n    else if(name.includes(\"clap\"))\n    {\n        return \"TR808EmulationKit/808_Clap.wav\";\n    }\n    else if(name.includes(\"snare\"))\n    {\n      return \"GMRockKit/Snare-Soft.wav\";\n    }\n    else\n    {\n      // todo: snare, cymbals\n      return null;\n    }\n  }\n\n\n  populateSamples()\n  {\n    this.samplerCount = 0;\n    this.expectedSamplerCount = 0;\n    let mapping = {};\n    const tracks = this.props.selectedPattern.instrumentTracks;\n    for(const [id,] of Object.entries(tracks))\n    {\n      const selected = this.props.instrumentIndex.filter(inst => inst.id.toString() === id);\n      if( selected.length > 0)\n      {\n        const selectedInstrument = selected[0];\n        if(\n          \"drumkit\" in selectedInstrument && \n          \"filename\" in selectedInstrument &&\n          DRUMKITS.includes(selectedInstrument.drumkit) )\n        {\n          const filename = selectedInstrument.filename.replace(\".flac\", \".wav\");\n          let player = new Tone.Player(\n            process.env.PUBLIC_URL + \"/wav/\" + selectedInstrument.drumkit + \"/\" + filename, \n            () => { this.samplerCount++; } \n          );\n          player.mute = selectedInstrument.muted;\n          const clampedVolume = Math.min( Math.max( 0.0 , selectedInstrument.volume ), 1.0 );\n          const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n          player.connect(gain)\n          gain.connect(this.gain);\n          mapping[selectedInstrument.id] = { player : player, gain : gain }\n          this.expectedSamplerCount++;\n        }\n        else if( \"drumkit\" in selectedInstrument )\n        {\n          const relativeUrl = this.chooseAppropriateUrlForInstrument( selectedInstrument.drumkit, selectedInstrument.name );\n          if(relativeUrl !== null)\n          {\n            let player = new Tone.Player(\n              process.env.PUBLIC_URL + \"/wav/\" + relativeUrl, \n              () => { this.samplerCount++; } \n            );\n            player.mute = selectedInstrument.muted;\n            const clampedVolume = Math.min( Math.max( 0.0 , selectedInstrument.volume ), 1.0 );\n            const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n            player.connect(gain)\n            gain.connect(this.gain);\n            mapping[selectedInstrument.id] = { player : player, gain : gain }\n            this.expectedSamplerCount++;\n          }\n        }\n      }\n    }\n    this.samples = mapping;\n  }\n\n  createSequences()\n  {\n    const instrumentIndex = this.props.instrumentIndex;\n    let sequences = {};\n    for( let p of this.props.patterns )\n    {\n      const patternResolution = Audio.determineMinResolution(instrumentIndex, p.instrumentTracks);\n      const patternLength = Audio.determineTrackLength(instrumentIndex, p.instrumentTracks);\n      sequences[ p.name ] = new Tone.Sequence(\n        (time,index) => { this.tick(time, index); },\n        [...Array(patternLength / patternResolution).keys()],\n        Tone.Time(\"4n\") * ( patternResolution / 48.0 )\n      );\n      // start the sequence, but the ticks won't be triggered when muted\n      // note: setting mute on the sequence directly seems to have no effect\n      sequences[ p.name ]._part.mute = true;\n      sequences[ p.name ].start(0);\n    }\n    return sequences;\n  }\n\n  schedulePlaybackForNewTracks()\n  {\n    const instrumentIndex = this.props.instrumentIndex;\n    const tracks = this.props.selectedPattern.instrumentTracks;\n    let board = this;\n    // todo: precompute these numbers for smoother transitions?\n    const resolution = Audio.determineMinResolution(instrumentIndex, tracks );\n    const length = Audio.determineTrackLength(instrumentIndex, tracks );\n\n    // we have a little fudge in here... if we're transitioning from a 4 beat loop\n    // to an 8 beat pattern ... we probably really wanted to hit the start of that pattern,\n    // not to transition at 3.75 beats and play the latter half\n    const now = Tone.Transport.toSeconds(Tone.Transport.position);\n    const timeFromBarEnd = Tone.Transport.loopEnd  - now;\n    const queueTransition = Tone.Transport.state === \"started\" \n    && ( timeFromBarEnd > 0 && timeFromBarEnd < Tone.Time(\"8n\").toSeconds())\n    && ( length > this.state.length);\n    const enableNewTrack = () => {\n      // note: setting mute on the sequence directly seems to have no effect\n      this.sequences[this.props.selectedPattern.name]._part.mute = false;\n      Tone.Transport.loop = true;\n      Tone.Transport.setLoopPoints(0, Tone.Time(\"4n\") * (length / 48.0));\n    };\n    // react won't set state if these variables are equal\n    // this mostly illustrates this component probably shouldn't have two state philosophies\n    // note: we only trigger \"queueTransition\" when length > this.state.length so don't worry about that\n    if( resolution === this.state.resolution && length === this.state.length )\n    {\n      enableNewTrack();\n      return;\n    }\n    board.setState( \n      { \n        resolution : resolution,\n        length : length\n      },\n      () => { \n        if( queueTransition ) { \n          Tone.Transport.scheduleOnce(\n            enableNewTrack,\n            Tone.Time(\"0\")\n          );\n        }\n        else\n        {\n          enableNewTrack();\n        }\n      }\n    );\n  }\n\n  samplesReady()\n  {\n    return this.sampleCount === this.expectedSampleCount;\n  }\n\n  tick(time,indexFromStart)\n  {\n    if( time === this.lastTickTime )\n    {\n      // this sometimes seems to happen\n      // and the samples complain\n      // \"start time must be strictly greater than previous start time\"\n      // this is a horrible temporary fix\n      return;\n    }\n    this.lastTickTime = time;\n    const trackLengthRes = ( this.state.length / this.state.resolution );\n    const index = indexFromStart % trackLengthRes;\n    if(!this.samplesReady())\n    {\n      return;\n    }\n    const tracks = this.props.selectedPattern.instrumentTracks;\n    for(const [id,t] of Object.entries(tracks))\n    {\n        if( t.rep[index] )\n        {\n          this.samples[id].player.start(time);\n        }\n    }\n    if( this.props.onPatternTimeChange )\n    {\n      Tone.Draw.schedule(\n        ()=>{\n          const notePosition = ( indexFromStart * this.state.resolution ) % this.state.length;\n          this.props.onPatternTimeChange( notePosition );\n        },\n        time\n      );\n    }\n  }\n\n  play()\n  {\n    // Tone.start is needed to be triggered from a user interaction\n    // (web-audio-context policy of not playing until a user interaction)\n    Tone.start().then(()=>{Tone.Transport.start();});\n  }\n\n  stop()\n  {\n    // it's slightly unclear what the synchronisation semantics of this Tone.Transport.stop() call are.\n    // If a tick is currently in flight on Tone.Transport we have to ensure that\n    // the reset of patternTime occurs *afterwards*. \n    // The below calls seem to work for this, but I couldn't tell you why.\n    if( Tone.Transport.state === \"started\")\n    {\n      Tone.Transport.stop();\n      if( this.props.onPatternTimeChange )\n      {\n        Tone.Draw.schedule(\n          ()=>{\n            this.props.onPatternTimeChange( null );\n          },\n          Tone.Transport.now()\n        );\n      }\n    }\n  }\n\n  componentDidMount()\n  {\n    this.populateSamples();\n    this.sequences = this.createSequences();\n    this.schedulePlaybackForNewTracks();\n  }\n\n\n\n  componentDidUpdate(prevProps, prevState, snapshot)\n  {\n    // theoretically we should be evaluating a rougher equality on the tracks here\n    // but ... as is !== will never be wrong here, and our linter warns if we don't use it \n    const patternChange = prevProps.selectedPattern.name !== this.props.selectedPattern.name;\n    if( patternChange )\n    {\n      this.sequences[prevProps.selectedPattern.name]._part.mute = true;\n      this.schedulePlaybackForNewTracks();\n    }\n    const instrumentChange = prevProps.instrumentIndex !== this.props.instrumentIndex;\n\n    if( instrumentChange )\n    {\n      for( const instrument of this.props.instrumentIndex )\n      {\n        if( instrument.id in this.samples )\n        {\n          this.samples[instrument.id].player.mute = instrument.muted;\n          this.samples[instrument.id].gain.set( {gain : instrument.volume } );\n        }\n      }\n    }\n  }\n\n  tempoControl()\n  {\n    const onTempoChange = (event, tempo) => {\n      this.setState( { tempo : tempo } );\n      Tone.Transport.bpm.value = tempo;\n    };\n    return (\n      <Slider\n        defaultValue={100}\n        min={60}\n        step={1}\n        max={180}\n        onChange={onTempoChange}\n        valueLabelDisplay=\"auto\"\n      />\n    );\n\n  }\n\n  render() {\n    const tempoControlColumns = 4;\n\n    return (\n      <React.Fragment>\n        <div>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"play\"\n            onClick={(e)=>{this.play();}}\n          >\n            <PlayArrowIcon />\n          </IconButton>\n          <IconButton\n            color=\"secondary\"\n            aria-label=\"stop\"\n            onClick={(e)=>{this.stop();}}\n          >\n            <StopIcon />\n          </IconButton>\n        </div>\n\n        <Grid container>\n        <Grid item xs={(12 - tempoControlColumns) / 2} />\n        <Grid item xs={tempoControlColumns}>\n        {this.tempoControl()}\n        </Grid>\n        <Grid item xs={(12 - tempoControlColumns ) / 2} />\n        </Grid>\n\n      </React.Fragment>\n   );\n  }\n\n};\n\nexport default ToneBoard;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport App from \"./App\";\n\n\nexport default function Routes() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/song/:song\">\n            <App/>\n          </Route>\n          <Route path=\"/\">\n            <App/>\n          </Route>\n        </Switch>\n    </Router>\n  )\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nclass notation\n{\n\n  static DEFAULT_FORMAT_CONFIG = {\n    \"restMark\" : \"-\",\n    \"beatMark\" : \"|\",\n    \"lineMark\" : \"|\",\n    \"numberRestMark\" : \"-\",\n    \"beatResolution\" : 48,\n    \"showBeatMark\" : true,\n    \"showBeatNumbers\" : true,\n    // lineResolution is typically determined on a per-pattern basis\n    // however it used to be in here, and some tests still rely on this\n    \"lineResolution\" : 48 * 8\n  };\n\n  static FORMAT_CONFIG_STRINGS = [\n    [\"restMark\",[\"-\", \".\", \" \"]],\n    [\"numberRestMark\",[\"-\", \".\", \" \"]]\n  ];\n\n  static FORMAT_CONFIG_BOOLS = [\n    \"showBeatMark\",\n    \"showBeatNumbers\"\n  ];\n\n  static validateConfig(config, patternResolution) {\n    if( patternResolution != null && ( config.beatResolution % patternResolution ) !== 0 )\n    {\n      throw new Error(\"patternResolution doesn't divide beatResolution\");\n    }\n    if( config.lineResolution <= 0 )\n    {\n      throw new Error(\"config.lineResolution must be greater than zero\");\n    }\n  }\n\n  static resolveConfig(formatConfig)\n  {\n    for( const propName of Object.keys(formatConfig))\n    {\n      if(!notation.DEFAULT_FORMAT_CONFIG.hasOwnProperty(propName))\n      {\n        throw new Error(\"passed unrecognised property \" + propName);\n      }\n    }\n\n    return Object.assign( Object.assign({}, notation.DEFAULT_FORMAT_CONFIG), formatConfig );\n  }\n\n  static chunkString(str, chunkSize) {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    return str.match(new RegExp('.{1,' + chunkSize + '}', 'g'));\n  }\n\n  static chunkArray(a, chunkSize)\n  {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    let chunks = [];\n    for( let i = 0; i < a.length; i += chunkSize )\n    {\n      chunks.push( a.slice(i, Math.min( i + chunkSize, a.length) ) );\n    }\n    return chunks;\n  }\n\n  static createNumberMarker(numberRestMark, beatResolution, patternResolution, lineLength)\n  {\n    if( lineLength <= 0 )\n    {\n      throw new Error(\"lineLength <= 0\");\n    }\n\n    if( ( beatResolution % patternResolution ) !== 0)\n    {\n      throw new Error(\"patternResolution \" + patternResolution.toString() + \" does not divide beatResolution \" + beatResolution.toString());\n    }\n\n    let beatCount = Math.ceil(lineLength / beatResolution);\n    let numberMarkerArray = Array.from( Array(lineLength / patternResolution), e => numberRestMark );\n\n    for( let beat = 0; beat < beatCount; beat++ )\n    {\n      numberMarkerArray[ beat * ( beatResolution / patternResolution ) ] = ( (beat+1) % 10 ).toString();\n    }\n    return numberMarkerArray;\n  }\n\n  static formatLineWithMarkers(config, line, patternResolution, asHTML)\n  {\n    notation.validateConfig(config);\n\n    const beatChunkSize = config.beatResolution / patternResolution;\n\n    const padZero = (n, width) => {\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    };\n    const formatSymbolAsSpans = (symbol, numericPosition) => {\n      return \"<span class='note-\" + padZero(numericPosition, 4) + \"'>\" +  symbol + \"</span>\";\n    };\n\n    const formatSymbol = asHTML ? formatSymbolAsSpans : (symbol, numericPosition) => symbol;\n\n    let formattedLine = \"\";\n    for( let index = 0; index < line.length; ++ index )\n    {\n      const numericPosition = patternResolution * index;\n      formattedLine += formatSymbol(line.charAt(index), numericPosition);\n    }\n\n\n    const lineWithBeats = config.showBeatMark ? notation.chunkString(formattedLine, beatChunkSize * formatSymbol(\"X\", 0).length).join(config.beatMark) : formattedLine;\n    // note: we choose to always show the lineMarker even if it doesn't match the line resolution\n    return config.lineMark + lineWithBeats + config.lineMark;\n  }\n\n  static defaultLineResolution(\n    trackDict,\n    beatResolution\n  )\n  {\n    const instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return 48 * 8;\n    }\n    const trackLength = instrumentTracks[0].length();\n    const beatCount = trackLength / beatResolution;\n    if( beatCount <= 12 )\n    {\n      return trackLength;\n    }\n    else if( beatCount > 32 )\n    {\n      return 48 * 16; // let's just be laazeee\n    }\n    else\n    {\n      // let's just apply a simple mapping, rather than think through logics\n      const mapping = [\n        trackLength, // 13 \n        trackLength / 2, // 14\n        trackLength / 3, // 15\n        trackLength / 2, // 16\n        trackLength, // 17\n        trackLength / 3, // 18\n        trackLength, // 19\n        trackLength / 4, // 20\n        trackLength / 3, // 21\n        trackLength / 2, // 22\n        trackLength, // 23\n        trackLength / 3, // 24\n        trackLength / 5, // 25\n        trackLength, // 26\n        trackLength / 3, // 27\n        trackLength / 4, // 28\n        trackLength, // 29\n        trackLength / 6, // 30\n        trackLength, // 31\n        trackLength / 4, // 32\n      ];\n      return mapping[ beatCount - 13 ];\n    }\n  }\n\n  static guessPerPatternSettings(\n    trackDict\n  )\n  {\n    return {\n      \"lineResolution\" : notation.defaultLineResolution(trackDict, 48), // beatResolution (default)\n      \"beatResolution\" : 48 // should cover all the cases hopefully\n    };\n  }\n\n  static formatPatternString(\n    instrument,\n    trackDict,\n    restMark\n  )\n  {\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    const patternSize = instrumentTracks[0].length();\n    const patternResolution = instrumentTracks[0].resolution;\n    const notationLength = patternSize / patternResolution;\n\n    let patternArray = Array(notationLength).fill(restMark);\n    for( let charIndex = 0; charIndex < patternArray.length; ++charIndex)\n    {\n      // todo: handle collisions\n      for( const [trackID, trackSymbol] of Object.entries(instrument) )\n      {\n        const trackInstance = trackDict[trackID];\n        if( trackInstance != null && trackInstance.rep[charIndex] === 1 )\n        {\n          patternArray[charIndex] = trackSymbol;\n        }\n      }\n    }\n    return patternArray;\n  }\n\n  static fromInstrumentAndTrack(\n    instrument,\n    trackDict,\n    asHTML,\n    formatConfig = {}\n  )\n  {\n    const config = notation.resolveConfig(formatConfig);\n\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    // turn the tracks, into one char string\n    const patternArray = notation.formatPatternString( instrument, trackDict, config.restMark );\n    const patternString = patternArray.join(\"\");\n    const patternResolution = instrumentTracks[0].resolution;\n    const patternSize = instrumentTracks[0].length();\n\n    // handle lines and beatMarkers\n    let lineArray = notation.chunkString( patternString, config.lineResolution / patternResolution );\n\n    let formattedLineArray = [];\n    // add numbers on the first line\n    if( config.showBeatNumbers )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( \n        config, \n        notation.createNumberMarker(config.numberRestMark, config.beatResolution, patternResolution, Math.min(config.lineResolution, patternSize)).join(\"\"),\n        patternResolution,\n        asHTML\n      ) );\n    }\n    for( let i = 0; i < lineArray.length; ++i )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( config, lineArray[i], patternResolution, asHTML ) );\n    }\n\n    return formattedLineArray.join(\"\\n\");\n  }\n};\n\nexport default notation;","const DEFAULT_INSTRUMENT_SYMBOLS = {\n  \"Djembe Slap\" : \"S\",\n  \"Djembe Tone\" : \"t\",\n  \"Djembe Bass\" : \"O\",\n  \"Snare Ghost\" : \"x\",\n  \"Snare Accent\" : \"X\",\n  \"Shaker Ghost\" : \"x\",\n  \"Shaker Accent\" : \"X\",\n  \"Click\" : \"X\",\n  \"Bass\" : \"O\",\n  \"Tom\" : \"O\",\n  \"Default\" : \"X\"\n};\n\nfunction normalizeInstrumentsForFiguring(instruments)\n{\n  let n = [];\n  for(const inst of instruments)\n  {\n    let nInst = Object.assign({}, inst);\n    // for some reason these instruments are one-size arrays, and one id ... the track id from hydrogen\n    // this should be fixed, this doesn't make sense\n    nInst.name = nInst.name.toLowerCase();\n    n.push( nInst );\n  }\n  return n;\n}\n\nfunction figureDjembes(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const djembeTracks = instruments.filter( (inst) => inst.name.includes(\"djembe\") );\n  if(djembeTracks.length === 0)\n  {\n    return [];\n  }\n  else if(djembeTracks.length <= 3)\n  {\n    // let's lazily assume we have a slap, tone, bass\n    const slapArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"slap\") );\n    const toneArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"tone\") );\n    const bassArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"bass\") );\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      let parityCheck = slapArray[i] + toneArray[i] + bassArray[i];\n      // failed to figure out how djembes work return empty array\n      if(parityCheck !== 1)\n      {\n        return [];\n      }\n    }\n    let djembeMapping = {};\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      if( slapArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Slap\"];\n      }\n      else if( toneArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Tone\"];\n      }\n      else if( bassArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Bass\"];\n      }\n    }\n    return [ [ \"Djembe\", djembeMapping ] ];\n  }\n  else\n  {\n    // TODO: support more than one djembe\n    return []\n  }\n}\n\n// used by snare/shaker\nfunction manageAccentOrGhost(instrumentTracks, instrumentName, accentSymbol, ghostSymbol)\n{\n  let outputInstruments = [];\n  if(instrumentTracks.length === 2)\n  {\n    const t0 = instrumentTracks[0];\n    const t1 = instrumentTracks[1];\n    // attempt to determine ghost/accent\n    const zeroLouder = t0.volume > t1.volume || (t0.volume === t1.volume && t0.gain > t1.gain);\n    let mapping = {};\n    mapping[ t0.id.toString() ] = zeroLouder ? accentSymbol : ghostSymbol;\n    mapping[ t1.id.toString() ] = zeroLouder ? ghostSymbol : accentSymbol;\n    outputInstruments.push([instrumentName, mapping] );  \n  }\n  else // if 1 it must be an accent, if >= 3 ... I don't want to try and assign ghosts/accents\n  {\n    // I don't want to support ghost/accent here right now\n    for( const track of instrumentTracks )\n    {\n      let mapping = {};\n      mapping[ track.id.toString() ] = accentSymbol;\n      outputInstruments.push([instrumentName, mapping] );  \n    }\n  }\n  return outputInstruments;\n\n}\n\nfunction figureShakers(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  // todo: support common alternative shakers? Tambourine?\n  const shakerTracks = instruments.filter( (inst) => ( inst.name.includes(\"shaker\") ) );\n  return manageAccentOrGhost( \n    shakerTracks, \n    \"Shaker\", \n    symbolConfig[\"Shaker Accent\"],\n    symbolConfig[\"Shaker Ghost\"]\n  );\n}\n\nfunction figureSnares(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const snareTracks = instruments.filter( (inst) => ( inst.name.includes(\"snare\") ) );\n  // todo: we currently assume 2 snares is accent/ghost ... but I think it's relatively\n  // common to be 2 snare parts too, I think the algorithm here is check patterns to\n  // see if they overlap ... if the \"ghosts\" overlap the \"hits\" sometimes, assume 2 parts\n  return manageAccentOrGhost( \n    snareTracks, \n    \"Snare\", \n    symbolConfig[\"Snare Accent\"],\n    symbolConfig[\"Snare Ghost\"]\n  );\n}\n\n\nfunction activeInstruments(patterns)\n{\n  let nonTrivialInstruments = new Set();\n  for( const p of patterns )\n  {\n    for(const [instrumentID, part] of Object.entries(p.instrumentTracks))\n    {\n      if( !part.empty() )\n      {\n        nonTrivialInstruments.add(parseInt(instrumentID));\n      }\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction activeInstrumentation(instrumentIndex, patterns)\n{\n  const active = activeInstruments(patterns);\n  let nonTrivialInstruments = [];\n  for( const inst of instrumentIndex)\n  {\n    if( active.has(inst.id) )\n    {\n      nonTrivialInstruments.push( inst );\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction figureClickyInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const worthwhileInstruments = activeInstruments(patterns);\n  const relevantTracks = instruments.filter( (inst) => ( worthwhileInstruments.has(inst.id) &&\n    !inst.name.includes(\"djembe\") &&\n    ( inst.name.includes(\"click\") || \n    inst.name.includes(\"stick\") || \n    inst.name.includes(\"tom\") || \n    inst.name.includes(\"bass\") ||\n    inst.name.includes(\"kick\") )\n  ) );\n\n  const trackIsClick = Array.from(\n    relevantTracks,\n    (t) => t.name.includes(\"click\") || t.name.includes(\"stick\")\n  );\n  // we prioritise the early tracks\n  // and hope for the best\n\n  let tomIndex = 1;\n  let bassIndex = 1;\n  let collated = [];\n  for( let candidate = 0; candidate < Math.floor(relevantTracks.length/2); ++candidate )\n  {\n    if( trackIsClick[candidate*2] !== trackIsClick[candidate*2+1] )\n    {\n      const clickTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2] : relevantTracks[candidate*2+1];\n      const hitTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2+1] : relevantTracks[candidate*2];\n      const instrumentIsTom = hitTrack.name.includes(\"tom\");\n      let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n      let instrumentName = \"\"\n      if( instrumentIsTom )\n      {\n        instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n        tomIndex = tomIndex + 1;\n      }\n      else\n      {\n        instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n        bassIndex = bassIndex + 1;\n      }\n      let mapping = {};\n      mapping[hitTrack.id.toString()] = symbolConfig[rawInstrumentName];\n      mapping[clickTrack.id.toString()] = symbolConfig[\"Click\"];\n      collated.push([instrumentName, mapping] );  \n    }\n  }\n\n  // If there's a remainder instrument and there's no click\n  if( ((relevantTracks.length % 2 ) !== 0) && !trackIsClick[ relevantTracks.length - 1 ] )\n  {\n    const lastTrack = relevantTracks[relevantTracks.length - 1];\n    const instrumentIsTom = lastTrack.name.includes(\"tom\");\n    let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n    let instrumentName = \"\"\n    if( instrumentIsTom )\n    {\n      instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n      tomIndex = tomIndex + 1;\n    }\n    else\n    {\n      instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n      bassIndex = bassIndex + 1;\n    }\n    let mapping = {};\n    mapping[lastTrack.id.toString()] = symbolConfig[rawInstrumentName];\n    collated.push([instrumentName, mapping] );  \n  }\n  return collated;\n}\n\nfunction defaultSymbolForSingleInstrument(symbolConfig, name)\n{\n  // we expect these keys\n  /*\n    \"Djembe Slap\" : \"S\",\n    \"Djembe Tone\" : \"t\",\n    \"Djembe Bass\" : \"O\",\n    \"Snare Ghost\" : \"-\",\n    \"Snare Accent\" : \"X\",\n    \"Shaker Ghost\" : \"x\",\n    \"Shaker Accent\" : \"X\",\n    \"Click\" : \"X\",\n    \"Bass\" : \"O\",\n    \"Tom\" : \"O\",\n    \"Default\" : \"X\"\n  */\n  const lowerName = name.toLowerCase();\n  if( lowerName.includes(\"click\") || lowerName.includes(\"stick\") )\n  {\n    return symbolConfig[\"Click\"];\n  }  \n  else if( lowerName.includes(\"bass\") || lowerName.includes(\"kick\") )\n  {\n    return symbolConfig[\"Bass\"]\n  }\n  else if( lowerName.includes(\"snare\") )\n  {\n    return symbolConfig[\"Snare Accent\"];\n  }\n  else if( lowerName.includes(\"shaker\") )\n  {\n    return symbolConfig[\"Shaker\"];\n  }\n  else if( lowerName.includes(\"tom\") )\n  {\n    return symbolConfig[\"Tom\"];\n  }\n  else if( lowerName.includes(\"djembe\") )\n  {\n    if( lowerName.includes(\"slap\") )\n    {\n      return symbolConfig[\"Djembe Slap\"];\n    }\n    else if( lowerName.includes(\"tone\") )\n    {\n      return symbolConfig[\"Djembe Tone\"];\n    }\n    else\n    {\n      return symbolConfig[\"Djembe Bass\"];\n    }\n  }\n  return symbolConfig[\"Default\"];\n}\n\nfunction figureInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  let output = [];\n  output = output.concat( figureClickyInstruments( instrumentsRaw, symbolConfig, patterns ) );\n  output = output.concat( figureDjembes( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureSnares( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureShakers( instrumentsRaw, symbolConfig ) );\n\n  // we ignore track used by multiple instruments\n\n  // but attempt to cover \"instrument not recognised anywhere\"\n\n  const worthwhileInstruments = activeInstruments(patterns);\n\n  for(const inst of instrumentsRaw)\n  {\n    if( !worthwhileInstruments.has(inst.id) )\n    {\n      continue;\n    }\n    let instrumentUsed = false;\n    for( const op of output)\n    {\n      if( inst.id.toString() in op[1] ) \n      {\n        instrumentUsed = true;\n      }\n    }\n    if(instrumentUsed === false)\n    {\n      let mapping = {};\n      mapping[ inst.id.toString() ] = defaultSymbolForSingleInstrument( symbolConfig, inst.name );\n      output.push( [inst.name, mapping] );\n    }\n  }\n  \n  return output; \n}\n\nexport { activeInstrumentation, DEFAULT_INSTRUMENT_SYMBOLS, figureClickyInstruments, figureDjembes, figureShakers, figureSnares, figureInstruments };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Grid from '@material-ui/core/Grid';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport ClickNHold from 'react-click-n-hold';\nimport Slider from '@material-ui/core/Slider';\n\nimport {isMobile} from \"./Mobile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nconst ThinFormControlLabel = withStyles({\n  root: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n})(FormControlLabel);\n\nconst InlinableIconButton = withStyles({\n  root: {\n    padding: 2\n  }\n})(IconButton);\n\nconst NoDividerCenterTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: \"none\",\n    textAlign: \"center\",\n    paddingBottom: theme.spacing(0) // make instrument titles bunch up with their controls a little more\n  }\n}))(TableCell);\n\nconst CenterTableCell = withStyles((theme) => ({\n  root: {\n    textAlign: \"center\"\n  }\n}))(TableCell);\n\nfunction VolumeWidget(props)\n{\n  const [active, setActive] = React.useState(false);\n  const [sliderValue, setSliderValue] = React.useState(100);\n  const sliderRef = React.useRef(null);\n  const height = props.height ? props.height / 3 : 24;\n  const FixedHeightStylings = {\n    height: 3*height,\n    position: \"absolute\",\n    top: -height\n  };\n  const SliderStyles = Object.assign(active? {} : {\"visibility\": \"hidden\", paddingLeft: \"0px\"}, FixedHeightStylings);\n  const IconStyles = active ?  {\"visibility\":\"hidden\"} : {};\n\n  // currently: updating based on the normal volume event isn't nearly performant enough \n  // (because the app's state update is really sluggish)\n  // potential fixes - seperate the audio and the visual state and/or create smaller state objects\n  const setVolume = (event, value) =>\n  {\n    setSliderValue(value);\n    if( props.onChange )\n    {\n      props.onChange( value );\n    }\n  };\n\n  // for mobile\n  // we click'n'hold which opens the volume slider, but don't propagate focus\n  \n  // for desktop/tablet\n  // we click'n'hold and propagate focus to the slider, so that our drag \n  // will pull the slider up and down\n  const mobile = isMobile();\n\n  const holdDesktop = (start, event)=>{\n    if(!active){ setActive(true); }\n    if(sliderRef){ sliderRef.current.dispatchEvent(event.nativeEvent);}\n  };\n\n  const holdMobile= (start, event)=>{\n    if(!active){ setActive(true); }\n  };\n\n  const holdEndDesktop = (e)=>{\n    setActive(false);\n  };\n\n  const commitVolume = (event,value)=>\n  {\n    if( mobile ){ setActive(false); }\n    setVolume(event,value);\n  };\n\n  return (\n    <ClickNHold\n      time={0.5} // Time to keep pressing. Default is 2\n      onClickNHold={mobile ? holdMobile : holdDesktop}\n      onEnd={mobile ? null : holdEndDesktop} >\n      <InlinableIconButton disableRipple disableFocusRipple onClick={props.onMuteToggle} >\n        <div style={SliderStyles}>\n          <Slider\n            defaultValue={100}\n            orientation=\"vertical\"\n            aria-labelledby=\"vertical-slider\"\n            // onChange={setVolume}\n            onChangeCommitted={commitVolume}\n            ref={sliderRef}\n          />\n        </div>\n        <div style={IconStyles}>\n          { props.muted ?  <VolumeOffIcon disableRipple disableFocusRipple fontSize=\"small\" />\n          : sliderValue < 10 ? <VolumeMuteIcon disableRipple disableFocusRipple fontSize=\"small\" />\n          : sliderValue < 50 ? <VolumeDownIcon disableRipple disableFocusRipple fontSize=\"small\" />\n                             : <VolumeUpIcon disableRipple disableFocusRipple fontSize=\"small\"/> }\n        </div>\n      </InlinableIconButton>\n    </ClickNHold>\n  );\n}\n\nfunction InstrumentConfig(props) {\n  const classes = useStyles();\n\n  const handleChange = (x,y, event) => {\n    const instrumentID = props.instrumentIndex[x].id;\n    const oldInstrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const dstInstrumentIndex = y;\n    if( oldInstrumentIndex === dstInstrumentIndex )\n    {\n      return;\n    }\n    const oldInstrument = props.instruments[oldInstrumentIndex];\n    let replacedSrcInstrument = [\n      \"\",\n      {}\n    ];\n    if( oldInstrument != null )\n    {\n      replacedSrcInstrument[0] = oldInstrument[0];\n      for( const key of Object.keys(oldInstrument[1]) )\n      {\n        if( key !== instrumentID.toString() )\n        {\n          replacedSrcInstrument[1][key] = oldInstrument[1][key];\n        }\n      }\n    }\n    let dstInstrument = [\n      props.instruments[dstInstrumentIndex][0],\n      Object.assign({}, props.instruments[dstInstrumentIndex][1] )\n    ];\n    if(oldInstrument != null )\n    {\n      dstInstrument[1][instrumentID.toString()] = oldInstrument[1][instrumentID];\n    }\n    else\n    {\n      dstInstrument[1][instrumentID.toString()] = \"X\";\n    }\n\n    let replacedInstruments = [];\n\n    for(let instrumentIndex = 0; instrumentIndex < props.instruments.length; ++instrumentIndex)\n    {\n      if( instrumentIndex === oldInstrumentIndex )\n      {\n        replacedInstruments.push( replacedSrcInstrument );\n      }\n      else if( instrumentIndex === dstInstrumentIndex )\n      {\n        replacedInstruments.push( dstInstrument )\n      }\n      else\n      {\n        replacedInstruments.push( props.instruments[instrumentIndex] );\n      }\n    }\n    props.onChange(replacedInstruments);\n  };\n\n  const removeInstrument = (y) => \n  {\n    let replacedInstruments = props.instruments.slice(0,y).concat(props.instruments.slice(y+1));\n    props.onChange(replacedInstruments);\n  };\n\n  const [renamingInstrument, setRenamingInstrument] = React.useState(-1);\n  let [nameState, setNameState] = React.useState(\"\");\n\n  const createCell = (x,y) =>\n  {\n      return ( \n        <TableCell\n          align=\"center\"\n          key={\"instrumentPanel-cell-\" + y.toString() + \"-\" + x.toString()}\n        >\n        <ThinFormControlLabel\n          control={<Checkbox checked={props.instrumentMask[x] === y} onChange={(e) => handleChange(x,y,e)} name={x + \",\" + y.toString()} />}\n        />\n        </TableCell>\n      );\n  }\n\n  const createMatchingRow = (y) =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-\" + y.toString()}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-\" + y.toString() + \"-name\"}> \n          <Typography>{props.instruments[y][0]}</Typography>\n          <InlinableIconButton onClick={(e)=>setRenamingInstrument(y)}><EditIcon fontSize=\"small\"/></InlinableIconButton>\n          <InlinableIconButton onClick={(e)=>{removeInstrument(y);}}><ClearIcon fontSize=\"small\"/></InlinableIconButton>\n        </TableCell>\n        {[...Array(props.instrumentIndex.length).keys()].map(x=>createCell(x,y))}\n      </TableRow>\n    );\n  };\n\n  const createEditRow = () =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-edit\"}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-edit-cell\"}>\n          <IconButton onClick={(e)=>setRenamingInstrument(props.instruments.length)} aria-label=\"add\">\n            <AddBoxIcon/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  const renameInstrument = (e)  => \n  {\n    const instrumentName = nameState.trim();\n    if( instrumentName.length > 0 )\n    {\n      if( renamingInstrument === props.instruments.length )\n      {\n        const extraInstrument = [ instrumentName, {} ];\n        let replacedInstruments = Array.from( props.instruments );\n        replacedInstruments.push(extraInstrument);\n        props.onChange(replacedInstruments);\n      }\n      else\n      {\n        let replacedInstruments = Array.from( props.instruments );\n        replacedInstruments[renamingInstrument][0] = instrumentName;\n        props.onChange(replacedInstruments);\n      }\n    }\n    // we just ignore empty string\n    setRenamingInstrument(-1);\n    setNameState(\"\");\n  };\n\n  // todo: The text field is very slow\n  // that could be because the dialog and the table content are all one component\n  // I should try and fix that first\n  // otherwise, it's just that shoving react in the middle is too slow\n\n  const [editSymbol, setEditSymbol] = React.useState(-1);\n  let [editSymbolState, setEditSymbolState] = React.useState(\"\");\n\n  const startEditingSymbol = (x) =>\n  {\n    const instrumentID = props.instrumentIndex[x].id;\n    const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const currentSymbol = props.instruments[instrumentIndex][1][instrumentID];\n    setEditSymbolState(currentSymbol);\n    setEditSymbol(x);\n  };\n\n  const changeSymbol = (e) =>\n  {\n    const updatedSymbol = editSymbolState;\n    if(updatedSymbol.length===1)\n    {\n      const instrumentID = props.instrumentIndex[editSymbol].id;\n      const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n      let replacedInstruments = Array.from(props.instruments);\n      replacedInstruments[instrumentIndex][1][instrumentID] = editSymbolState;\n      props.onChange(replacedInstruments);\n    }\n    else\n    {\n      // todo: prettier error communication?\n      alert(\n        \"You selected an invalid symbol \\\"\" + updatedSymbol + \"\\\".\\n\" + \n        \"Symbols must be precisely 1 character.\"\n      );\n    }\n    setEditSymbol(-1);\n  };\n\n  return (\n    <React.Fragment>\n      <Dialog open={renamingInstrument >= 0} onClose={(e)=>setRenamingInstrument(-1)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter instrument name\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={nameState}\n            onChange={(e)=>setNameState(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e)=>setRenamingInstrument(-1)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={renameInstrument} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={editSymbol >= 0} onClose={(e)=>setEditSymbol(-1)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter notation symbol\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={editSymbolState}\n            onChange={(e)=>setEditSymbolState(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e)=>setEditSymbol(-1)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={changeSymbol} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow key={\"instrumentPanel-row-header\"}>\n              <NoDividerCenterTableCell key={\"instrumentPanel-row-instrument\"}> Instrument </NoDividerCenterTableCell>\n              {[...Array(props.instrumentIndex.length).keys()].map(x=>\n                  <NoDividerCenterTableCell key={\"instrumentPanel-row-header-cell-\" + x.toString()}>\n                    <Typography>{props.instrumentIndex[x].name}</Typography>\n                  </NoDividerCenterTableCell>)}\n            </TableRow>\n            <TableRow key={\"instrumentPanel-row-controls\"}>\n              <TableCell key={\"instrumentPanel-row-instrument\"}></TableCell>\n              {[...Array(props.instrumentIndex.length).keys()].map(x=>\n                  <CenterTableCell key={\"instrumentPanel-row-controls-cell-\" + x.toString()}>\n                    <Grid container>\n                    <Grid item xs={6}>\n                    <InlinableIconButton onClick={(e)=>startEditingSymbol(x)}>\n                      <EditIcon fontSize=\"small\"/>\n                    </InlinableIconButton>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <VolumeWidget\n                        muted={props.instrumentIndex[x].muted}\n                        onChange={(value)=>{ props.onVolumeEvent( {instrument: x, volume: value / 100.0}); }}\n                        onMuteToggle={()=>{props.onVolumeEvent( {instrument: x, muted: !props.instrumentIndex[x].muted})}}\n                        />\n                    </Grid>\n                    </Grid>\n                  </CenterTableCell>)}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n\n            {[...Array(props.instruments.length).keys()].map(y=>createMatchingRow(y))}\n            {createEditRow()}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </React.Fragment>\n  );\n}\n\nfunction createInstrumentMask(instrumentIndex, instruments)\n{\n  let instrumentMask = Array(instrumentIndex.length);\n  for( let baseInstrumentIndex = 0; baseInstrumentIndex < instrumentIndex.length; ++baseInstrumentIndex )\n  {\n    const baseInstrumentId = instrumentIndex[baseInstrumentIndex].id;\n    for( let targetInstrumentIndex = 0; targetInstrumentIndex < instruments.length; ++targetInstrumentIndex)\n    {\n      const target = instruments[targetInstrumentIndex];\n      if(baseInstrumentId.toString() in target[1])\n      {\n        instrumentMask[baseInstrumentIndex] = targetInstrumentIndex;\n      }\n    }\n  }\n  return instrumentMask;\n}\n\nexport { createInstrumentMask, InstrumentConfig };"],"sourceRoot":""}
{"version":3,"sources":["formatSettings.js","PatternDrawer.js","SettingsDrawer.js","notation.js","FileImport.js","History.js","TitledDialog.js","TitleScreen.js","instrumentation.js","utilities.js","track.js","SongLoaders.js","Part.js","PartWithTitle.js","Pattern.js","PlaybackControls.js","instrumentConfig.js","Audio.js","ToneController.js","SharingDialog.js","SongView.js","h2.js","LazySongViews.js","Routes.js","serviceWorker.js","index.js","SongStorage.js","Mobile.js","TabitBar.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","camelToReadable","s","spacedString","replace","toUpperCase","slice","FormatSettings","props","classes","tokenStateToItem","value","tokenItemToState","handleOptionChange","name","local","onChange","key","handleCheckedChange","event","target","checked","createOptionMenu","options","itemToState","stateToItem","localSetting","idString","variant","className","id","style","width","labelId","settings","e","textAlign","map","op","lineLengths","resolution","beatResolution","pattern","length","push","includes","sort","a","b","beatResolutions","c","lineResolution","root","notation","FORMAT_CONFIG_STRINGS","reduce","prev","curr","FORMAT_CONFIG_BOOLS","control","label","v","toString","parseInt","r","DefaultSettings","DEFAULT_FORMAT_CONFIG","PatternDrawer","iOS","process","browser","test","navigator","userAgent","mobile","isMobile","disableBackdropTransition","disableDiscovery","undefined","open","onOpen","onClose","placeholder","overflow","patterns","index","button","onClick","selectPattern","primary","React","memo","SettingsDrawer","patternDetails","getPatternLength","anchor","onSave","Fragment","onShare","config","patternResolution","Error","formatConfig","Object","keys","propName","hasOwnProperty","assign","str","chunkSize","match","RegExp","chunks","i","Math","min","numberRestMark","lineLength","beatCount","ceil","numberMarkerArray","Array","from","beat","line","asHTML","validateConfig","beatChunkSize","formatSymbol","symbol","numericPosition","n","join","formattedLine","charAt","lineWithBeats","showBeatMark","chunkString","beatMark","lineMark","trackDict","instrumentTracks","values","trackLength","defaultLineResolution","instrument","restMark","patternSize","patternArray","fill","charIndex","entries","trackID","trackSymbol","trackInstance","rep","resolveConfig","formatPatternString","patternString","lineArray","formattedLineArray","showBeatNumbers","formatLineWithMarkers","createNumberMarker","t","max","FileImport","hiddenFileInput","createRef","fileObject","files","reader","FileReader","onload","loadEvent","onImport","file","content","result","readAsText","this","accept","buttonProps","Button","current","click","type","hidden","ref","Component","height","maxWidth","maxHeight","History","items","data","Paper","Typography","Divider","List","x","ListItem","ListItemText","secondary","Date","date","toLocaleDateString","renderRow","TitledDialog","Dialog","DialogTitle","title","DialogContent","DialogContentText","children","DialogActions","TitleScreen","state","error","history","songHistory","controls","pathname","filename","song","console","log","setState","licenseBanner","href","withStyles","position","bottom","zIndex","drawer","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","DEFAULT_INSTRUMENT_SYMBOLS","normalizeInstrumentsForFiguring","instruments","inst","nInst","toLowerCase","manageAccentOrGhost","instrumentName","accentSymbol","ghostSymbol","outputInstruments","t0","t1","zeroLouder","volume","gain","mapping","track","activeInstruments","nonTrivialInstruments","Set","p","instrumentID","empty","add","defaultSymbolForSingleInstrument","symbolConfig","lowerName","figureInstruments","instrumentsRaw","output","concat","worthwhileInstruments","relevantTracks","filter","has","trackIsClick","tomIndex","bassIndex","collated","candidate","floor","clickTrack","hitTrack","instrumentIsTom","rawInstrumentName","lastTrack","figureClickyInstruments","djembeTracks","slapArray","toneArray","bassArray","djembeMapping","figureDjembes","figureSnares","figureShakers","instrumentUsed","createInstrumentMask","instrumentIndex","instrumentMask","baseInstrumentIndex","baseInstrumentId","targetInstrumentIndex","calculateResolution","positions","size","implicitPositions","allNotesPass","findHCF","y","count","other","_sumOverlapsOfArrays","hcf","formatResolution","pat","aggregate","totalLength","points","toPoints","representPoints","arrayIndex","resolutionToUse","SongData","sourceFile","LoadJSON","jsonData","fromHydrogen","Promise","resolve","patternData","replacedTracks","trackData","patternWithTracks","createPatternsFromData","prepHydrogenVolumes","active","activeInstrumentation","moduleExports","LoadExample","kuva","styles","whiteSpace","fontFamily","fontSize","PreTypography","Part","tracks","patternLines","chunkArray","beatsPerLine","linesWithBeats","lineIndices","formatLine","startBeat","beats","component","numberLine","beatChunks","lineIndex","PartWithTitle","Title","headingLevel","defaultLevel","safeHeading","getTitleType","Pattern","instrumentIndices","ActivePattern","patternTime","prevBeat","force","prevElements","getElementsByClassName","classList","remove","elements","prevProps","prevState","snapshot","changePatternTime","calculateBeat","nextProps","nextState","color","main","PlaybackControls","IconButton","aria-label","onPlay","onStop","Grid","container","item","xs","Slider","defaultValue","step","tempo","onTempoChange","valueLabelDisplay","ThinFormControlLabel","marginLeft","marginRight","FormControlLabel","InlinableIconButton","NoDividerCenterTableCell","borderBottom","paddingBottom","TableCell","CenterTableCell","VolumeWidget","useState","setActive","sliderValue","setSliderValue","muted","setMuted","sliderRef","useRef","FixedHeightStylings","top","SliderStyles","paddingLeft","IconStyles","time","onClickNHold","start","dispatchEvent","nativeEvent","onEnd","disableRipple","disableFocusRipple","onMuteEvent","orientation","aria-labelledby","setVolume","RawInstrumentEditDialog","currentSymbol","cancel","onCancel","confirm","alert","TextField","autoFocus","fullWidth","onKeyDown","keyCode","preventDefault","InstrumentRenameDialog","currentName","trim","InstrumentTable","setOpen","createCell","align","Checkbox","oldInstrumentIndex","findIndex","dstInstrumentIndex","oldInstrument","replacedSrcInstrument","dstInstrument","replacedInstruments","handleChange","createMatchingRow","TableRow","scope","onEditRow","editRow","onRemoveRow","removeRow","Table","table","TableHead","onEditColumn","editColumn","onVolumeEvent","TableBody","onAddRow","InstrumentConfig","useTheme","editingSymbol","setEditingSymbol","renamingInstrument","setRenamingInstrument","endEditingSymbol","resolvedSymbol","extraInstrument","renameInstrument","getSymbol","TableContainer","removeInstrument","Audio","window","AudioContext","webkitAudioContext","minResolution","combined","peakValue","channel","numberOfChannels","combinedChannel","getChannelData","sample","abs","peakAmplitude","context","sounds","determineTrackLength","trackLengthSamples","totalSamples","samplesPerHydrogen","createBuffer","selected","audioBuffer","audioChannel","trackPoints","sampleStart","normalizeAudioBuffer","buffer","source","createBufferSource","loop","playbackRate","connect","destination","AUDIO_DELAY","setAudioDelay","DRUMKITS","convertNormalToAudible","pow","ToneController","onTimeChange","latencyHint","onLoadError","Tone","samples","currentPattern","toDestination","onPatternTimeChange","bpm","sampleCount","expectedSampleCount","failures","determineMinResolution","populateSamples","currentPatternName","sortedFailures","drumkit","noMatch","otherDrumkit","otherName","createSortedUnique","plural","message","failureIndex","stop","selectedInstrument","clampedVolume","player","mute","relativeUrl","drumkitName","chooseAppropriateUrlForInstrument","patternLength","callback","sampleSource","samplesReady","indexFromStart","sampleData","schedule","notePosition","createSequenceCallback","seq","_part","sequences","createSequenceForPattern","patternName","oldPatternName","oldLength","timeFromBarEnd","loopEnd","toSeconds","queueTransition","nextSequence","enableNewTrack","sequence","setLoopPoints","scheduleOnce","then","now","set","SharingDialog","aria-describedby","url","copy","figurePatternSettings","guessPerPatternSettings","makeResolvedSettings","memoizeOne","globalSettings","patternSettings","resolvedSettings","SongView","selectedPattern","songData","formatSettings","settingsOpen","patternsOpen","sharingDialogOpen","errorAlert","changeInstruments","sendVolumeEvent","audio","setVolumeForInstrument","setMutedForInstrument","handleSettingsChange","change","updatedSettings","handlePatternsToggle","handleSettingsToggle","patternIndex","setActivePattern","SongStorage","getExportState","songID","permanentUrl","origin","catch","err","onDownload","closeSharingDialog","play","onSetTempo","setTempo","nullCheck","currentBeatResolution","currentBeat","nextBeat","errorMessage","addEventListener","removeEventListener","teardown","songName","version","patternSpecifics","instrumentConfigColumns","Toolbar","TabitBar","settingsToggle","patternsToggle","Snackbar","severity","autoHideDuration","Alert","AlertTitle","Box","split","flexGrow","calculatePatternResolution","notes","note","parseHydrogenJs","instrumentElements","instrumentList","instrumentArray","element","instrumentComponent","parseFloat","isMuted","layer","patternElements","patternList","noteElements","noteList","noteElement","patternsWithTracks","relevantNotes","relevantHits","fromPositions","virtualPatternList","virtualPatternGroups","patternToRelated","virtualGroup","rootPatternName","relatedPatterns","virtual","iteration","expandedObject","objectHasExpanded","related","expandedNodeSet","node","relatedPatternSet","rootPattern","find","patternToMergeName","patternToMerge","merged","copiedTrack","format","xmlString","parser","xml2js","Parser","parseStringPromise","parseHydrogenPromise","WaitingMessage","CircularProgress","ExampleSongView","SongLoaders","SongNameFromFile","FileImportSongView","navigateHomeWithError","h2","h","JSON","parse","SongStorageSongView","loadedFile","LocalStorageSongView","matches","hash","decodeState","Routes","prefersDarkMode","useMediaQuery","responsiveFontSizes","useMemo","createMuiTheme","basename","ThemeProvider","CssBaseline","exact","path","render","location","params","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","encodeState","js","stringify","zlib","deflateSync","binaryBuffer","Buffer","decompressedString","inflateSync","JSON_BIN_API_BINS","JSON_BIN_API","put","exportState","binShort","stateToShare","metadata","method","headers","private","body","fetch","response","ok","json","get","binID","getLocalHistory","storage","setItem","removeItem","DOMException","code","storageAvailable","jsonHistory","localStorage","getItem","saveToLocalHistory","stateHash","relevantHistory","historyEntry","restrictedHistory","download","destFilename","blob","Blob","saveAs","vendor","opera","some","toMatchItem","edge","Link","to","noWrap"],"mappings":"iSAcMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,SAId,SAASC,EAAgBC,GAEvB,IAAMC,EAAeD,EAAEE,QAAQ,WAAY,OAC3C,OAAOD,EAAa,GAAGE,cAAgBF,EAAaG,MAAM,GAG5D,SAASC,EAAeC,GACtB,IAAMC,EAAUf,EAAUc,GAG1B,SAASE,EAAiBC,GAExB,MAAiB,MAAVA,EAAgB,QAAUA,EAGnC,SAASC,EAAiBD,GAExB,MAAiB,UAAVA,EAAoB,IAAMA,EAMnC,IAAME,EAAqB,SAACC,EAAMH,EAAOI,GAEvCP,EAAMQ,SAAS,CAACC,IAAKH,EAAMH,MAAOA,EAAOI,MAAOA,KAG5CG,EAAsB,SAACC,GAE3BX,EAAMQ,SAAS,CAACC,IAAKE,EAAMC,OAAON,KAAMH,MAAOQ,EAAMC,OAAOC,QAASN,OAAO,KAG9E,SAASO,EACPR,EACAS,GAKD,IAJCC,EAIF,uDAJgBZ,EACda,EAGF,uDAHgBf,EACdgB,EAEF,wDACQC,EAAW,gBAAkBb,EAAO,MAC1C,OACE,cAAC,IAAD,CAAUc,QAAQ,SAASC,UAAWpB,EAAQZ,YAA4BiC,GAAIH,EAAUI,MAAO,CAACC,MAAM,OAAtG,SACE,eAAC,IAAD,CAAaD,MAAO,CAACC,MAAM,QAA3B,UACE,cAAC,IAAD,CAAYF,GAAG,yBAAf,SAAyChB,IACzC,cAAC,IAAD,CACEmB,QAAS,mBAAqBnB,EAAO,WACrCgB,GAAI,mBAAqBhB,EAAO,MAChCH,MAAOc,EAAYjB,EAAM0B,SAASpB,IAClCA,KAAMA,EACNE,SAAU,SAACmB,GAAD,OAAOtB,EAAoBsB,EAAEf,OAAON,KAAMU,EAAYW,EAAEf,OAAOT,OAAQe,IACjFK,MAAO,CAACC,MAAM,MAAOI,UAAW,UANlC,SAQGb,EAAQc,KAAI,SAACC,GAAD,OAAQ,cAAC,IAAD,CAAwD3B,MAAOc,EAAYa,GAAKP,MAAO,CAACK,UAAW,UAAnG,SAA+GX,EAAYa,IAA5G,sBAAwBxB,EAAO,IAAMwB,YAXfX,GAoCpE,IALA,IAIIY,EAAc,GAClB,MAF6B,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAE5D,eACA,CADK,IAEGC,EAAiB,GAFb,KAGLA,EAAahC,EAAM0B,SAASO,iBAAoB,GAC/CD,GAAchC,EAAMkC,QAAQC,QAGhCJ,EAAYK,KAAMJ,GAIjBD,EAAYM,SAAUrC,EAAMkC,QAAQC,UAEvCJ,EAAYK,KAAMpC,EAAMkC,QAAQC,QAChCJ,EAAYO,MAAK,SAACC,EAAGC,GAAK,OAAOD,EAAEC,MAKrC,IAFA,IACIC,EAAkB,GACtB,MAFiC,CAAC,GAAI,GAAI,GAAI,GAAI,IAElD,eACA,CADK,IAAMC,EAAC,KAELA,EAAI1C,EAAMkC,QAAQF,aAAgB,GAAOhC,EAAM0B,SAASiB,eAAiBD,IAAQ,GAEpFD,EAAgBL,KAAMM,GAG1B,OACE,cAAC,IAAD,CAAWrB,UAAWpB,EAAQ2C,KAA9B,SACE,eAAC,IAAD,WACGC,IAASC,sBAAsBjB,KAAK,SAAAC,GAAE,OAAIhB,EAAkBgB,EAAG,GAAIA,EAAG,OAAOiB,QAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAMC,MAC3GJ,IAASK,oBAAoBrB,KAAK,SAAAC,GAAE,OAhDhBxB,EAgDuCwB,EA7C9D,cAAC,IAAD,UACE,cAAC,IAAD,CACEqB,QAAS,cAAC,IAAD,CAAQtC,QAASb,EAAM0B,SAASpB,GAAOE,SAAUE,EAAqBJ,KAAMA,IACrF8C,MAAO3D,EAAgBa,IAClB,UAAUA,IAJJ,gBAAkBA,GAHrC,IAA2BA,KAgD6CyC,QAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAMC,MAC9F,eAAC,IAAD,WAAgB,WAAajD,EAAMkC,QAAQ5B,KAAO,WAAlD,OAEEQ,EACE,iBACA2B,GACA,SAACY,GAAD,OAAOA,EAAEC,cACT,SAACD,GAAD,OAAOE,SAASF,MAChB,GAGHvC,EACC,iBACAiB,GA/CqB,SAACS,GAAD,OAAOxC,EAAM0B,SAASO,eAAiBsB,SAASf,MADhD,SAACgB,GAAD,OAASA,EAAIxD,EAAM0B,SAASO,gBAAiBqB,cAmDlE,QAOZ,IAAMG,EAAkBZ,IAASa,uB,knaCjJjC,SAASC,EAAc3D,GACtB,IAAD,EACQ4D,EAAMC,EAAQC,SAAW,mBAAmBC,KAAKC,UAAUC,WAC3DC,EAASC,cAUf,OACE,eAAC,IAAD,CAAiBC,2BAA4BR,EAAKS,iBAAkBT,EACpExC,QAAS8C,OAASI,EAAY,aAC9BC,KAAMvE,EAAMuE,KACZC,OAAQxE,EAAMwE,OACdC,QAASzE,EAAMyE,QAJf,UAMIP,EAAoC,KAA3B,cAAC,IAAD,CAAUQ,aAAW,IAChC,qBACEnD,MAAO,CAACoD,SAAU,QADpB,SAGE,cAAC,IAAD,WACG,UAAC3E,EAAM4E,gBAAP,QAAmB,IAAI/C,KAAK,SAACK,EAAS2C,GAAV,OAC3B,cAAC,IAAD,CACEC,QAAM,EAENC,QAAS,WAAW/E,EAAMgF,eAAehF,EAAMgF,cAAcH,IAH/D,SAKE,cAAC,IAAD,CAAcI,QAAS/C,EAAQ5B,QAH1B,iBAAmBuE,EAAMvB,sBAc7B4B,QAAMC,KAAKxB,K,uJCxC1B,SAASyB,EAAepF,GACvB,IAAD,EACQ4D,EAAMC,EAAQC,SAAW,mBAAmBC,KAAKC,UAAUC,WAC3DC,EAASC,cAETkB,EAAiBrF,EAAMkC,QAAU,CACrC5B,KAAON,EAAMkC,QAAQ5B,KACrB0B,WAAahC,EAAMkC,QAAQF,WAC3BG,OAAQU,IAASyC,iBAAiBtF,EAAMkC,UACtC,KAGJ,OACE,eAAC,IAAD,CAAiBkC,2BAA4BR,EAAKS,iBAAkBT,EAClEvC,UAAWrB,EAAMqB,UACjBD,QAAU8C,OAASI,EAAY,aAC/BiB,OAAQvF,EAAMuF,OACdhB,KAAMvE,EAAMuE,KACZC,OAAQxE,EAAMwE,OACdC,QAASzE,EAAMyE,QACflD,MAAO,CAACoD,SAAU,UAPpB,UASIT,EAAoC,KAA3B,cAAC,IAAD,CAAUQ,aAAW,IAC/BW,GACC,cAAC,IAAD,CACE7E,SAAQ,UAAER,EAAMQ,gBAAR,QAdH,aAeLkB,SAAU1B,EAAM0B,SAChBQ,QAASmD,IAGZA,GAAkBrF,EAAMwF,QACvB,eAAC,IAAMC,SAAP,WACE,cAAC,IAAD,CACEV,QAAS,SAACpD,GAAQ3B,EAAMwF,UAD1B,sBAGA,cAAC,IAAD,OAGHH,GAAkBrF,EAAM0F,SACvB,cAAC,IAAD,CACEX,QAAS,SAACpD,GAAQ3B,EAAM0F,WAD1B,sBAmBOR,QAAMC,KAAKC,K,gKCnEpBvC,E,4GA0BkB8C,EAAQC,GAC5B,GAAyB,MAArBA,GAA+BD,EAAO1D,eAAiB2D,IAAwB,EAEjF,MAAM,IAAIC,MAAM,mDAElB,GAAIF,EAAOhD,gBAAkB,EAE3B,MAAM,IAAIkD,MAAM,qD,oCAICC,GAEnB,IAAI,IAAJ,MAAuBC,OAAOC,KAAKF,GAAnC,eACA,CADK,IAAMG,EAAQ,KAEjB,IAAIpD,EAASa,sBAAsBwC,eAAeD,GAEhD,MAAM,IAAIJ,MAAM,gCAAkCI,GAItD,OAAOF,OAAOI,OAAQJ,OAAOI,OAAO,GAAItD,EAASa,uBAAwBoC,K,kCAGxDM,EAAKC,GACtB,GAAIA,GAAa,EAEf,MAAM,IAAIR,MAAM,yBAElB,OAAOO,EAAIE,MAAM,IAAIC,OAAO,OAASF,EAAY,IAAK,Q,iCAGtC9D,EAAG8D,GAEnB,GAAIA,GAAa,EAEf,MAAM,IAAIR,MAAM,yBAGlB,IADA,IAAIW,EAAS,GACJC,EAAI,EAAGA,EAAIlE,EAAEJ,OAAQsE,GAAKJ,EAEjCG,EAAOpE,KAAMG,EAAEzC,MAAM2G,EAAGC,KAAKC,IAAKF,EAAIJ,EAAW9D,EAAEJ,UAErD,OAAOqE,I,yCAGiBI,EAAgB3E,EAAgB2D,EAAmBiB,GAE3E,GAAIA,GAAc,EAEhB,MAAM,IAAIhB,MAAM,mBAGlB,GAAM5D,EAAiB2D,IAAwB,EAE7C,MAAM,IAAIC,MAAM,qBAAuBD,EAAkBtC,WAAa,mCAAqCrB,EAAeqB,YAM5H,IAHA,IAAIwD,EAAYJ,KAAKK,KAAKF,EAAa5E,GACnC+E,EAAoBC,MAAMC,KAAMD,MAAMJ,EAAajB,IAAoB,SAAAjE,GAAC,OAAIiF,KAEvEO,EAAO,EAAGA,EAAOL,EAAWK,IAEnCH,EAAmBG,GAASlF,EAAiB2D,MAA2BuB,EAAK,GAAK,IAAK7D,WAEzF,OAAO0D,I,4CAGoBrB,EAAQyB,EAAMxB,EAAmByB,GAE5DxE,EAASyE,eAAe3B,GAexB,IAbA,IAAM4B,EAAgB5B,EAAO1D,eAAiB2D,EAUxC4B,EAAeH,EAJO,SAACI,EAAQC,GACnC,MAAO,sBALQC,EAKuBD,IAJtCC,GAAQ,IACCxF,SAFSX,EAKqC,GAH5BmG,EAAI,IAAIV,MAAMzF,EAAQmG,EAAExF,OAAS,GAAGyF,KAAK,KAAOD,GAGf,MAAQF,EAAS,UAL/D,IAACE,EAAGnG,GAQgC,SAACiG,EAAQC,GAAT,OAA6BD,GAE7EI,EAAgB,GACXhD,EAAQ,EAAGA,EAAQuC,EAAKjF,SAAW0C,EAC5C,CACE,IAAM6C,EAAkB9B,EAAoBf,EAC5CgD,GAAiBL,EAAaJ,EAAKU,OAAOjD,GAAQ6C,GAIpD,IAAMK,EAAgBpC,EAAOqC,aAAenF,EAASoF,YAAYJ,EAAeN,EAAgBC,EAAa,IAAK,GAAGrF,QAAQyF,KAAKjC,EAAOuC,UAAYL,EAErJ,OAAOlC,EAAOwC,SAAWJ,EAAgBpC,EAAOwC,W,4CAIhDC,EACAnG,GAGA,IAAMoG,EAAmBtC,OAAOuC,OAAOF,GACvC,GAA+B,IAA5BC,EAAiBlG,OAElB,OAAO,IAET,IAAMoG,EAAcF,EAAiB,GAAGlG,SAClC2E,EAAYyB,EAActG,EAChC,OAAI6E,GAAa,GAERyB,EAEAzB,EAAY,GAEZ,IAKS,CACdyB,EACAA,EAAc,EACdA,EAAc,EACdA,EAAc,EACdA,EACAA,EAAc,EACdA,EACAA,EAAc,EACdA,EAAc,EACdA,EAAc,EACdA,EACAA,EAAc,EACdA,EAAc,EACdA,EACAA,EAAc,EACdA,EAAc,EACdA,EACAA,EAAc,EACdA,EACAA,EAAc,GAEAzB,EAAY,M,8CAK9BsB,GAGA,MAAO,CACL,eAAmBvF,EAAS2F,sBAAsBJ,EAAW,IAC7D,eAAmB,M,0CAKrBK,EACAL,EACAM,GAGA,IAAIL,EAAmBtC,OAAOuC,OAAOF,GACrC,GAA+B,IAA5BC,EAAiBlG,OAElB,MAAO,GAQT,IALA,IAAMwG,EAAcN,EAAiB,GAAGlG,SAClCyD,EAAoByC,EAAiB,GAAGrG,WAG1C4G,EAAe3B,MAFI0B,EAAc/C,GAEIiD,KAAKH,GACrCI,EAAY,EAAGA,EAAYF,EAAazG,SAAU2G,EAGzD,IAAI,IAAJ,MAAqC/C,OAAOgD,QAAQN,GAApD,eACA,CAAC,IAAD,sBADYO,EACZ,KADqBC,EACrB,KACQC,EAAgBd,EAAUY,GACX,MAAjBE,GAA0D,IAAjCA,EAAcC,IAAIL,KAE7CF,EAAaE,GAAaG,GAIhC,OAAOL,I,6CAIPH,EACAL,EACAf,GAGD,IAFCvB,EAEF,uDAFiB,GAGTH,EAAS9C,EAASuG,cAActD,GAElCuC,EAAmBtC,OAAOuC,OAAOF,GACrC,GAA+B,IAA5BC,EAAiBlG,OAElB,MAAO,GAIT,IAAMyG,EAAe/F,EAASwG,oBAAqBZ,EAAYL,EAAWzC,EAAO+C,UAC3EY,EAAgBV,EAAahB,KAAK,IAClChC,EAAoByC,EAAiB,GAAGrG,WACxC2G,EAAcN,EAAiB,GAAGlG,SAGpCoH,EAAY1G,EAASoF,YAAaqB,EAAe3D,EAAOhD,eAAiBiD,GAEzE4D,EAAqB,GAErB7D,EAAO8D,iBAETD,EAAmBpH,KAAMS,EAAS6G,sBAChC/D,EACA9C,EAAS8G,mBAAmBhE,EAAOiB,eAAgBjB,EAAO1D,eAAgB2D,EAAmBc,KAAKC,IAAIhB,EAAOhD,eAAgBgG,IAAcf,KAAK,IAChJhC,EACAyB,IAGJ,IAAK,IAAIZ,EAAI,EAAGA,EAAI8C,EAAUpH,SAAUsE,EAEtC+C,EAAmBpH,KAAMS,EAAS6G,sBAAuB/D,EAAQ4D,EAAU9C,GAAIb,EAAmByB,IAGpG,OAAOmC,EAAmB5B,KAAK,Q,uCAGT1F,GAGtB,IADA,IAAIqG,EAAc,GAClB,MAAkBxC,OAAOgD,QAAQ7G,EAAQmG,kBAAzC,eACA,CAAC,IADWuB,EACZ,uBACIrB,EAAc7B,KAAKmD,IAAKtB,EAAaqB,EAAEzH,UAE3C,OAAOoG,I,2CAGmBrG,GAG1B,IADA,IAAIF,EAAa,GACjB,MAAkB+D,OAAOgD,QAAQ7G,EAAQmG,kBAAzC,eACA,CAAC,IADWuB,EACZ,uBACI5H,EAAa0E,KAAKC,IAAK3E,EAAY4H,EAAE5H,YAEzC,OAAOA,M,KAlRLa,EAGGa,sBAAwB,CAC7B,SAAa,IACb,SAAa,IACb,SAAa,IACb,eAAmB,IACnB,eAAmB,GACnB,cAAiB,EACjB,iBAAoB,EAGpB,eAAmB,KAbjBb,EAgBGC,sBAAwB,CAC7B,CAAC,WAAW,CAAC,IAAK,IAAK,MACvB,CAAC,iBAAiB,CAAC,IAAK,IAAK,OAlB3BD,EAqBGK,oBAAsB,CAC3B,eACA,mBAgQWL,O,2KCvOAiH,E,kDAvCb,WAAY9J,GAAQ,IAAD,8BACjB,cAAMA,IACD+J,gBAAkB7E,IAAM8E,YAFZ,E,qDAKVrI,GAAI,IAAD,OACJsI,EAAatI,EAAEf,OAAOsJ,MAAM,GAC5BC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAAC,GACV,EAAKtK,MAAMuK,UAEb,EAAKvK,MAAMuK,SACT,CAAEC,KAAMP,EAAYQ,QAAUH,EAAU1J,OAAO8J,UAIrDP,EAAOQ,WAAWV,K,+BAGV,IAAD,wBAKwCW,KAAK5K,OAAnC6K,GALV,EAKAN,SALA,EAKUM,QAAWC,EALrB,qCAMP,OACE,eAAC,IAAMrF,SAAP,WACE,cAACsF,EAAA,EAAD,yBAAQhG,QAPM,SAACpD,GACjB,EAAKoI,gBAAgBiB,QAAQC,UAMKH,GAAhC,8BACA,uBACEI,KAAK,OACLC,QAAM,EACNN,OAAQA,EACRrK,SAAU,SAACmB,GAAD,OAAO,EAAKnB,SAASmB,IAAIyJ,IAAKR,KAAKb,yB,GAlC9B7E,IAAMmG,W,sECGzBnM,EAAYC,aAAW,SAACC,GAAW,MAAO,CAC9CwD,KAAM,CACJpB,MAAO,OACP8J,OAAQ,IACR9L,SAAU,IACV+L,SAAU,IACVC,UAAW,IACX7G,SAAU,YAmCC8G,MAvBf,SAAiBzL,GAEf,IAAMC,EAAUf,IACVwM,EAAQ1L,EAAM2L,KACpB,OACE,qBAAKtK,UAAWpB,EAAQ2C,KAAxB,SACE,eAACgJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,8BACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACO,YAAIL,EAAM1F,QAAQnE,KAAM,SAAAmK,GAAC,OAlBxC,SAAmBhM,GACjB,OACE,cAACiM,EAAA,EAAD,CAAUnH,QAAM,EAACvD,MAAOvB,EAAMuB,MAAyBwD,QAAS/E,EAAM+E,QAAtE,SACE,cAACmH,EAAA,EAAD,CAAcjH,QAASjF,EAAMM,KAAM6L,UAAW,IAAIC,KAAKpM,EAAMqM,MAAMC,wBAD3BtM,EAAM6E,OAgBR0H,CAAU,CACtC1H,MAAQmH,EACR1L,KAAMoL,EAAMM,GAAG1L,KACfgB,GAAIoK,EAAMM,GAAG1K,GACb+K,KAAMX,EAAMM,GAAGK,KACftH,QAAS,WAAQ/E,EAAM+E,SAAS/E,EAAM+E,QAAQ2G,EAAMM,kB,6CCXrDQ,MAzBf,SAAsBxM,GAEpB,OACE,eAACyM,EAAA,EAAD,CAAQlI,KAAMvE,EAAMuE,KAAME,QAASzE,EAAMyE,QAAzC,UACE,cAACiI,EAAA,EAAD,CAAapL,GAAG,oBAAhB,SAAqCtB,EAAM2M,QAC3C,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACG7M,EAAM8M,aAGX,cAACC,EAAA,EAAD,UACE,cAAChC,EAAA,EAAD,CAAQhG,QAAS/E,EAAMyE,QAASrD,QAAQ,YAAxC,sBCYF4L,G,mNAEJC,MAAQ,CACNC,MAAO,EAAKlN,MAAMkN,O,uDAInB,IAAD,OACMC,EAAUvC,KAAK5K,MAAMmN,QACnBC,EAAcxC,KAAK5K,MAAMoN,YAgBzBC,EACJ,eAAC,IAAM5H,SAAP,WACE,cAACsF,EAAA,EAAD,CAAQ3J,QAAQ,YAAY2D,QAAS,WAAKoI,EAAQ/K,KAAK,aAAcb,MAAO,CAACjC,OAAQ,OAArF,0BACA,cAAC,EAAD,CACEiC,MAAO,CAACjC,OAAQ,OAChB8B,QAAQ,YACRmJ,SApBmB,SAAC5I,GAExBwL,EAAQ/K,KAAK,CACXkL,SAAU,UACVC,SAAU5L,EAAE6I,KAAKlK,KACjBmK,QAAS9I,EAAE8I,WAgBTI,OAAO,sBAIL5K,EAAY2K,KAAK5K,MAAjBC,QACR,OACE,sBAAKoB,UAAU,MAAf,UACE,gCACE,uCACA,8DACCgM,KAEH,qBAAK9L,MAAO,CAAC,WAAe,OAAQ,YAAe,QAAnD,SACE6L,EAAYjL,OAAS,GACrB,cAAC,EAAD,CAASwJ,KAAMyB,EAAarI,QA1BX,SAACyI,GACtBC,QAAQC,IAAIF,GACZL,EAAQ/K,KAAK,WAAaoL,EAAKlM,GAAK,YA2B9BsJ,KAAKqC,MAAMC,OACb,cAAC,EAAD,CACEP,MAAM,wBACNpI,OAAQqG,KAAKqC,MAAMC,MACnBzI,QAAS,WAAK,EAAKkJ,SAAS,CAACT,MAAO,QAHtC,SAKGtC,KAAKqC,MAAMC,QAGhB,qBAAK7L,UAAWpB,EAAQ2N,cAAxB,SACE,8FAAgE,mBAAGC,KAAK,yCAAR,gE,GA3DhD3I,IAAMmG,YAkEjByC,eA1FA,SAAC1O,GACd,MAAO,CACLwO,cAAe,CACbG,SAAS,WACTC,OAAO,EACP,MAAS,MACT,UAAa,SACb,gBAAoB,UACpB,OAAW5O,EAAM6O,OAAOC,QAE1BC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBpP,EAAMqP,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,UAAWxP,EAAMyP,QAAQ,GACzBC,QAAS1P,EAAMG,QAAQ,EAAG,EAAG,OAuEpBuO,CAAmBd,G,uFClG5B+B,EAA6B,CACjC,cAAgB,IAChB,cAAgB,IAChB,cAAgB,IAChB,cAAgB,IAChB,eAAiB,IACjB,eAAiB,IACjB,gBAAkB,IAClB,MAAU,IACV,KAAS,IACT,IAAQ,IACR,QAAY,KAGd,SAASC,EAAgCC,GAEvC,IADF,EACMtH,EAAI,GADV,cAEoBsH,GAFpB,IAEE,IAAI,EAAJ,qBACA,CAAC,IADSC,EACV,QACMC,EAAQpJ,OAAOI,OAAO,GAAI+I,GAG9BC,EAAM7O,KAAO6O,EAAM7O,KAAK8O,cACxBzH,EAAEvF,KAAM+M,IARZ,8BAUE,OAAOxH,EAoDT,SAAS0H,EAAoBhH,EAAkBiH,EAAgBC,EAAcC,GAE3E,IAAIC,EAAoB,GACxB,GAA+B,IAA5BpH,EAAiBlG,OACpB,CACE,IAAMuN,EAAKrH,EAAiB,GACtBsH,EAAKtH,EAAiB,GAEtBuH,EAAaF,EAAGG,OAASF,EAAGE,QAAWH,EAAGG,SAAWF,EAAGE,QAAUH,EAAGI,KAAOH,EAAGG,KACjFC,EAAU,GACdA,EAASL,EAAGpO,GAAGgC,YAAesM,EAAaL,EAAeC,EAC1DO,EAASJ,EAAGrO,GAAGgC,YAAesM,EAAaJ,EAAcD,EACzDE,EAAkBrN,KAAK,CAACkN,EAAgBS,QAG1C,qBAEsB1H,GAFtB,IAEE,IAAI,EAAJ,qBACA,CAAC,IADU2H,EACX,QACMD,EAAU,GACdA,EAASC,EAAM1O,GAAGgC,YAAeiM,EACjCE,EAAkBrN,KAAK,CAACkN,EAAgBS,KAN5C,+BASA,OAAON,EAiCT,SAASQ,EAAkBrL,GAEzB,IADF,EACMsL,EAAwB,IAAIC,IADlC,cAEkBvL,GAFlB,IAEE,IAAI,EAAJ,qBAEE,IADD,IADUwL,EACX,QACE,MAAkCrK,OAAOgD,QAAQqH,EAAE/H,kBAAnD,eACA,CAAC,IAAD,sBADWgI,EACX,UACYC,SAERJ,EAAsBK,IAAIhN,SAAS8M,KAR3C,8BAYE,OAAOH,EA0FT,SAASM,EAAiCC,EAAcnQ,GAgBtD,IAAMoQ,EAAYpQ,EAAK8O,cACvB,OAAIsB,EAAUrO,SAAS,UAAYqO,EAAUrO,SAAS,SAE7CoO,EAAY,MAEZC,EAAUrO,SAAS,SAAWqO,EAAUrO,SAAS,QAEjDoO,EAAY,KAEZC,EAAUrO,SAAS,SAEnBoO,EAAa,gBAEbC,EAAUrO,SAAS,UAEnBoO,EAAY,OAEZC,EAAUrO,SAAS,OAEnBoO,EAAY,IAEZC,EAAUrO,SAAS,UAEtBqO,EAAUrO,SAAS,QAEdoO,EAAa,eAEbC,EAAUrO,SAAS,QAEnBoO,EAAa,eAIbA,EAAa,eAGjBA,EAAY,QAGrB,SAASE,EAAkBC,EAAgBH,EAAc7L,GAEvD,IAAIiM,EAAS,GAIbA,GADAA,GADAA,GADAA,EAASA,EAAOC,OAnIlB,SAAiCF,EAAgBH,EAAc7L,GAuB7D,IArBA,IAAMqK,EAAcD,EAAgC4B,GAC9CG,EAAwBd,EAAkBrL,GAC1CoM,EAAiB/B,EAAYgC,QAAQ,SAAC/B,GAAD,OAAY6B,EAAsBG,IAAIhC,EAAK5N,MACnF4N,EAAK5O,KAAK+B,SAAS,YAClB6M,EAAK5O,KAAK+B,SAAS,UACrB6M,EAAK5O,KAAK+B,SAAS,UACnB6M,EAAK5O,KAAK+B,SAAS,QACnB6M,EAAK5O,KAAK+B,SAAS,SACnB6M,EAAK5O,KAAK+B,SAAS,YAGf8O,EAAelK,MAAMC,KACzB8J,GACA,SAACpH,GAAD,OAAOA,EAAEtJ,KAAK+B,SAAS,UAAYuH,EAAEtJ,KAAK+B,SAAS,YAKjD+O,EAAW,EACXC,EAAY,EACZC,EAAW,GACNC,EAAY,EAAGA,EAAY7K,KAAK8K,MAAMR,EAAe7O,OAAO,KAAMoP,EAEzE,GAAIJ,EAAuB,EAAVI,KAAiBJ,EAAuB,EAAVI,EAAY,GAC3D,CACE,IAAME,EAAaN,EAAuB,EAAVI,GAAeP,EAAyB,EAAVO,GAAeP,EAAyB,EAAVO,EAAY,GAClGG,EAAWP,EAAuB,EAAVI,GAAeP,EAAyB,EAAVO,EAAY,GAAKP,EAAyB,EAAVO,GACtFI,EAAkBD,EAASpR,KAAK+B,SAAS,OAC3CuP,EAAoBD,EAAkB,MAAQ,OAC9CrC,EAAiB,GACjBqC,GAEFrC,EAAiBsC,GAAuBR,GAAY,EAAK,IAAMA,EAAS9N,WAAa,IACrF8N,GAAsB,IAItB9B,EAAiBsC,GAAuBP,GAAa,EAAK,IAAMA,EAAU/N,WAAa,IACvF+N,GAAwB,GAE1B,IAAItB,EAAU,GACdA,EAAQ2B,EAASpQ,GAAGgC,YAAcmN,EAAamB,GAC/C7B,EAAQ0B,EAAWnQ,GAAGgC,YAAcmN,EAAY,MAChDa,EAASlP,KAAK,CAACkN,EAAgBS,IAKnC,GAAMiB,EAAe7O,OAAS,IAAQ,IAAOgP,EAAcH,EAAe7O,OAAS,GACnF,CACE,IAAM0P,EAAYb,EAAeA,EAAe7O,OAAS,GACnDwP,EAAkBE,EAAUvR,KAAK+B,SAAS,OAC5CuP,EAAoBD,EAAkB,MAAQ,OAC9CrC,EAAiB,GACjBqC,GAEFrC,EAAiBsC,GAAuBR,GAAY,EAAK,IAAMA,EAAS9N,WAAa,IACrF8N,GAAsB,IAItB9B,EAAiBsC,GAAuBP,GAAa,EAAK,IAAMA,EAAU/N,WAAa,IACvF+N,GAAwB,GAE1B,IAAItB,EAAU,GACdA,EAAQ8B,EAAUvQ,GAAGgC,YAAcmN,EAAamB,GAChDN,EAASlP,KAAK,CAACkN,EAAgBS,IAEjC,OAAOuB,EA6DiBQ,CAAyBlB,EAAgBH,EAAc7L,KAC/DkM,OA5QlB,SAAuBF,EAAgBH,GAErC,IACMsB,EADc/C,EAAgC4B,GACnBK,QAAQ,SAAC/B,GAAD,OAAUA,EAAK5O,KAAK+B,SAAS,aACtE,GAA2B,IAAxB0P,EAAa5P,OAEd,MAAO,GAEJ,GAAG4P,EAAa5P,QAAU,EAC/B,CAKE,IAHA,IAAM6P,EAAY/K,MAAMC,KAAM6K,GAAc,SAAC7C,GAAD,OAAUA,EAAK5O,KAAK+B,SAAS,WACnE4P,EAAYhL,MAAMC,KAAM6K,GAAc,SAAC7C,GAAD,OAAUA,EAAK5O,KAAK+B,SAAS,WACnE6P,EAAYjL,MAAMC,KAAM6K,GAAc,SAAC7C,GAAD,OAAUA,EAAK5O,KAAK+B,SAAS,WAChEoE,EAAI,EAAGA,EAAIsL,EAAa5P,SAAUsE,EAIzC,GAAmB,IAFDuL,EAAUvL,GAAKwL,EAAUxL,GAAKyL,EAAUzL,GAIxD,MAAO,GAIX,IADA,IAAI0L,EAAgB,GACX1L,EAAI,EAAGA,EAAIsL,EAAa5P,SAAUsE,EAErCuL,EAAUvL,GAEZ0L,EAAeJ,EAAatL,GAAGnF,GAAGgC,YAAemN,EAAa,eAEvDwB,EAAUxL,GAEjB0L,EAAeJ,EAAatL,GAAGnF,GAAGgC,YAAemN,EAAa,eAEvDyB,EAAUzL,KAEjB0L,EAAeJ,EAAatL,GAAGnF,GAAGgC,YAAemN,EAAa,gBAGlE,MAAO,CAAE,CAAE,SAAU0B,IAKrB,MAAO,GAgOeC,CAAexB,EAAgBH,KACvCK,OAnLlB,SAAsBF,EAAgBH,GAOpC,OAAOpB,EALaL,EAAgC4B,GACpBK,QAAQ,SAAC/B,GAAD,OAAYA,EAAK5O,KAAK+B,SAAS,YAMrE,QACAoO,EAAa,gBACbA,EAAa,gBAwKS4B,CAAczB,EAAgBH,KACtCK,OAjMlB,SAAuBF,EAAgBH,GAKrC,OAAOpB,EAHaL,EAAgC4B,GAEnBK,QAAQ,SAAC/B,GAAD,OAAYA,EAAK5O,KAAK+B,SAAS,aAGtE,SACAoO,EAAa,iBACbA,EAAa,iBAwLS6B,CAAe1B,EAAgBH,IAMvD,IAXF,EAWQM,EAAwBd,EAAkBrL,GAXlD,cAaoBgM,GAbpB,IAaE,IAAI,EAAJ,qBACA,CAAC,IADS1B,EACV,QACE,GAAK6B,EAAsBG,IAAIhC,EAAK5N,IAApC,CAIA,IALF,EAKMiR,GAAiB,EALvB,cAMmB1B,GANnB,IAME,IAAI,EAAJ,qBACA,CAAC,IADU/O,EACX,QACMoN,EAAK5N,GAAGgC,aAAcxB,EAAG,KAE3ByQ,GAAiB,IAVvB,8BAaE,IAAsB,IAAnBA,EACH,CACE,IAAIxC,EAAU,GACdA,EAASb,EAAK5N,GAAGgC,YAAekN,EAAkCC,EAAcvB,EAAK5O,MACrFuQ,EAAOzO,KAAM,CAAC8M,EAAK5O,KAAMyP,OA/B/B,8BAmCE,OAAOc,EAGT,SAAS2B,EAAqBC,EAAiBxD,GAG7C,IADA,IAAIyD,EAAiBzL,MAAMwL,EAAgBtQ,QAClCwQ,EAAsB,EAAGA,EAAsBF,EAAgBtQ,SAAUwQ,EAGhF,IADA,IAAMC,EAAmBH,EAAgBE,GAAqBrR,GACrDuR,EAAwB,EAAGA,EAAwB5D,EAAY9M,SAAU0Q,EAClF,CACE,IAAMjS,EAASqO,EAAY4D,GACxBD,EAAiBtP,aAAc1C,EAAO,KAEvC8R,EAAeC,GAAuBE,GAI5C,OAAOH,ECxVT,SAASI,GAAoBC,EAAWC,GAoBtC,IAjBA,IAeMC,EAAoBF,EAAUjC,OAAQ,CAACkC,IAE7C,MAjBmB,CACjB,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GAOF,eACA,CADK,IACL,EADWxQ,EAAC,KAEN0Q,GAAe,EADrB,cAEkBD,GAFlB,IAEE,IAAI,EAAJ,qBACA,CACE,GADF,QACWzQ,IAAO,EAChB,CACE0Q,GAAe,EACf,QAPN,8BAUE,GAAGA,EAED,OAAO1Q,EAGX,MAAM,IAAIqD,MAAM,0BCnClB,SAASsN,GAAQnH,EAAGoH,GAGjB,GAAIpH,EAAI,GAAKoH,EAAI,EAChB,MAAM,IAAIvN,MAAM,cAKjB,KAAOa,KAAKmD,IAAImC,EAAGoH,GAAK1M,KAAKC,IAAIqF,EAAGoH,KAAO,GACpCpH,EAAIoH,EACLpH,GAAKoH,EAGLA,GAAKpH,EAKX,OAAOtF,KAAKC,IAAIqF,EAAGoH,G,IAkJPpD,G,WA5Ib,WAAYpH,EAAc5G,GAExB,GADD,oBAC4B,IAAxB4G,EAAazG,OAEd,MAAM,IAAI0D,MAAM,wCAElB+E,KAAKzB,IAAMP,EACXgC,KAAK5I,WAAaA,E,qDAKlB,OAAO4I,KAAKzB,IAAIhH,OAASyI,KAAK5I,a,8BAK9B,OAAiD,IAA1C4I,KAAKzB,IAAIpG,QAAQ,SAACR,EAAEC,GAAH,OAAWD,EAAIC,O,2CAGpBD,EAAEC,GAGrB,IADA,IAAI6Q,EAAQ,EACH5M,EAAI,EAAGA,EAAIlE,EAAEJ,SAAUsE,EAE3BlE,EAAEkE,IAAMjE,EAAEiE,IAEX4M,IAGJ,OAAOA,I,oCAGKC,GAEZ,GAAI1I,KAAK5I,aAAesR,EAAMtR,WAE5B,OAAO4I,KAAK2I,qBAAsB3I,KAAKzB,IAAKmK,EAAMnK,KAIlD,IAAMqK,EAAML,GAAQvI,KAAK5I,WAAYsR,EAAMtR,YACrCO,EAAIqI,KAAK6I,iBAAkBD,GAC3BhR,EAAI8Q,EAAMG,iBAAkBD,GAClC,OAAO5I,KAAK2I,qBAAsBhR,EAAE4G,IAAK3G,EAAE2G,O,gCAIrCmK,GAGR,GAAI1I,KAAK5I,aAAesR,EAAMtR,WAC9B,CAIE,IAFA,IAAMG,EAASuE,KAAKmD,IAAKe,KAAKzB,IAAIhH,OAAQmR,EAAMnK,IAAIhH,QAC9CuR,EAAM,IAAIzM,MAAM9E,GAAQ0G,KAAK,GAC3BhE,EAAQ,EAAGA,EAAQ6O,EAAIvR,SAAU0C,EAEvC6O,EAAI7O,IAAaA,EAAQ+F,KAAKzB,IAAIhH,OAAWyI,KAAKzB,IAAItE,GAAS,KAC9CA,EAAQyO,EAAMnK,IAAIhH,OAAWmR,EAAMnK,IAAItE,GAAS,GAEnE,OAAO,IAAImL,EAAO0D,EAAK9I,KAAK5I,YAI5B,IAAMwR,EAAML,GAAQvI,KAAK5I,WAAYsR,EAAMtR,YACrCO,EAAIqI,KAAK6I,iBAAkBD,GAC3BhR,EAAI8Q,EAAMG,iBAAkBD,GAClC,OAAOjR,EAAEoR,UAAUnR,K,6BA+BhBiR,GAIL,IAAMG,EAAehJ,KAAK5I,WAAa4I,KAAKzB,IAAIhH,OAC1C0R,EAASjJ,KAAKkJ,WACd3K,EAAM6G,EAAM+D,gBAAgBF,EAAQJ,EAAkBG,GAC5D,OAAIzK,EAIG,IAAI6G,EACT7G,EACAsK,GAJO,O,iCAUT,IADF,EACMI,EAAS,GADf,cAE2B5M,MAAM2D,KAAKzB,IAAIhH,QAAQ6D,QAFlD,IAEE,IAAI,EAAJ,qBACA,CAAC,IADUgO,EACX,QACoBpJ,KAAKzB,IAAI6K,IAGzBH,EAAOzR,KAAMwI,KAAK5I,WAAagS,IAPrC,8BAUE,OAAOH,K,uCAvDcA,EAAQ7R,EAAYgR,GAEzC,GAAIA,GAAQ,EAEV,MAAM,IAAInN,MAAM,kCAElB,GAAImN,EAAOhR,GAAegR,EAAOhR,IAAgB,EAE/C,MAAM,IAAI6D,MAAM,0DAElB,IATF,EASMnG,EAAI,IAAIuH,MAAM+L,EAAOhR,GAAY6G,KAAK,GAT5C,cAUkBgL,GAVlB,IAUE,IAAI,EAAJ,qBACA,CAAC,IADUzD,EACX,QACE,GAAKA,EAAIpO,IAAgB,EAEvB,MAAM,IAAI6D,MAAM,6BAA+BuK,EAAE9M,WAAa,kBAAoBtB,EAAWsB,YAE/F,GAAI8M,GAAK4C,EAEP,MAAM,IAAInN,MAAM,6BAA+BuK,EAAE9M,WAAa,+BAAiC0P,EAAK1P,YAGtG5D,EADmB0Q,EAAIpO,GACP,GArBpB,8BAuBE,OAAOtC,I,oCAkCYqT,EAAWC,GAC/B,IADqChR,EACtC,uDADmD,KAE3CiS,EAAe,OAAGjS,QAAH,IAAGA,IAAc8Q,GAAqBC,EAAWC,GACtE,OAAO,IAAIhD,EACTA,EAAM+D,gBAAgBhB,EAAWkB,EAAiBjB,GAClDiB,O,KCpJAC,GACJ,WACEvH,EACAwH,EACAlF,EACAwD,EACAC,EACA9N,GAED,oBACCgG,KAAK+B,MAAQA,EACb/B,KAAKuJ,WAAaA,EAClBvJ,KAAKqE,YAAcA,EACnBrE,KAAK6H,gBAAkBA,EACvB7H,KAAK8H,eAAiBA,EACtB9H,KAAKhG,SAAWA,GAkCpB,SAASwP,GAASC,EAAU1H,EAAOY,EAAU+G,GAE3C,OAAO,IAAIC,SAAQ,SAACC,GAEhB,IAAM5P,EAlCZ,SAAgC6P,GAI9B,IAHF,EAGM7P,EAAW,GAHjB,cAIsB6P,GAJtB,IAIE,IAAI,EAAJ,qBACA,CAGE,IAHD,IADQvS,EACT,QACMwS,EAAiB,GAErB,MAA8B3O,OAAOgD,QAAQ7G,EAAQmG,kBAArD,eACA,CAAC,IAAD,sBADY/G,EACZ,KADgBqT,EAChB,KACED,EAAepT,GAAM,IAAI0O,GAAO2E,EAAUxL,IAAKwL,EAAU3S,YAE3D,IAAI4S,EAAoB7O,OAAOI,OAAO,GAAIjE,GAC1C0S,EAAkBvM,iBAAmBqM,EACrC9P,EAASxC,KAAKwS,IAdlB,8BAgBE,OAAOhQ,EAiBciQ,CAAuBR,EAASzP,UAC3CqK,EAAeqF,EAAqC3D,EACxD0D,EAASpF,YACTF,EACAnK,GAHiCyP,EAASpF,YAKtCwD,EAAkB4B,EAAS5B,gBAAkB4B,EAAS5B,gBApBlE,SAA6BA,GAC7B,oBAEyBA,GAFzB,IAEE,IAAI,EAAJ,qBACA,QACa5C,OAAS,GAJxB,8BAME,OAAO4C,EAcCqC,CH2EV,SAA+BrC,EAAiB7N,GAE9C,IADF,EACQmQ,EAAS9E,EAAkBrL,GAC7BsL,EAAwB,GAF9B,cAGqBuC,GAHrB,IAGE,IAAI,EAAJ,qBACA,CAAC,IADUvD,EACX,QACM6F,EAAO7D,IAAIhC,EAAK5N,KAElB4O,EAAsB9N,KAAM8M,IAPlC,8BAUE,OAAOgB,EGtFsB8E,CAAsBX,EAASpF,YAAarK,IAC/D8N,EAAiBF,EAAqBC,EAAiBxD,GAC7DuF,EAAS,IAAIN,GACXvH,EACAY,EACA0B,EACAwD,EACAC,EACA9N,OAkBR,IAKeqQ,GALO,CACpBC,YAZF,WAEE,OAAOd,GACLe,EACA,OACA,gBACA,IAOFf,a,kBClGIgB,GAAS,SAAChW,GAAD,MAAU,CACvBwD,KAAM,CACJyS,WAAY,MACZC,WAAY,cACZC,SAAU,SACV,2BAA4B,CAC1BA,SAAU,WAIVC,GAAgB1H,YAAWsH,GAAXtH,CAAmBjC,KAEnC4J,G,kDAEJ,WAAYzV,GAAQ,IAAD,8BACjB,cAAMA,IACDiN,MAAQ,GAFI,E,qDAMT,IAAD,OACDyI,EAAS3P,OAAOuC,OAAOsC,KAAK5K,MAAM0V,QACxC,GAAqB,IAAlBA,EAAOvT,OAER,OAAO,cAAC,IAAMsD,SAAP,IAET,IAAMmD,EAAe/F,KAASwG,oBAC5BuB,KAAK5K,MAAMyI,WACXmC,KAAK5K,MAAM0V,OACX9K,KAAK5K,MAAM2F,OAAO+C,UAId9C,EAAoB8P,EAAO,GAAG1T,WACpC,GAAK4I,KAAK5K,MAAM2F,OAAOhD,eAAiBiI,KAAK5K,MAAM2F,OAAO1D,iBAAoB,GACrE2G,EAAazG,OAASyD,EAAoBgF,KAAK5K,MAAM2F,OAAOhD,eAEnE,MAAM,IAAIkD,MAAM,4EAGlB,IAAM8P,EAAe9S,KAAS+S,WAAWhN,EAAcgC,KAAK5K,MAAM2F,OAAOhD,eAAiBiD,EAAmB,GACvGiQ,EAAejL,KAAK5K,MAAM2F,OAAOhD,eAAiBiI,KAAK5K,MAAM2F,OAAO1D,eACpEsF,EAAgBqD,KAAK5K,MAAM2F,OAAO1D,eAAiB2D,EACnDkQ,EAAiBH,EAAa9T,KAClC,SAAAuF,GAAI,OAAIvE,KAAS+S,WAAYxO,EAAMG,MAE/BwO,EAAW,YAAOJ,EAAa3P,QAC/BgQ,EAAa,SAACvV,EAAK2G,EAAM6O,GAC7B,IAAMC,EAAK,YAAO9O,EAAKpB,QACvB,OACE,eAACwP,GAAD,WACE,cAACA,GAAD,CAAepU,QAAQ,YAAY+U,UAAU,OAA7C,SAA+E,EAAKnW,MAAM2F,OAAOwC,UAAxC,cAAgB1H,GAEvEyV,EAAMrU,KAAK,SAAAsF,GAAI,OAAI,eAAC,IAAM1B,SAAP,WACjB,cAAC+P,GAAD,CAAepU,QAAQ,YAAY+U,UAAU,OAA0D9U,UAAW,YAAa8F,EAAO8O,GAAW3S,WAAjJ,SAA8J8D,EAAKD,GAAMS,KAAK,KAArH,cAAgBT,EAAO8O,GAAW3S,YAC3F,cAACkS,GAAD,CAAepU,QAAQ,YAAY+U,UAAU,OAA7C,SAAgH,EAAKnW,MAAM2F,OAAOqC,cAAgBb,IAAS+O,EAAMA,EAAM/T,OAAO,GAAM,EAAKnC,MAAM2F,OAAOuC,SAAW,IAAxJ,qBAAuBf,EAAO8O,GAAW3S,cAF5D,kBAAmB6D,EAAO8O,GAAW3S,eAM/E,cAACkS,GAAD,CAAepU,QAAQ,YAAY+U,UAAU,OAA7C,SAA6E,EAAKnW,MAAM2F,OAAOwC,UAAtC,YAAc1H,KATrD,gBAAkBA,IAcpC2V,EAAavT,KAAS8G,mBAC1BiB,KAAK5K,MAAM2F,OAAOiB,eAClBgE,KAAK5K,MAAM2F,OAAO1D,eAClB2D,EACAc,KAAKC,IAAKiE,KAAK5K,MAAM2F,OAAOhD,eAAgBgT,EAAa,GAAGxT,OAASyD,IAEjEyQ,EAAaxT,KAAS+S,WAC1BQ,EACAxL,KAAK5K,MAAM2F,OAAO1D,eAAiB2D,GAErC,OACE,eAAC,IAAMH,SAAP,WACGmF,KAAK5K,MAAM2F,OAAO8D,gBAAkBuM,EAAW,OAAQK,EAAY,GAAK,GACxEN,EAAYlU,KAAI,SAAAyU,GAAS,OAAEN,EAAWM,EAAUhT,WAAYwS,EAAeQ,GAAYT,EAAeS,a,GAjE5FpR,IAAMmG,WAuEVyC,eAAWsH,GAAXtH,CAAmB2H,I,ICtDnBc,G,kDArBb,WAAYvW,GAAQ,IAAD,8BACjB,cAAMA,IACDiN,MAAQ,GAFI,E,qDAOjB,IAAMuJ,EAjBV,SAAsBC,EAAcC,GAEhC,IACMC,EAAcF,EAAeA,EAAarH,cAAgB,GAEhE,MAH2B,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAEzB/M,SAASsU,GAAeA,EAAcD,EAazDE,CAAahM,KAAK5K,MAAMyW,aAAc,MACpD,OACE,oCACE,cAACD,EAAD,UAAQ5L,KAAK5K,MAAMsP,iBACnB,cAAC,GAAD,CACE7G,WAAYmC,KAAK5K,MAAMyI,WACvBiN,OAAQ9K,KAAK5K,MAAM0V,OACnB/P,OAAQiF,KAAK5K,MAAM2F,gB,GAhBDT,IAAMmG,WCM5BwL,GAAU3R,IAAMC,MAAK,SAACnF,GAE1B,IAAM8W,EAAiB,YAAO9W,EAAMiP,YAAYjJ,QAChD,OACE,qBAAKzE,MAAO,CAAC,OAAU,QAAvB,SACIuV,EAAkBjV,KAChB,SAAC4Q,GAAD,OAAuB,cAAC,GAAD,CAErBnD,eAAgBtP,EAAMiP,YAAYwD,GAAiB,GACnDhK,WAAYzI,EAAMiP,YAAYwD,GAAiB,GAC/CiD,OAAQ1V,EAAM0V,OACd/P,OAAQ3F,EAAM2F,QAJT,QAAU8M,EAAgBnP,oBAYrCyT,G,kDAEJ,WAAY/W,GACX,IAAD,8BACE,cAAMA,IACDoL,IAAMlG,IAAM8E,YAFnB,E,0DAKcrE,EAAQqR,GAKpB,YAHkC1S,IAAhB0S,GAA6C,OAAhBA,EAC3CtQ,KAAK8K,MAAMwF,EAAcrR,EAAO1D,gBAChC,O,wCAIYgV,EAAU9P,EAAM+P,GAEhC,GAAG/P,IAAS8P,GAAYC,EACxB,CACE,GAAgB,OAAbD,EACH,CACE,IADF,EACQE,EAAevM,KAAKQ,IAAIJ,QAAQoM,uBAAuB,WAAaH,EAAS3T,YADrF,cAEkB6T,GAFlB,IAEE,IAAI,EAAJ,qBACA,SACIE,UAAUC,OAAO,eAJvB,+BAOA,GAAY,OAATnQ,EACH,CACE,IADF,EACQoQ,EAAW3M,KAAKQ,IAAIJ,QAAQoM,uBAAuB,WAAajQ,EAAK7D,YAD7E,cAEkBiU,GAFlB,IAEE,IAAI,EAAJ,qBACA,SACIF,UAAU9G,IAAI,eAJpB,mC,yCAUeiH,EAAWC,EAAWC,GAEvC,GAAGF,EAAUvI,cAAgBrE,KAAK5K,MAAMiP,aACnCuI,EAAU9B,SAAW9K,KAAK5K,MAAM0V,QAChC8B,EAAU7R,SAAWiF,KAAK5K,MAAM2F,QAChC6R,EAAUvX,UAAY2K,KAAK5K,MAAMC,QAUpC,OARA2K,KAAK+M,kBAIH/M,KAAKgN,cAAeJ,EAAU7R,OAAQ6R,EAAUR,aAChDpM,KAAKgN,cAAehN,KAAK5K,MAAM2F,OAAQiF,KAAK5K,MAAMgX,cAClD,IAEK,I,4CAIWa,EAAWC,GAI/B,OAAGD,EAAU5I,cAAgBrE,KAAK5K,MAAMiP,aACnC4I,EAAUnC,SAAW9K,KAAK5K,MAAM0V,QAChCmC,EAAUlS,SAAWiF,KAAK5K,MAAM2F,QAChCkS,EAAU5X,UAAY2K,KAAK5K,MAAMC,SAI7B4X,EAAUb,cAAgBpM,KAAK5K,MAAMgX,cAE5CpM,KAAK+M,kBACH/M,KAAKgN,cAAehN,KAAK5K,MAAM2F,OAAQiF,KAAK5K,MAAMgX,aAClDpM,KAAKgN,cAAeC,EAAUlS,OAAQkS,EAAUb,cAChD,IAEK,K,+BAUT,OACE,qBAAK3V,UAAWuJ,KAAK5K,MAAMC,QAAQ2C,KAAMwI,IAAKR,KAAKQ,IAAnD,SACE,cAACyL,GAAD,CACE5H,YAAarE,KAAK5K,MAAMiP,YACxByG,OAAQ9K,KAAK5K,MAAM0V,OACnB/P,OAAQiF,KAAK5K,MAAM2F,e,GA3FDT,IAAMmG,WAkGnByC,gBAlIG,SAAA1O,GAAK,MAAK,CAC1BwD,KAAM,CACJ,gBAAiBxD,EAAMG,QAAQ,GAC/B+V,WAAY,cACZ1T,UAAW,OACXyT,WAAW,MACX,OAAU,OACV,gBAAiB,CACf0C,MAAO3Y,EAAMqP,QAAQtC,UAAU6L,UA0HtBlK,CAAsBiJ,I,wEC/HrC,SAASkB,GAAiBjY,GAQxB,OACI,eAAC,IAAMyF,SAAP,WACE,gCACE,cAACyS,GAAA,EAAD,CACEC,aAAW,OACXpT,QATK,WAAS/E,EAAMoY,QAASpY,EAAMoY,UAOrC,SAIE,cAAC,KAAD,CAAe7W,MAAO,CAACwW,MAAO,eAEhC,cAACG,GAAA,EAAD,CACEC,aAAW,OACXpT,QAdK,WAAS/E,EAAMqY,QAASrY,EAAMqY,UAYrC,SAIE,cAAC,KAAD,CAAU9W,MAAO,CAACwW,MAAO,kBAI7B,eAACO,GAAA,EAAD,CAAMC,WAAS,EAAf,UACA,cAACD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,cAACH,GAAA,EAAD,CAAME,MAAI,EAACC,GAzBW,EAyBtB,SACA,cAACC,GAAA,EAAD,CACEC,aAAc,IACdhS,IAAK,GACLiS,KAAM,EACN/O,IAAK,IACLrJ,SA3BW,SAACG,EAAOkY,GAAa7Y,EAAM8Y,eAAgB9Y,EAAM8Y,cAAcD,IA4B1EE,kBAAkB,WAGpB,cAACT,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,UAORvT,WAAMC,KAAK8S,I,wUCVpB/Y,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,KAAM,CACJwL,QAAS,YAIP4K,GAAuBlL,YAAW,CACtClL,KAAM,CACJqW,WAAY,EACZC,YAAa,IAHYpL,CAK1BqL,MAEGC,GAAsBtL,YAAW,CACrClL,KAAM,CACJkM,QAAS,IAFehB,CAIzBoK,MAEGmB,GAA2BvL,aAAW,SAAC1O,GAAD,MAAY,CACtDwD,KAAM,CACJ0W,aAAc,OACd1X,UAAW,SACX2X,cAAena,EAAMG,QAAQ,OAJAuO,CAM7B0L,MAEEC,GAAkB3L,aAAW,SAAC1O,GAAD,MAAY,CAC7CwD,KAAM,CACJhB,UAAW,aAFSkM,CAIpB0L,MAEJ,SAASE,GAAa1Z,GACrB,IAAD,EAC8BkF,IAAMyU,UAAS,GAD7C,mBACS5E,EADT,KACiB6E,EADjB,OAEwC1U,IAAMyU,SAAS,KAFvD,mBAESE,EAFT,KAEsBC,EAFtB,OAG4B5U,IAAMyU,SAAS3Z,EAAM+Z,OAHjD,mBAGSA,EAHT,KAGgBC,EAHhB,KAIQC,EAAY/U,IAAMgV,OAAO,MACzB5O,EAAStL,EAAMsL,OAAStL,EAAMsL,OAAS,EAAI,GAC3C6O,EAAsB,CAC1B7O,OAAQ,EAAEA,EACVyC,SAAU,WACVqM,KAAM9O,GAEF+O,EAAetU,OAAOI,OAAO4O,EAAQ,GAAK,CAAC,WAAc,SAAUuF,YAAa,OAAQH,GACxFI,EAAaxF,EAAU,CAAC,WAAa,UAAY,GAoBjD7Q,EAASC,eA2Bf,OACE,cAAC,KAAD,CACEqW,KAAM,GACNC,aAAcvW,EAvBA,SAACwW,EAAO/Z,GACpBoU,GAAS6E,GAAU,IANL,SAACc,EAAO/Z,GACtBoU,GAAS6E,GAAU,GACpBK,GAAYA,EAAUjP,QAAQ2P,cAAcha,EAAMia,cA2BnDC,MAAO3W,EAAS,KApBG,SAACvC,GACtBiY,GAAU,IAgBV,SAIE,eAACR,GAAD,CAAqB0B,eAAa,EAACC,oBAAkB,EAAChW,QAXrC,WAEnBiV,GAAUD,GACV/Z,EAAMgb,aAAajB,IAQjB,UACE,qBAAKxY,MAAO8Y,EAAZ,SACE,cAAC3B,GAAA,EAAD,CACEC,aAAc,IACdsC,YAAY,WACZC,kBAAgB,kBAChB1a,SAvBW,SAACG,EAAMR,GAEtB+D,GAAU0V,GAAU,GAhCR,SAACjZ,EAAOR,GAExB2Z,EAAe3Z,GACXH,EAAMQ,UAERR,EAAMQ,SAAUL,GA4BlBgb,CAAUxa,EAAMR,IAqBRiL,IAAK6O,MAGT,qBAAK1Y,MAAOgZ,EAAZ,SACIR,EAAS,cAAC,KAAD,CAAexE,SAAS,UACjCsE,EAAc,GAAK,cAAC,KAAD,CAAgBtE,SAAS,UAC5CsE,EAAc,GAAK,cAAC,KAAD,CAAgBtE,SAAS,UACzB,cAAC,KAAD,CAAcA,SAAS,iB,IAOhD6F,G,kDAEJ,WAAYpb,GAAQ,IAAD,8BACjB,cAAMA,IACDiN,MAAQ,CACXoO,cAAgB,MAHD,E,qDAOT,IAAD,SAEDC,EAAS,SAAC3Z,GACd,EAAKgM,SAAS,CAAC0N,cAAgB,OAC5B,EAAKrb,MAAMub,UACZ,EAAKvb,MAAMub,YAITC,EAAU,SAAC7Z,GACiB,OAA7B,EAAKsL,MAAMoO,eAA8D,IAApC,EAAKpO,MAAMoO,cAAclZ,OAE5D,EAAKnC,MAAMQ,WACZ,EAAKR,MAAMQ,SAAS,EAAKyM,MAAMoO,eAC/B,EAAK1N,SAAS,CAAC0N,cAAe,QAMhCI,MACE,mCAAsC,EAAKxO,MAAMoO,cAAjD,+CAeN,OACE,eAAC5O,EAAA,EAAD,CAAQlI,KAAMqG,KAAK5K,MAAMuE,KAAME,QAAS6W,EAAQJ,kBAAgB,oBAAhE,UACE,cAACxO,EAAA,EAAD,CAAapL,GAAG,sBAChB,eAACsL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,oCAGA,cAAC6O,GAAA,EAAD,CACEC,WAAS,EACTrc,OAAO,QACPgC,GAAG,OACHsa,WAAS,EACTzb,MAAK,UAAEyK,KAAKqC,MAAMoO,qBAAb,QAA8BzQ,KAAK5K,MAAMG,MAC9CK,SAAU,SAACmB,GAAK,EAAKgM,SAAS,CAAC0N,cAAe1Z,EAAEf,OAAOT,SACvD0b,UAvBY,SAACla,GAEF,KAAdA,EAAEma,UAEHna,EAAEoa,iBACFP,WAqBA,eAACzO,EAAA,EAAD,WACE,cAAChC,EAAA,EAAD,CAAQhG,QAASuW,EAAQvD,MAAM,UAA/B,oBAGA,cAAChN,EAAA,EAAD,CAAQhG,QAASyW,EAASzD,MAAM,UAAhC,+B,GAlE4B7S,IAAMmG,WA2EtC2Q,G,kDAEJ,WAAYhc,GACX,IAAD,8BACE,cAAMA,IACDiN,MAAQ,CACXgP,YAAc,MAHlB,E,qDAQC,IAAD,SAEQX,EAAS,WACV,EAAKtb,MAAMub,UAEZ,EAAKvb,MAAMub,WAEb,EAAK5N,SAAS,CAACsO,YAAa,QAGxBT,EAAU,WACgB,OAA3B,EAAKvO,MAAMgP,YAEW,EAAKhP,MAAMgP,YAAYC,OAC3B/Z,OAAS,GAEvB,EAAKnC,MAAMQ,UAEZ,EAAKR,MAAMQ,SAAS,EAAKyM,MAAMgP,aAEjC,EAAKtO,SAAS,CAACsO,YAAa,QAK5BR,MACE,4CAA+C,EAAKxO,MAAMgP,YAA1D,0BAOJX,KAaJ,OACE,eAAC7O,EAAA,EAAD,CAAQlI,KAAMqG,KAAK5K,MAAMuE,KAAME,QAAS6W,EAAQJ,kBAAgB,oBAAhE,UACE,cAACxO,EAAA,EAAD,CAAapL,GAAG,sBAChB,eAACsL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,oCAGA,cAAC6O,GAAA,EAAD,CACEpc,OAAO,QACPgC,GAAG,OACHsa,WAAS,EACTzb,MAAK,UAAEyK,KAAKqC,MAAMgP,mBAAb,QAA4BrR,KAAK5K,MAAMG,MAC5CK,SAAU,SAACmB,GAAK,EAAKgM,SAAS,CAACsO,YAAata,EAAEf,OAAOT,SACrD0b,UAtBY,SAACla,GAEF,KAAdA,EAAEma,UAEHna,EAAEoa,iBACFP,MAkBIG,WAAS,OAGb,eAAC5O,EAAA,EAAD,WACE,cAAChC,EAAA,EAAD,CAAQhG,QAASuW,EAAQvD,MAAM,UAA/B,oBAGA,cAAChN,EAAA,EAAD,CAAQhG,QAASyW,EAASzD,MAAM,UAAhC,+B,GA9E2B7S,IAAMmG,WAuF3C,SAAS8Q,GAAgBnc,GAEvB,IAAMC,EAAUf,KADlB,EAiEwBgG,IAAMyU,UAAU,GAjExC,mBAiEOpV,EAjEP,KAiEa6X,EAjEb,KAmEQC,EAAa,SAACrQ,EAAEoH,GAElB,OACE,cAACoG,GAAA,EAAD,CACE8C,MAAM,SADR,SAIE,cAACtD,GAAD,CACE7V,QAAS,cAACoZ,GAAA,EAAD,CAAU1b,QAASb,EAAM0S,eAAe1G,KAAOoH,EAAG5S,SAAU,SAACmB,IAnE3D,SAACqK,EAAEoH,EAAGzS,GACzB,IAAM0P,EAAerQ,EAAMyS,gBAAgBzG,GAAG1K,GACxCkb,EAAqBxc,EAAMiP,YAAYwN,WAAW,SAAAhU,GAAU,OAAI4H,KAAgB5H,EAAW,MAC3FiU,EAAqBtJ,EAC3B,GAAIoJ,IAAuBE,EAA3B,CAIA,IAAMC,EAAgB3c,EAAMiP,YAAYuN,GACpCI,EAAwB,CAC1B,GACA,IAEF,GAAqB,MAAjBD,EACJ,CACEC,EAAsB,GAAKD,EAAc,GACzC,IAAI,IAAJ,MAAkB5W,OAAOC,KAAK2W,EAAc,IAA5C,eACA,CADK,IAAMlc,EAAG,KAERA,IAAQ4P,EAAa/M,aAEvBsZ,EAAsB,GAAGnc,GAAOkc,EAAc,GAAGlc,KAIvD,IAAIoc,EAAgB,CAClB7c,EAAMiP,YAAYyN,GAAoB,GACtC3W,OAAOI,OAAO,GAAInG,EAAMiP,YAAYyN,GAAoB,KAIxDG,EAAc,GAAGxM,EAAa/M,YAFZ,MAAjBqZ,EAE2CA,EAAc,GAAGtM,GAIjB,IAK9C,IAFA,IAAIyM,EAAsB,GAElBrK,EAAkB,EAAGA,EAAkBzS,EAAMiP,YAAY9M,SAAUsQ,EAErEA,IAAoB+J,EAEtBM,EAAoB1a,KAAMwa,GAEnBnK,IAAoBiK,EAE3BI,EAAoB1a,KAAMya,GAI1BC,EAAoB1a,KAAMpC,EAAMiP,YAAYwD,IAGhDzS,EAAMQ,SAASsc,IAaqEC,CAAa/Q,EAAEoH,IAAQ9S,KAAM0L,EAAI,IAAMoH,EAAE9P,gBAHlH,wBAA0B8P,EAAE9P,WAAa,IAAM0I,EAAE1I,aASxD0Z,EAAoB,SAAC5J,GAEzB,OACE,eAAC6J,GAAA,EAAD,WACI,eAACzD,GAAA,EAAD,CAAWrD,UAAU,KAAK+G,MAAM,MAAhC,UACE,cAACrR,EAAA,EAAD,UAAa7L,EAAMiP,YAAYmE,GAAG,KAClC,cAACgG,GAAD,CAAqBrU,QAAS,SAACpD,IApFzB,SAACyR,GAAUpT,EAAMmd,WAAand,EAAMmd,UAAU/J,GAoFhBgK,CAAQhK,IAA5C,SAAkD,cAAC,KAAD,CAAUmC,SAAS,YACrE,cAAC6D,GAAD,CAAqBrU,QAAS,SAACpD,IAlFvB,SAACyR,GAAUpT,EAAMqd,aAAerd,EAAMqd,YAAYjK,GAkFtBkK,CAAUlK,IAA9C,SAAoD,cAAC,KAAD,CAAWmC,SAAS,cAH/B,uBAAyBnC,EAAE9P,WAAa,SAKlF,YAAI2D,MAAMjH,EAAM0S,eAAevQ,QAAQ6D,QAAQnE,KAAI,SAAAmK,GAAC,OAAEqQ,EAAWrQ,EAAEoH,QANzD,uBAAyBA,EAAE9P,aAwB9C,OACE,eAACia,GAAA,EAAD,CAAOlc,UAAWpB,EAAQud,MAAOrF,aAAW,eAA5C,UACE,eAACsF,GAAA,EAAD,WACE,eAACR,GAAA,EAAD,WACE,cAAC5D,GAAD,0BAA+B,kCAC9B,YAAIpS,MAAMjH,EAAMyS,gBAAgBtQ,QAAQ6D,QAAQnE,KAAI,SAAAmK,GAAC,OAClD,cAACqN,GAAD,UACE,cAACxN,EAAA,EAAD,UAAa7L,EAAMyS,gBAAgBzG,GAAG1L,QADT,mCAAqC0L,EAAE1I,iBAH7D,8BAOf,eAAC2Z,GAAA,EAAD,WACE,cAACxD,GAAD,UACE,cAACvB,GAAA,EAAD,CAAYC,aAAW,0BAA0BnF,KAAK,QAAQjO,QAAS,kBAAMqX,GAAS7X,IAAtF,SACGA,EAAO,cAAC,KAAD,IAA0B,cAAC,KAAD,OAFhB,kCAKrB,YAAI0C,MAAMjH,EAAMyS,gBAAgBtQ,QAAQ6D,QAAQnE,KAAI,SAAAmK,GAAC,OAClD,cAACyN,GAAD,UACE,eAACnB,GAAA,EAAD,CAAMC,WAAS,EAAf,UACA,cAACD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACA,cAACW,GAAD,CAAqBrU,QAAS,SAACpD,IA5H1B,SAACqK,GAAUhM,EAAM0d,cAAgB1d,EAAM0d,aAAa1R,GA4HrB2R,CAAW3R,IAA/C,SACE,cAAC,KAAD,CAAUuJ,SAAS,cAGrB,cAAC+C,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACiB,GAAD,CACEK,MAAO/Z,EAAMyS,gBAAgBzG,GAAG+N,MAChCvZ,SAAU,SAACL,GAASH,EAAM4d,cAAe,CAACnV,WAAYuD,EAAG6D,OAAQ1P,EAAQ,OACzE6a,YAAa,SAACjB,GAAS/Z,EAAM4d,cAAe,CAACnV,WAAYuD,EAAG+N,MAAOA,aAXnD,qCAAuC/N,EAAE1I,iBAPtD,mCAyBjB,eAACua,GAAA,EAAD,WACGtZ,GAAQ,YAAI0C,MAAMjH,EAAMiP,YAAY9M,QAAQ6D,QAAQnE,KAAI,SAAAuR,GAAC,OAAE4J,EAAkB5J,MAC7E7O,GA/CH,cAAC0Y,GAAA,EAAD,UACE,cAACzD,GAAA,EAAD,CAAWrD,UAAU,KAAK+G,MAAM,MAAhC,SACE,cAAChF,GAAA,EAAD,CAAYnT,QAAS,SAACpD,GA/FL3B,EAAM8d,UAAY9d,EAAM8d,YA+FF3F,aAAW,MAAlD,SACE,cAAC,KAAD,OAFuC,kCAD9B,kCAqDrB,SAAS4F,GAAiB/d,GACxB,IA6BiBoT,EA7BXhU,EAAQ4e,eADiB,EAEW9Y,IAAMyU,SAAS,MAF1B,mBAExBsE,EAFwB,KAETC,EAFS,OAGqBhZ,IAAMyU,SAAS,MAHpC,mBAGxBwE,EAHwB,KAGJC,EAHI,KAiBzBC,EAAmB,SAACC,GAExB,GAAsB,OAAnBA,EACH,CACE,IAAMjO,EAAerQ,EAAMyS,gBAAgBwL,GAAe3c,GACpDmR,EAAkBzS,EAAMiP,YAAYwN,WAAW,SAAAhU,GAAU,OAAI4H,KAAgB5H,EAAW,MAC1FqU,EAAsB7V,MAAMC,KAAKlH,EAAMiP,aAC3C6N,EAAoBrK,GAAiB,GAAGpC,GAAgBiO,EACxDte,EAAMQ,SAASsc,GAEjBoB,EAAkB,OA+BpB,OACE,sBAAK3c,MAAO,CAAC,cAAkBnC,EAAMG,QAAQ,IAA7C,UACE,cAAC,GAAD,CACEgF,KAA6B,OAAvB4Z,EACN5C,SAAU,WAAK6C,EAAsB,OACrC5d,SAAU,SAACd,IA7BQ,SAAC4P,GAGxB,GAAI6O,IAAuBne,EAAMiP,YAAY9M,OAC7C,CACE,IAAMoc,EAAkB,CAAEjP,EAAgB,IACtCwN,EAAsB7V,MAAMC,KAAMlH,EAAMiP,aAC5C6N,EAAoB1a,KAAKmc,GACzBve,EAAMQ,SAASsc,OAGjB,CACE,IAAIA,EAAsB7V,MAAMC,KAAMlH,EAAMiP,aAC5C6N,EAAoBqB,GAAoB,GAAK7O,EAC7CtP,EAAMQ,SAASsc,GAEjBsB,EAAsB,MAaFI,CAAiB9e,IACjCS,MAA8B,OAAvBge,GAlCI/K,EAkCkC+K,EAjC1C/K,EAAIpT,EAAMiP,YAAY9M,OAASnC,EAAMiP,YAAYmE,GAAG,GAAK,IAiCO,KAErE,cAAC,GAAD,CACE7O,KAAwB,OAAlB0Z,EACN1C,SAAU,WAAK8C,EAAiB,OAChC7d,SAAU,SAACd,GAAK2e,EAAiB3e,IACjCS,MAAyB,OAAlB8d,EA3DK,SAACjS,GACjB,IAAMqE,EAAerQ,EAAMyS,gBAAgBwL,GAAe3c,GACpDmR,EAAkBzS,EAAMiP,YAAYwN,WAAW,SAAAhU,GAAU,OAAI4H,KAAgB5H,EAAW,MAC9F,OAAOzI,EAAMiP,YAAYwD,GAAiB,GAAGpC,GAwDToO,GAA2B,KAE7D,cAACC,GAAA,EAAD,CAAgBvI,UAAWvK,IAAOrK,MAnBf,CACrB,OAAU,qCACV,QAAW,OACX,aAAgB,OAgBd,SACE,cAAC4a,GAAD,CACE1J,gBAAiBzS,EAAMyS,gBACvBC,eAAgB1S,EAAM0S,eACtBzD,YAAajP,EAAMiP,YACnByO,aAAc,SAAC1R,GAAKkS,EAAiBlS,IACrCmR,UAAW,SAAC/J,GAAKgL,EAAsBhL,IACvC0K,SAAU,WAAKM,EAAsBpe,EAAMiP,YAAY9M,SACvDkb,YAAa,SAACjK,IA3EG,SAACA,GAExB,IAAI0J,EAAsB9c,EAAMiP,YAAYnP,MAAM,EAAEsT,GAAGtC,OAAO9Q,EAAMiP,YAAYnP,MAAMsT,EAAE,IACxFpT,EAAMQ,SAASsc,GAwEU6B,CAAiBvL,IACpCwK,cAAe5d,EAAM4d,cACrBpd,SAAUR,EAAMQ,gBAOX0E,WAAMC,KAAM4Y,I,2DCnYZa,G,gHAxKX,OAAO,IAAKC,OAAOC,cAAgBD,OAAOE,oBAAsBhZ,U,6CAIhE0M,EACAiD,GAIE,IADA,IAAIsJ,EAAgB,GADxB,uCAEe1d,EAFf,KAEkBsI,EAFlB,KAKwB6I,EAAgBxB,QAAO,SAAA/B,GAAI,OAAIA,EAAK5N,GAAGgC,aAAehC,KAE7Da,OAAS,IACdyH,EAAE0G,UAGN0O,EAAgBtY,KAAKC,IAAKqY,EAAepV,EAAE5H,cAT/C,MAAoB+D,OAAOgD,QAAQ2M,GAAnC,eACC,IAWD,OAAOsJ,I,2CAITvM,EACAiD,GAIE,IADA,IAAInN,EAAc,GADtB,uCAEejH,EAFf,KAEkBsI,EAFlB,KAKwB6I,EAAgBxB,QAAO,SAAA/B,GAAI,OAAIA,EAAK5N,GAAGgC,aAAehC,KAE7Da,OAAS,IACdyH,EAAE0G,UAGN/H,EAAc7B,KAAKmD,IAAKtB,EAAaqB,EAAEzH,YAT3C,MAAoB4D,OAAOgD,QAAQ2M,GAAnC,eACC,IAWD,OAAOnN,I,oCAIT0W,GAIA,IADA,IAAIC,EAAY,EACPC,EAAU,EAAGA,EAAUF,EAASG,iBAAkBD,IAEzD,IADA,IAAIE,EAAkBJ,EAASK,eAAeH,GACrCI,EAAS,EAAGA,EAASF,EAAgBld,SAAUod,EAEtDL,EAAYxY,KAAKmD,IAAKnD,KAAK8Y,IAAIH,EAAgBE,IAAUL,GAG7D,OAAOA,I,2CAIPD,GAGA,IAAMC,EAAYN,EAAMa,cAAeR,GACvC,GAAIC,EAAY,EAEd,IAAK,IAAIC,EAAU,EAAGA,EAAUF,EAASG,iBAAkBD,IAEzD,IADA,IAAIE,EAAkBJ,EAASK,eAAeH,GACrCI,EAAS,EAAGA,EAASF,EAAgBld,SAAUod,EAEtDF,EAAgBE,GAAUF,EAAgBE,GAAUL,EAI1D,OAAOD,I,wCAIPS,EACAhK,EACAjD,EACAkN,EACA9G,GAqBA,IAlBA,IAAMtQ,EAAcqW,EAAMgB,qBAAsBnN,EAAiBiD,GAY3DmK,EAHa,OAEGtX,GARH,GAAOsQ,EAAS,IACA,KAQqB,IAClDiH,EAAepZ,KAAK8K,MAAMqO,GAC1BE,EAAqBrZ,KAAK8K,MAAOsO,EAAevX,GAChD0W,EAAWS,EAAQM,aALR,EAK+BF,EAN7B,OASVX,EAAU,EAAGA,EAAUF,EAASG,iBAAkBD,IAEzD,IADA,IAAIE,EAAkBJ,EAASK,eAAeH,GADsB,uCAEzD7d,EAFyD,KAEtDsI,EAFsD,KAK5DqW,EAAYxN,EAAgBxB,QAAO,SAAA/B,GAAI,OAAIA,EAAK5N,GAAGgC,aAAehC,KACxE,GACE2e,EAAS9d,OAAS,GACf8d,EAAS,GAAG3e,MAAMqe,IACjB/V,EAAE0G,QAER,CACE,IADF,EACQ4P,EAAcP,EAAOM,EAAS,GAAG3e,IAEjC6e,EAAgD,IAAjCD,EAAYd,iBAAyBc,EAAYZ,eAAeH,GAAWe,EAAYZ,eAAe,GACrHc,EAAcxW,EAAEkK,WAJxB,cAK0BsM,GAL1B,IAKE,IAAI,EAAJ,qBAGE,IAFD,IACOC,EADR,QACkCN,EACvBR,EAAS,EAAGA,EAASW,EAAY/d,SAAUod,EAGlDF,EAAgBgB,EAAcd,GAAUF,EAAgBgB,EAAcd,GAAUY,EAAaZ,GAXnG,iCATF,MAAoBxZ,OAAOgD,QAAQ2M,GAAnC,eACC,IA0BH,OAAOkJ,EAAM0B,qBAAsBrB,K,wCAGZS,EAASa,EAAQ1H,GAExC,IAAI2H,EAASd,EAAQe,qBAWrB,OATAD,EAAOD,OAASA,EAChBC,EAAOE,MAAK,EACE,OAAV7H,IAEF2H,EAAOG,aAAaxgB,MAAQ0Y,EAAQ,KAItC2H,EAAOI,QAAQlB,EAAQmB,aAChBL,I,+CAEuBd,EAASa,EAAQ1H,GAE/C,IAAI2H,EAASd,EAAQe,qBAWrB,OATAD,EAAOD,OAASA,EAChBC,EAAOE,MAAK,EACE,OAAV7H,IAEF2H,EAAOG,aAAaxgB,MAAQ0Y,EAAQ,KAItC2H,EAAOI,QAAQlB,EAAQmB,aAChBL,M,cCvKPM,GAAc,IAEZC,GAAgB,SAAC5gB,GACrB2gB,GAAc3gB,GAIV6gB,GAAW,CACf,iBACA,aACA,sBACA,YACA,qBAGIC,GAAyB,SAAC9gB,GAI9B,OAAOuG,KAAKwa,IAAI/gB,EAAO,MAoYVghB,G,WA1Rb,WACE1O,EACA7N,EACAiU,EACAuI,EACAC,EACAC,GAIA,GAFD,oBAEID,GAAeE,KAAaF,cAAgBA,EAC/C,CACE,IAAI3B,EAAU,IAAI6B,KAAa,CAACF,YAAaA,IAC7CE,KAAgB7B,GAQhBqB,GAHiB,aAAhBM,EAGa,IAIA,KAKhBzW,KAAK4W,QAAU,GACf5W,KAAK6W,eAAiB,KACtB7W,KAAKkF,KAAO,IAAIyR,KAChB3W,KAAKkF,KAAK4R,gBACV9W,KAAK+W,oBAAsBP,EAC3BG,OAAoBK,IAAIzhB,MAAQ0Y,EAChC0I,OAAoBb,MAAO,EAE3B9V,KAAKiX,YAAc,EACnBjX,KAAKkX,oBAAsB,EAC3BlX,KAAKvF,eAAiB,GACtB,IAjCF,EAiCM0c,EAAW,GAjCjB,cAkCgBnd,GAlChB,IAkCE,IAAI,EAAJ,qBACA,CAAC,IADQwL,EACT,QACExF,KAAKvF,eAAe+K,EAAE9P,MAAQ,CAC5B0B,WAAY4c,GAAMoD,uBAAuBvP,EAAiBrC,EAAE/H,kBAC5DlG,OAASyc,GAAMgB,qBAAqBnN,EAAiBrC,EAAE/H,kBACvD/H,KAAM8P,EAAE9P,KACRoV,OAAQtF,EAAE/H,iBACVnG,QAASkO,GAEXxF,KAAKqX,gBAAgBxP,EAAiBrC,EAAE/H,iBAAkB0Z,IA3C9D,8BAgDE,GAHAnX,KAAKsX,mBAAqB,KAC1BtX,KAAK6H,gBAAkBA,EAEpBsP,EAAS5f,OAAS,EACrB,CAKE,IAJA,IAAMggB,EAnFe,SAACJ,GAE1B,IADF,EACMI,EAAiB,GADvB,cAEgCJ,GAFhC,IAEE,IAAI,EAAJ,qBACA,CAAC,IAAD,2BADYK,EACZ,KADqB9hB,EACrB,KACM+hB,GAAU,EADhB,cAE0CF,GAF1C,IAEE,IAAI,EAAJ,qBACA,CAAC,IAAD,yBADYG,EACZ,KAD0BC,EAC1B,KACE,GAAIH,IAAYE,GAAgBhiB,IAASiiB,EACzC,CACEF,GAAU,EACV,QAPN,8BAUMA,GAEFF,EAAe/f,KAAM,CAACggB,EAAS9hB,KAfrC,8BAmBE,OADA6hB,EAAe7f,OACR6f,EA+DoBK,CAAmBT,GACpCU,EAASN,EAAehgB,OAAS,EACjCzC,EAAI+iB,EAAS,IAAM,GACrBC,EAAU,wBAA0BhjB,EAAI,kBAAoBA,EAAI,MAAQ+iB,EAAS,IAAM,IAClFE,EAAe,EAAGA,EAAeR,EAAehgB,SAAUwgB,EACnE,CAAC,IAAD,cAC0BR,EAAeQ,GADzC,GACSP,EADT,KAEEM,GAFF,KAGkB,KAAZN,IAAkBM,GAAW,KAAON,EAAU,KAC/CO,IAAiBR,EAAehgB,OAAS,EAAIugB,GAAW,KACrDA,IAAYD,EAAS,IAAM,IAAM,IAEzCC,GAAW,oCAC0B1B,GAASpZ,KAAM,MAAS,IAE1D0Z,GAEDA,EAAYoB,I,uDAOhB9X,KAAKgY,OAILrB,OAAoBjG,W,qCAKpB,OAAO1Q,KAAKiX,cAAgBjX,KAAKkX,sB,sCAGnBrP,EAAiBiD,EAAQqM,GACxC,IAAD,OACEnX,KAAKiX,YAAc,EACnB,IAFF,qBAEavgB,EAFb,uBAIU2e,EAAWxN,EAAgBxB,QAAO,SAAA/B,GAAI,OAAIA,EAAK5N,GAAGgC,aAAehC,KACvE,GAAI2e,EAAS9d,OAAS,EACtB,CACE,IAAM0gB,EAAqB5C,EAAS,GAC9B6C,EAAgB7B,GAAwBva,KAAKC,IAAKD,KAAKmD,IAAK,EAAMgZ,EAAmBhT,QAAU,IACrG,GAAIgT,EAAmBvhB,MAAM,EAAKkgB,QAEhC,iBAEF,GACE,YAAaqB,GACb,aAAcA,GACd7B,GAAS3e,SAASwgB,EAAmBT,SACvC,CACE,IAAM7U,EAAWsV,EAAmBtV,SAAS3N,QAAQ,QAAS,QAC1DmjB,EAAS,IAAIxB,KACf1d,cAAmCgf,EAAmBT,QAAU,IAAM7U,GACtE,WAAQ,EAAKsU,iBAEfkB,EAAOC,KAAOH,EAAmB9I,MACjCgJ,EAAOziB,KAAOuiB,EAAmBviB,KACjC,IAAMwP,EAAO,IAAIyR,KAAUuB,EAAe,eAC1CC,EAAOnC,QAAQ9Q,GACfA,EAAK8Q,QAAQ,EAAK9Q,MAClB,EAAK0R,QAAQqB,EAAmBvhB,IAAM,CAAEyhB,OAASA,EAAQjT,KAAOA,GAChE,EAAKgS,2BAEF,GAAI,YAAae,EACtB,CACE,IAAMI,EAvO0B,SAACC,EAAa5T,GAEtD,IAAMhP,EAAOgP,EAAeF,cAE5B,OAAG9O,EAAK+B,SAAS,QAEN,yCAEH/B,EAAK+B,SAAS,SAEX,iDAEH/B,EAAK+B,SAAS,OAEX,oCAEH/B,EAAK+B,SAAS,QAEX,iCAEH/B,EAAK+B,SAAS,SAEb,2BAED/B,EAAK+B,SAAS,WAEb,gCAKA,KAwMmB8gB,CAAmCN,EAAmBT,QAASS,EAAmBviB,MACtG,GAAmB,OAAhB2iB,EACH,CACE,IAAIF,EAAS,IAAIxB,KACf1d,cAAmCof,GACnC,WAAQ,EAAKpB,iBAEfkB,EAAOC,KAAOH,EAAmB9I,MACjCgJ,EAAOziB,KAAOuiB,EAAmBviB,KACjC,IAAMwP,EAAO,IAAIyR,KAAUuB,EAAe,eAC1CC,EAAOnC,QAAQ9Q,GACfA,EAAK8Q,QAAQ,EAAK9Q,MAClB,EAAK0R,QAAQqB,EAAmBvhB,IAAM,CAAEyhB,OAASA,EAAQjT,KAAOA,GAChE,EAAKgS,2BAILC,EAAS3f,KAAM,CAACygB,EAAmBT,QAASS,EAAmBviB,YAK/DyhB,EAAS3f,KAAM,CAAC,GAAIygB,EAAmBviB,SArD/C,MAAmByF,OAAOgD,QAAQ2M,GAAlC,eACA,M,+CA0DuBjD,EAAiBvQ,GAEtC,IAAM0D,EAAoBgF,KAAKvF,eAAenD,EAAQ5B,MAAM0B,WACtDohB,EAAgBxY,KAAKvF,eAAenD,EAAQ5B,MAAM6B,OAClDkhB,EApOmB,SAACnhB,EAASohB,GAEvC,IAAIC,EAAeD,EAAaC,eAsChC,OArCyB,SAAC/I,EAAMgJ,GAG9B,GAAID,IAGFA,EAAeD,EAAaC,gBAH9B,CAQA,IAFA,IACM1e,EAAQ2e,GADWthB,EAAQC,OAASD,EAAQF,YAElD,MAAoB+D,OAAOgD,QAAQ7G,EAAQwT,QAA3C,eACA,CAAC,IAAD,sBADWpU,EACX,KACI,GADJ,KACU6H,IAAItE,GACV,CACE,IAAM4e,EAAaH,EAAa9B,QAAQlgB,QACrBgD,IAAfmf,IAEFA,EAAWV,OAAOH,KAAKpI,EAAOsG,IAC9B2C,EAAWV,OAAOrI,MAAMF,EAAOsG,MAIpCwC,EAAa3B,qBAEdJ,OAAemC,UACb,WACE,GAAiC,YAA9BnC,OAAoBtU,MACvB,CACE,IAAM0W,EAAgB9e,EAAQ3C,EAAQF,WAAcE,EAAQC,OAC5DmhB,EAAa3B,oBAAoBgC,MAGrCnJ,EAAOsG,MAgMQ8C,CACfhZ,KAAKvF,eAAenD,EAAQ5B,MAC5BsK,MAEEiZ,EAAM,IAAItC,KACZ8B,EADQ,YAEJpc,MAAMmc,EAAgBxd,GAAmBI,QAC7Cub,KAAU,OAAU3b,EAAoB,KAM1C,OAFAie,EAAIC,MAAMd,MAAO,EACjBa,EAAInJ,MAAM,GACHmJ,I,sCAGKpR,EAAiB7N,GAE/B,IADF,EACMmf,EAAY,GADlB,cAEgBnf,GAFhB,IAEE,IAAI,EAAJ,qBACA,CAAC,IADQwL,EACT,QACE2T,EAAU3T,EAAE9P,MAAQsK,KAAKoZ,yBAAyBvR,EAAiBrC,IAJvE,8BAME,OAAO2T,I,uCAGSE,GACjB,IAAD,OACQC,EAA6C,OAA5BtZ,KAAKsX,mBAA8BtX,KAAKsX,mBAAqB,KAC9E/f,EAASyI,KAAKvF,eAAe4e,GAAa9hB,OAC1CgiB,EAA+B,OAAnBD,EAA0BtZ,KAAKvF,eAAe6e,GAAkB,KAS5EE,EAAiB7C,OAAoB8C,SAAY9C,OAAoB+C,UAAU/C,OAAoBxT,UAAY+S,IAE/GyD,EAAqC,OAAnBL,GACS,YAA9B3C,OAAoBtU,OAClBmX,EAAiB,GAAKA,EAAiB7C,OAAoB+C,UAAU/C,KAAU,OAG9EiD,EAAe5Z,KAAKoZ,yBAAyBpZ,KAAK6H,gBAAiB7H,KAAKvF,eAAe4e,GAAa/hB,SAEpGuiB,EAAiB,SAACjK,GACA,OAAnB0J,IAGD,EAAKQ,SAASZ,MAAMd,MAAO,GAEP,OAAnBkB,GAA2BC,IAAchiB,GAG1Cof,OAAoBoD,cAAc,EAAGpD,KAAU,OAASpf,EAAS,KAEnE,EAAKuiB,SAAWF,EAChB,EAAKE,SAASZ,MAAMd,MAAO,EAC3B,EAAKd,mBAAqB+B,GAGxBM,EACFhD,OAAoBqD,aAClBH,EACAlD,KAAU,MAKZkD,M,6BAQFlD,OAAasD,MAAK,WAAKtD,OAAoB7G,a,6BAI5C,IAAD,OAKoC,YAA9B6G,OAAoBtU,QAEtBsU,OAAoBqB,OAChBhY,KAAK+W,qBAEPJ,OAAemC,UACb,WACE,EAAK/B,oBAAqB,QAE5BJ,OAAoBuD,U,4CAMNzU,EAAc0J,GAElCnP,KAAK4W,QAAQnR,GAAc0S,OAAOC,KAAOjJ,I,6CAGpB1J,EAAcR,GAEnCjF,KAAK4W,QAAQnR,GAAcP,KAAKiV,IAAK,CAACjV,KAAOmR,GAAuBpR,O,+BAG7DgJ,GAEP0I,OAAoBK,IAAIzhB,MAAQ0Y,M,yDC1YpC,SAASmM,GAAchlB,GAErB,OAAO,cAACyM,EAAA,EAAD,CACLlI,KAAMvE,EAAMuE,KACZE,QAASzE,EAAMyE,QACfyW,kBAAgB,iBAChB+J,mBAAiB,iBAJZ,SAML,eAACrY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,wCAGA,eAACA,EAAA,EAAD,WACC7M,EAAMklB,IACP,cAAChN,GAAA,EAAD,CAAYnT,QAAS,SAACpD,GAAMwjB,KAAKnlB,EAAMklB,MAAvC,SACE,cAAC,KAAD,SAGF,cAACnY,EAAA,EAAD,UACE,cAAChC,EAAA,EAAD,CAAQhG,QAAS/E,EAAMyE,QAAvB,0BAcOS,WAAMC,KAAK6f,I,oBCtBpBI,GAAwB,SAACxgB,GAC7B,OAAOqC,MAAMC,KACXtC,GACA,SAACwL,GAAD,OAAOvN,KAASwiB,wBAAyBjV,EAAE/H,sBAIzCid,GAAuBC,cAAY,SAACC,EAAgBC,GACxD,IAAIC,EAAmB3f,OAAOI,OAAO,GAAIqf,GAKzC,OAJGC,IAEDC,EAAmB3f,OAAOI,OAAOuf,EAAkBD,IAE9CC,KAmRMC,G,4MA9Qb1Y,MAAQ,CACN2Y,gBAAiB,EACjBH,gBAAiB,EAAKzlB,MAAM6lB,SAAWT,GAAsB,EAAKplB,MAAM6lB,SAASjhB,UAAY,KAC7FkhB,eAAgB/f,OAAOI,OAAO,GAAI1C,MAClCoiB,SAAU9f,OAAOI,OAAO,GAAG,EAAKnG,MAAM6lB,UACtCE,cAAc,EACdC,cAAc,EACdC,mBAAmB,EACnBjP,YAAa,KACbkP,WAAY,M,EAyDdC,kBAAoB,SAAClX,GAEnB,IAAI4W,EAAW9f,OAAOI,OAAO,GAAI,EAAK8G,MAAM4Y,UAC5CA,EAAS5W,YAAcA,EACvB4W,EAASnT,eAAiBF,EAAqB,EAAKvF,MAAM4Y,SAASpT,gBAAiBxD,GACpF,EAAKtB,SAAU,CACbkY,SAAUA,K,EAIdO,gBAAkB,SAACzlB,GAEjB,GAAG,WAAYA,EACf,CACE,IAAM0P,EAAe,EAAKpD,MAAM4Y,SAASpT,gBAAiB9R,EAAM8H,YAAanH,GAC1E,EAAK+kB,OAAQ,EAAKA,MAAMC,uBAAwBjW,EAAc1P,EAAMkP,aAEpE,GAAG,UAAWlP,EACnB,CACE,IAAM0P,EAAe,EAAKpD,MAAM4Y,SAASpT,gBAAiB9R,EAAM8H,YAAanH,GAC1E,EAAK+kB,OAAQ,EAAKA,MAAME,sBAAuBlW,EAAc1P,EAAMoZ,S,EAI1EyM,qBAAuB,SAACC,GAGtB,GAAGA,EAAOlmB,MACV,CAcE,EAAKoN,UAbe,SAACV,GAWnB,MAAO,CAACwY,gBAViBxY,EAAMwY,gBAAgB5jB,KAAK,SAACH,EAAUmD,GAC7D,OAAGA,IAAUoI,EAAM2Y,gBAAyBlkB,EAEnCqE,OAAOI,OACZ,GACA8G,EAAMwY,gBAAgBxY,EAAM2Y,iBAFvB7f,OAAA,KAAAA,CAAA,GAGH0gB,EAAOhmB,IAAMgmB,EAAOtmB,mBAShC,CACE,IAAMumB,EAAkB3gB,OAAOI,OAC7B,GACA,EAAK8G,MAAM6Y,eAFW/f,OAAA,KAAAA,CAAA,GAGpB0gB,EAAOhmB,IAAMgmB,EAAOtmB,QAExB,EAAKwN,SACH,CAACmY,eAAgBY,M,EAKvBC,qBAAuB,SAAChlB,GACtB,EAAKgM,SAAU,CAAEqY,cAAgB,EAAK/Y,MAAM+Y,gB,EAG9CY,qBAAuB,SAACjlB,GACtB,EAAKgM,SAAU,CAAEoY,cAAgB,EAAK9Y,MAAM8Y,gB,EAG9C/gB,cAAgB,SAAC6hB,GAGZ,EAAKR,OAEN,EAAKA,MAAMS,iBACT,EAAK7Z,MAAM4Y,SAASjhB,SAASiiB,GAAcvmB,MAI/C,EAAKqN,SACH,CAAEiY,gBAAiBiB,K,EAIvBnhB,QAAU,WACRqhB,IAAgB,EAAKC,kBAClBnC,MAAK,SAAAoC,GACJ,IAAMC,EAAerI,OAAOsI,OAAPtI,eAAoDoI,EACzE,EAAKtZ,SAAS,CAACuZ,aAAcA,EAAcjB,mBAAmB,OAE/DmB,OAAM,SAACC,GAAO5L,MAAM,sD,EAGzB6L,WAAa,WACXP,IAAqB,EAAKC,mB,EAG5BxhB,OAAS,WACPuhB,IAA+B,EAAKC,mB,EAGtCJ,qBAAuB,SAACjlB,GACtB,EAAKgM,SAAS,CAACoY,cAAe,EAAK9Y,MAAM8Y,gB,EAG3CY,qBAAuB,SAAChlB,GACtB,EAAKgM,SAAS,CAACqY,cAAe,EAAK/Y,MAAM+Y,gB,EAG3CuB,mBAAqB,WACnB,EAAK5Z,SAAS,CAACsY,mBAAkB,K,EAGnC7N,OAAS,WACJ,EAAKiO,OAAQ,EAAKA,MAAMmB,Q,EAG7BnP,OAAS,WACJ,EAAKgO,OAAQ,EAAKA,MAAMzD,Q,EAG7B6E,WAAa,SAAC5O,GACT,EAAKwN,OAAQ,EAAKA,MAAMqB,SAAS7O,I,kEA3KrC,IAAD,OACQwI,EAAcld,eAAa,WAAa,KAY9CyG,KAAKyb,MAAQ,IAAIlF,GACfvW,KAAKqC,MAAM4Y,SAASpT,gBACpB7H,KAAKqC,MAAM4Y,SAASjhB,SACpB,KAdsB,SAAC4V,GACvB,IAAMmN,EAAwC,OAA3B,EAAK1a,MAAM+J,eAAoC,OAATwD,GACnDoN,EAAwB,EAAK3a,MAAMwY,gBAAgB,EAAKxY,MAAM2Y,iBAAiB3jB,eAC/E4lB,EAAcnhB,KAAK8K,MAAM,EAAKvE,MAAM+J,YAAc4Q,GAClDE,EAAYphB,KAAK8K,MAAMgJ,EAAOoN,IAChCD,GAAaE,IAAgBC,IAE/B,EAAKna,SAAU,CAACqJ,YAAawD,MAS/B6G,GACA,SAAC0G,GAAgB,EAAKpa,SAAS,CAACuY,WAAY6B,OAE9Cnd,KAAKyb,MAAMS,iBAAkBlc,KAAKqC,MAAM4Y,SAASjhB,SAASgG,KAAKqC,MAAM2Y,iBAAiBtlB,MAEtFue,OAAOmJ,iBAAiB,eAAgBpd,KAAKpF,U,6CAM7CoF,KAAKpF,SACLqZ,OAAOoJ,oBAAoB,eAAgBrd,KAAKpF,QAC5CoF,KAAKyb,QAEPzb,KAAKyb,MAAM6B,kBACJtd,KAAKyb,S,uCAMd,MAAO,CACLpX,YAAcrE,KAAKqC,MAAM4Y,SAAS5W,YAClCwD,gBAAkB7H,KAAKqC,MAAM4Y,SAASpT,gBACtC7N,SAAWgG,KAAKqC,MAAM4Y,SAASjhB,SAC/BujB,SAAUvd,KAAKqC,MAAM4Y,SAASlZ,MAC9BmZ,eAAgBlb,KAAKqC,MAAM6Y,eAC3BL,gBAAkB7a,KAAKqC,MAAMwY,gBAC7B2C,QAAS,W,+BAgIZ,IAAD,OACQlmB,EAAU0I,KAAKqC,MAAM4Y,SAASjhB,SAClCgG,KAAKqC,MAAM2Y,iBAEPyC,EAAqBzd,KAAKqC,MAAM4Y,UAAYjb,KAAKqC,MAAMwY,gBAAmB7a,KAAKqC,MAAMwY,gBAAgB7a,KAAKqC,MAAM2Y,iBAAmB,KACnIF,EAAmBJ,GAAsB1a,KAAKqC,MAAM6Y,eAAgBuC,GAEpEC,EADSnkB,eAC0B,GAAK,EAG9C,OACE,sBAAK9C,UAAU,MAAf,UACE,cAACknB,GAAA,EAAD,CAASnnB,QAAQ,UACjB,cAAConB,GAAA,EAAD,CACE7b,MAAO/B,KAAKqC,MAAM4Y,SAASlZ,MAC3B8b,eAAgB7d,KAAKgc,qBACrB8B,eAAgB9d,KAAK+b,qBACrBW,WAAY1c,KAAK0c,WACjB5hB,QAASkF,KAAKlF,UAEfkF,KAAKqC,MAAMiZ,YACZ,cAACyC,GAAA,EAAD,CAAUC,SAAS,QAAQrkB,MAAM,EAAMskB,iBAAkB,IAAMpkB,QAAS,WAAO,EAAKkJ,SAAS,CAACuY,WAAY,QAA1G,SACE,eAAC4C,GAAA,EAAD,CAAOF,SAAS,QAASnkB,QAAS,WAAO,EAAKkJ,SAAS,CAACuY,WAAY,QAApE,UACE,cAAC6C,GAAA,EAAD,oCACA,cAACC,GAAA,EAAD,UACCpe,KAAKqC,MAAMiZ,WAAW+C,MAAM,MAAMpnB,KAAI,SAAAuF,GAAI,OAAE,cAAC4hB,GAAA,EAAD,UAAM5hB,cAKvD,qBAAK7F,MAAO,CAAC6M,QAAS,OAAQ8a,SAAW,KACzC,cAAC,GAAD,CACEja,YAAarE,KAAKqC,MAAM4Y,SAAS5W,YACjCyG,OAAQxT,EAAQmG,iBAChB1C,OAAQ+f,EACR1O,YAAapM,KAAKqC,MAAM+J,cAE1B,qBAAKzV,MAAO,CAAC6M,QAAS,OAAQ8a,SAAW,KACzC,cAAC,GAAD,CACE9Q,OAAQxN,KAAKwN,OACbC,OAAQzN,KAAKyN,OACbS,cAAelO,KAAK6c,aAEtB,eAACnP,GAAA,EAAD,CAAMC,WAAS,EAAf,UACC+P,EAA0B,GAAK,cAAChQ,GAAA,EAAD,CAAME,MAAI,EAACC,IAAK,GAAK6P,GAA2B,IAAQ,KACxF,cAAChQ,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI6P,EAAf,SACA,cAAC,GAAD,CACIrZ,YAAarE,KAAKqC,MAAM4Y,SAAS5W,YACjCwD,gBAAiB7H,KAAKqC,MAAM4Y,SAASpT,gBACrCC,eAAgB9H,KAAKqC,MAAM4Y,SAASnT,eACpClS,SAAUoK,KAAKub,kBACfvI,cAAehT,KAAKwb,oBAGvBkC,EAA0B,GAAK,cAAChQ,GAAA,EAAD,CAAME,MAAI,EAACC,IAAK,GAAK6P,GAA2B,IAAQ,QAExF,cAAC3kB,GAAA,EAAD,CACEY,KAAMqG,KAAKqC,MAAM+Y,aACjBxhB,OAAQoG,KAAK+b,qBACbliB,QAASmG,KAAK+b,qBACd/hB,SAAUgG,KAAKqC,MAAM4Y,SAASjhB,SAC9BI,cAAe4F,KAAK5F,gBAEtB,cAACI,GAAA,EAAD,CACEb,KAAMqG,KAAKqC,MAAM8Y,aACjBvhB,OAAQoG,KAAKgc,qBACbniB,QAASmG,KAAKgc,qBACdrhB,OAAO,QACPrD,QAASA,EACTR,SAAUgkB,EACVllB,SAAUoK,KAAK4b,uBAEhB,cAAC,GAAD,CACCjiB,KAAMqG,KAAKqC,MAAMgZ,kBACjBxhB,QAASmG,KAAK2c,mBACdrC,IAAKta,KAAKqC,MAAMia,sB,GAzQHhiB,IAAMmG,W,sEC1B7B,SAAS8d,GAA2BjnB,EAAS8Q,GAG3C,OAAOF,GADW7L,MAAMC,KAAKhF,EAAQknB,OAAO,SAAAC,GAAI,OAAIA,EAAKtb,YACnBiF,GAGxC,SAASsW,GAAgB5e,GAMrB,IAAM6e,EAAqB7e,EAAO8C,KAAKgc,eAAe,GAAG/gB,WAInDghB,EAAkBxiB,MAAMC,KAC5BqiB,GACA,SAASG,GACP,IAAMC,EAAsBD,EAAQC,oBAAoB,GACpDza,EAAO,CACT,GAAO3L,SAASmmB,EAAQpoB,IACxB,KAASooB,EAAQppB,KAAK,GACrB,OAAWspB,WAAWF,EAAQ7Z,QAC9B,MAAiC,SAAvB6Z,EAAQG,QAAQ,GAC1B,KAASD,WAAWF,EAAQ5Z,MAC5B,QAAY4Z,EAAQtH,QAAQ,IAM/B,MAJI,UAAWuH,IAEbza,EAAI,SAAeya,EAAoBG,MAAM,GAAGvc,SAAS,IAEpD2B,KAIL6a,EAAkBrf,EAAO8C,KAAKwc,YAAY,GAAG9nB,QAG7C0G,EAAe3B,MAAMC,KACzB6iB,GACA,SAASL,GACP,IAAMO,EAAeP,EAAQQ,SAAS,GAAGb,KACnC1gB,EAAcpF,SAASmmB,EAAQ1W,MACjCoW,EAAQ,GAiBZ,OAhBIa,IAcFb,GAVAA,EAAQniB,MAAMC,KACZ+iB,GACA,SAASE,GACP,MAAO,CAAC,SAAa5mB,SAAS4mB,EAAYpc,UAAW,WAAexK,SAAS4mB,EAAY1hB,iBAO/EwI,QAAQ,SAAAtJ,GAAC,OAAIA,EAAEoG,SAAWpF,MAEnC,CACL,KAASA,EACT,KAAS+gB,EAAQppB,KAAK,GACtB,MAAU8oB,MAMVgB,EAAqBnjB,MAAMC,KAC/B0B,GACA,SAAS1G,GAEP,IADF,EACQF,EAAamnB,GAA2BjnB,EAASA,EAAQ8Q,MAC3D3K,EAAmB,GAFzB,cAG2BohB,GAH3B,yBAGahhB,EAHb,QAKU4hB,EAAgBnoB,EAAQknB,MAAMnY,QAClC,SAAAoY,GAAI,OAAKA,EAAK5gB,aAAeA,EAAWnH,MAEpCgpB,EAAerjB,MAAMC,KACzBmjB,GACA,SAAAhB,GAAI,OAAIA,EAAKtb,YAEf1F,EAAkBI,EAAWnH,GAAGgC,YAAe0M,GAAMua,cAAeD,EAAcpoB,EAAQ8Q,KAAMhR,IATlG,IAAI,EAAJ,qBACC,IAJH,8BAgBE,OAFAE,EAAQF,WAAaA,EACrBE,EAAQmG,iBAAmBA,EACpBnG,KAKX,GAAGwI,EAAO8C,KAAKgd,mBACf,CAKE,IAAMC,EAAuB/f,EAAO8C,KAAKgd,mBAAmB,GAAGtoB,QAC/D,GAAIuoB,EACJ,CAYE,IAHA,IAAIC,EAAmB,GAGvB,MAA2BzjB,MAAMC,KAAKujB,GAAtC,eACA,CADK,IAAME,EAAY,KAEfC,EAAkBD,EAAarqB,KAAK,GACpCuqB,EAAkB5jB,MAAMC,KAAKyjB,EAAaG,SAChDJ,EAAiBE,GAAmB,IAAIza,IAAI0a,GAO9C,IADA,IACQE,EAAY,EAAGA,EADA,KAC8BA,EACrD,CAIE,IAHA,IAAIC,EAAiB,GAEjBC,GAAoB,EACxB,MAA6BllB,OAAOgD,QAAQ2hB,GAA5C,eACA,CAAC,IAAD,wBADW9nB,EACX,KADiBsoB,EACjB,KACMC,EAAkB,IAAIhb,IAAI+a,GADhC,cAEqBC,GAFrB,IAEE,IAAI,EAAJ,qBACA,CAAC,IADUC,EACX,QACMA,KAAQV,IAGVS,EAAkB,IAAIhb,IAAJ,sBAAYgb,GAAZ,YAAgCT,EAAiBU,QAPzE,8BAUEH,EAAoBA,GAAuBE,EAAgBnY,OAASkY,EAAQlY,KAC5EgY,EAAgBpoB,GAASuoB,EAI3B,IAAIF,EAEF,MAGF,GA3BqB,KA2BjBF,EAEF,MAAM,IAAIllB,MAAM,gDAGlB6kB,EAAmBM,EAGrB,IAzDF,6CAyDcJ,EAzDd,KAyD+BS,EAzD/B,KA4DQC,EAAclB,EAAmBmB,MAAK,SAAAnb,GAAC,OAAIA,EAAE9P,OAASsqB,KA5D9D,cA6DqCS,GA7DrC,qBAgEM,IAhEN,IA6DeG,EA7Df,QA+DYC,EAAiBrB,EAAmBmB,MAAK,SAAAnb,GAAC,OAAIA,EAAE9P,OAASkrB,KAC/D,MAAsBzlB,OAAOgD,QAAQ0iB,EAAepjB,kBAApD,eACA,CAAC,IAAD,sBADY/G,EACZ,KADgBsI,EAChB,KACE,GAAItI,KAAMgqB,EAAYjjB,iBACtB,CACE,IAAMqjB,EAASJ,EAAYjjB,iBAAkB/G,GAAKqS,UAAW/J,GAE7D8hB,EAAOviB,IAAIhH,OAASmpB,EAAYtY,KAAQ0Y,EAAO1pB,WAC/CspB,EAAYjjB,iBAAkB/G,GAAOoqB,MAGvC,CAEE,IAAIC,EAAc/hB,EAAEgiB,OAAON,EAAYtpB,YACvC2pB,EAAYxpB,OAASmpB,EAAYtY,KAAQsY,EAAYtpB,WACrDspB,EAAYjjB,iBAAiB/G,GAAMqqB,KAjBzC,IAAI,EAAJ,qBACC,IA9DL,8BAoFI,IAAM3pB,EAAamnB,GAA2BmC,EAAaA,EAAYtY,MACvEsY,EAAYtpB,WAAaA,EACzB,IAAI,IAAJ,MAA0B+D,OAAOgD,QAAQuiB,EAAYjjB,kBAArD,eACA,CAAC,IAAD,sBADY/G,EACZ,KADgB0O,EAChB,KAEEsb,EAAYhqB,GAAM0O,EAAM4b,OAAQ5pB,KAhCpC,MAAmD+D,OAAOgD,QAAQ2hB,GAAlE,eACC,KAsCL,MAAO,CACL,YAAgBjB,EAChB,SAAaW,G,gDAInB,WAAoCyB,GAApC,gBAAAtpB,EAAA,6DAEMupB,EAAS,IAAIC,KAAOC,OAF1B,kBAISF,EAAOG,mBAAmBJ,GAAWhH,KAAKyE,KAJnD,4C,sBAOA,IAEerU,GAFO,CAAEiX,qB,8CCtNxB,SAASC,GAAensB,GAEtB,OACE,qBAAKqB,UAAU,MAAf,SACE,gCACE,cAAC+qB,EAAA,EAAD,CAAkBrU,MAAM,cACxB,cAAClM,EAAA,EAAD,qC,IAMFwgB,G,4MAEJpf,MAAQ,CACN4Y,SAAU,M,kEAIX,IAAD,OASEyG,GAAYpX,cAAc2P,MACxB,SAACgB,GACC,EAAKlY,SACH,CAAEkY,SAAWA,OAGjBuB,OAd4B,SAACC,GACf,EAAKrnB,MAAMmN,QACjB/K,KAAK,CACXkL,SAAU,IACVJ,MAAO,sG,+BAeX,OAAOtC,KAAKqC,MAAM4Y,SAAW,cAAC,GAAD,CAAUA,SAAUjb,KAAKqC,MAAM4Y,UAAejb,KAAKqC,MAAM4Y,UACzD,cAACsG,GAAD,Q,GA5BHjnB,IAAMmG,WAgCpC,SAASkhB,GAAiBhf,GAExB,OAAgB,OAAbA,QAAkCjJ,IAAbiJ,EAEf,KAELA,EAASlL,SAAS,KAEFkL,EAAS0b,MAAM,KAAKnpB,MAAM,GAAI,GAAG8H,KAAK,KAKjD2F,E,IAILif,G,4MAEJvf,MAAQ,CACN4Y,SAAU,M,kEAIX,IAAD,OACQlY,EAAW,SAACkY,GAChB,EAAKlY,SACH,CAAEkY,SAAWA,KAGjB,GAAIjb,KAAK5K,MAAMuN,SAAf,CAOA,IAAMkf,EAAwB,SAACpF,GACf,EAAKrnB,MAAMmN,QACjB/K,KAAK,CACXkL,SAAU,IACVJ,MAAO,kBAAoB,EAAKlN,MAAMuN,SAA/B,2FAIR3C,KAAK5K,MAAMuN,SAASlL,SAAS,UAG5BqqB,GAAGR,qBAAqBthB,KAAK5K,MAAMyK,SAChCoa,MAAK,SAAA8H,GACJ,OAAOL,GAAYlY,SACjBuY,EACAJ,GAAiB,EAAKvsB,MAAMuN,UAC5B,EAAKvN,MAAMuN,UACX,MAGHsX,KAAKlX,GACLyZ,MAAMqF,GAIXlY,QAAQC,QAAQ5J,KAAK5K,MAAMyK,SACxBoa,MAAK,SAACpa,GAEL,MAA2B,kBAAbA,EAAwBmiB,KAAKC,MAAMpiB,GAAWA,KAE7Doa,MAAM,SAAAlZ,GACL,OAAO2gB,GAAYlY,SACjBzI,EACAA,EAAKwc,SAAWxc,EAAKwc,SAAWoE,GAAiB,EAAKvsB,MAAMuN,UAC5D,EAAKvN,MAAMuN,UACX,MAGHsX,KAAKlX,GACLyZ,MAAMqF,OA9CX,CAGgB7hB,KAAK5K,MAAMmN,QACjB/K,KAAK,CAACkL,SAAU,S,+BAgD1B,OAAO1C,KAAKqC,MAAM4Y,SAAW,cAAC,GAAD,CAAUA,SAAUjb,KAAKqC,MAAM4Y,UAAejb,KAAKqC,MAAM4Y,UACzD,cAACsG,GAAD,Q,GAlEAjnB,IAAMmG,WAuEjCyhB,G,4MAEJ7f,MAAQ,CACN4Y,SAAU,M,kEAIX,IAAD,OAcEkB,IAAgBnc,KAAK5K,MAAMinB,QACxBpC,MAAM,SAAAlZ,GACL,OAAO2gB,GAAYlY,SACjBzI,EACAA,EAAKwc,SACLxc,EAAKohB,YACL,MAGHlI,MAtBc,SAACgB,GAChB,EAAKlY,SACH,CAAEkY,SAAWA,OAqBduB,OAlB2B,SAACC,GACf,EAAKrnB,MAAMmN,QACjB/K,KAAK,CACXkL,SAAU,IACVJ,MAAO,uBAAyB,EAAKlN,MAAMinB,OAApC,mI,+BAmBX,OAAOrc,KAAKqC,MAAM4Y,SAAW,cAAC,GAAD,CAAUA,SAAUjb,KAAKqC,MAAM4Y,UAAejb,KAAKqC,MAAM4Y,UACzD,cAACsG,GAAD,Q,GArCCjnB,IAAMmG,WAyClC2hB,G,4MAEJ/f,MAAQ,CACN4Y,SAAU,M,kEAIX,IAAD,OACQ4G,EAAwB,SAACpF,GACf,EAAKrnB,MAAMmN,QACjB/K,KAAK,CACXkL,SAAU,IACVJ,MAAO,uCAAyC,EAAKlN,MAAMM,KAAO,QAUhE2sB,EADUlG,MACQ9V,QAAQ,SAAAzD,GAAI,OAAMA,EAAKlM,KAAO,EAAKtB,MAAMinB,UAC9DgG,EAAQ9qB,OAAS,GAGlBsqB,IAGFlY,QAAQC,QAAQyY,EAAQ,IACrBpI,MAAM,SAACrX,GAEN,GADkB0f,KAAK1f,EAAK/C,WACV,EAAKzK,MAAMinB,OAE3B,MAAM,IAAIphB,MAAM,sBAGlB,OADqBsnB,YAAY3f,EAAK/C,YAErCoa,MAAM,SAAAlZ,GACP,OAAO2gB,GAAYlY,SACjBzI,EACAA,EAAKwc,SACLxc,EAAKwc,UACL,MAEDtD,MA9BY,SAACgB,GAChB,EAAKlY,SACH,CAAEkY,SAAWA,OA6BduB,MAAMqF,K,+BAKP,OAAO7hB,KAAKqC,MAAM4Y,SAAW,cAAC,GAAD,CAAUA,SAAUjb,KAAKqC,MAAM4Y,UAAejb,KAAKqC,MAAM4Y,UACzD,cAACsG,GAAD,Q,GApDAjnB,IAAMmG,WCrK1B,SAAS+hB,GAAOptB,GAC7B,IAAMqtB,EAAkBC,YAAc,gCAChCluB,EAAQmuB,YAAqBroB,IAAMsoB,SACvC,kBACEC,YAAe,CACbhf,QAAS,CACPvD,KAAMmiB,EAAkB,OAAS,QACjCpoB,QAAS,CACP+S,KAAM,WAER7L,UAAW,CACT6L,KAAM,gBAId,CAACqV,KAGH,OACE,cAAC,IAAD,CAAQK,SAAU7pB,SAAlB,SACE,eAAC8pB,EAAA,EAAD,CAAevuB,MAAOA,EAAtB,UACA,cAACwuB,EAAA,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAC/tB,GACP,OAAO,cAAC,EAAD,CACLmN,QAASnN,EAAMmN,QACf6gB,SAAUhuB,EAAMguB,SAChB5gB,YAAa2Z,MACb7Z,MAAOlN,EAAMguB,SAAS9gB,WAI5B,cAAC,IAAD,CACE2gB,OAAK,EACLC,KAAK,WACLC,OAAQ,SAAC/tB,GACP,OAAO,cAAC,GAAD,CACLmN,QAASnN,EAAMmN,QACf6gB,SAAUhuB,EAAMguB,cAItB,cAAC,IAAD,CACEF,KAAK,gBACLC,OAAQ,SAAC/tB,GACP,OAAO,cAAC,GAAD,CACLmN,QAASnN,EAAMmN,QACf6gB,SAAUhuB,EAAMguB,SAChB/G,OAAQjnB,EAAMsG,MAAM2nB,OAAOhH,YAIjC,cAAC,IAAD,CACE6G,KAAK,UACLC,OAAQ,SAAC/tB,GACP,OAAO,cAAC,GAAD,CACLmN,QAASnN,EAAMmN,QACf6gB,SAAUhuB,EAAMguB,SAChBzgB,SAAUvN,EAAMguB,SAASzgB,SACzB9C,QAASzK,EAAMguB,SAASvjB,aAI9B,cAAC,IAAD,CACEqjB,KAAK,kBACLC,OAAQ,SAAC/tB,GACP,OAAO,cAAC,GAAD,CACLmN,QAASnN,EAAMmN,QACf6gB,SAAUhuB,EAAMguB,SAChB/G,OAAQjnB,EAAMsG,MAAM2nB,OAAOhH,oBC9EvBiH,QACW,cAA7BrP,OAAOmP,SAASG,UAEe,UAA7BtP,OAAOmP,SAASG,UAEhBtP,OAAOmP,SAASG,SAAS7nB,MACvB,2DCZN8nB,IAASL,OACP,cAAC,IAAMM,WAAP,UACE,cAACjB,GAAD,MAEFkB,SAASC,eAAe,SDyHpB,kBAAmBvqB,WACrBA,UAAUwqB,cAAcC,MACrB5J,MAAK,SAAA6J,GACJA,EAAaC,gBAEdvH,OAAM,SAAAla,GACLO,QAAQP,MAAMA,EAAMwV,a,iCEzI5B,yQA+BMkM,EAAc,SAAC/I,GAGnB,IAAMgJ,EAAKjC,KAAKkC,UAAUjJ,GAG1B,MAAO,CAAE5Y,MADe8hB,IAAKC,YAAYH,GAAIvrB,SAAS,YAIlD6pB,EAAc,SAAClgB,GAEnB,IAAMgiB,EAAe,IAAIC,EAAOjiB,EAAMA,MAAO,UACvCkiB,EAAqBJ,IAAKK,YAAYH,GAC5C,OAAOrC,KAAKC,MAAMsC,IAIdE,EAAoBC,2BAIpBC,EAAM,SAACC,EAAalvB,GAExB,IAEMmvB,GAFUnvB,GAAckvB,EAAYrH,UAEjBroB,MAAM,EAAG,IAC5B4vB,EAAed,EAAYY,GAC3BG,EAAW,CACfC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,aAbsB,+DActB,gBAb2B,2BAc3BC,SAAS,EACTxvB,KAAMmvB,GAERM,KAAMnD,KAAKkC,UAAUY,IAEvB,OAAOM,MAAOX,EAAmBM,GAC9B9K,MAAK,SAAAoL,GACJ,GAAIA,EAASC,GAMX,OAAOD,EAASE,OAJhB,MAAM,IAAItqB,MAAM,4BAMjBgf,MAAK,SAAAlZ,GACN,OAAOA,EAAKrK,OAIZ8uB,EAAM,SAACC,GAKX,OAAOL,MAAOX,EAAoB,IAAMgB,EAHvB,CACfR,QAAS,CAAE,eAAgB,sBAG1BhL,MAAM,SAAAoL,GACL,GAAIA,EAASC,GAMX,OAAOD,EAASE,OAJhB,MAAM,IAAItqB,MAAM,4BAOnBgf,MAAM,SAAAgK,GACL,OAAO1B,EAAY0B,OAInByB,EAAkB,WACtB,IAtGuB,SAACplB,GAEtB,IAAIqlB,EACJ,IACIA,EAAU1R,OAAO3T,GACjB,IAAIc,EAAI,mBAGR,OAFAukB,EAAQC,QAAQxkB,EAAGA,GACnBukB,EAAQE,WAAWzkB,IACZ,EAEX,MAAMrK,GAEF,OAAOA,aAAa+uB,eAEL,KAAX/uB,EAAEgvB,MAES,OAAXhvB,EAAEgvB,MAGS,uBAAXhvB,EAAErB,MAES,+BAAXqB,EAAErB,OAEDiwB,GAA8B,IAAnBA,EAAQpuB,QA+E1ByuB,CAAiB,gBAEnB,MAAO,GAET,IAAMC,EAAcC,aAAaC,QAAQ,iBAEzC,OADoBF,EAAcjE,KAAKC,MAAMgE,GAAavuB,MAAM,SAACC,EAAEC,GAAH,OAASA,EAAE6J,KAAO9J,EAAE8J,QAAU,IAI1F2kB,EAAqB,SAACxB,GACxB,IAAME,EAAed,EAAYY,GAC3ByB,EAAY/D,IAAKwC,GACnBviB,EAAUmjB,IACRY,EAAkB/jB,EAAQ8D,QAAQ,SAAAzD,GAAI,OAAMA,EAAKlM,KAAO2vB,GAAazjB,EAAKlN,OAASkvB,EAAYrH,YACrG,GAA+B,IAA3B+I,EAAgB/uB,OAIlB+uB,EAAgB,GAAG7kB,KAAOD,KAAK0Y,UAGjC,CAEE,IAAMqM,EAAe,CACnB7wB,KAAMkvB,EAAYrH,SAClB7mB,GAAI2vB,EACJ5kB,KAAMD,KAAK0Y,MACXra,QAASilB,GAEXviB,EAAQ/K,KAAK+uB,GAIf,IAAMC,EAAoBjkB,EAAQ7K,MAAM,SAACC,EAAEC,GAAH,OAASA,EAAE6J,KAAO9J,EAAE8J,QAASvM,MAAM,EAAG,IAC9EgxB,aAAaN,QAAQ,gBAAiB5D,KAAKkC,UAAUsC,KAGnDC,EAAW,SAAC7B,GAChB,IAAM8B,EAAe9B,EAAYrH,SAAW,SACtC0G,EAAKjC,KAAKkC,UAAUU,EAAa,KAAM,GACvC+B,EAAO,IAAIC,KAAK,CAAC3C,GAAK,CAAC3jB,KAAM,qBACnCumB,iBAAOF,EAAMD,M,yDCjJf,SAAUntB,IAIR,IAAMF,EAAaD,UAAUC,WAAWD,UAAU0tB,QAAQ7S,OAAO8S,MAWjE,MAVgB,CACZ,WACA,SACA,UACA,QACA,QACA,cACA,kBAGWC,MAAK,SAACC,GACjB,OAAO5tB,EAAUqC,MAAMurB,MAlB7B,mC,0MCeM3yB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,KAAM,CACJqL,OAAQ7O,EAAM6O,OAAOC,OAAS,EAC9BM,gBAAiBpP,EAAMqP,QAAQtC,eAInC,SAASqc,EAASxoB,GAChB,IAAMC,EAAUf,EAAUc,GAG1B,OAAGA,EAAM0E,YAOH,aAFF,CAEG,IAAD,CAAStD,QAAQ,UAOrB,cAAC,IAAD,CAAQ2M,SAAS,QACf1M,UAAWpB,EAAQ2C,KADrB,SAIE,eAAC,IAAD,CAASxB,QAAQ,QAAjB,UACE,cAAC,IAAD,CACE2W,MAAM,UACNI,aAAW,oBACX2Z,KAAK,QACL/sB,QAAS/E,EAAM0oB,eAJjB,SAME,cAAC,IAAD,MAEF,cAAC,IAAD,CACE3Q,MAAM,UACNI,aAAW,OACX2Z,KAAK,QACL3b,UAAW4b,IACXC,GAAG,IALL,SAOE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAY5wB,QAAQ,KAAK2W,MAAM,UAAUka,QAAM,EAAC1wB,MAAO,CAAC,SAAY,EAAG,aAAgB,YAAvF,SACGvB,EAAM2M,QAET,cAAC,IAAD,CACEoL,MAAM,UACNI,aAAW,WACX2Z,KAAK,QACL/sB,QAAS/E,EAAMsnB,WAJjB,SAME,cAAC,IAAD,MAEF,cAAC,IAAD,CACEvP,MAAM,UACNI,aAAW,WACX2Z,KAAK,QACL/sB,QAAS/E,EAAM0F,QAJjB,SAME,cAAC,IAAD,MAEF,cAAC,IAAD,CACEqS,MAAM,UACNI,aAAW,gBACX2Z,KAAK,MACL/sB,QAAS/E,EAAMyoB,eAJjB,SAME,cAAC,IAAD,WAOKvjB,QAAMC,KAAKqjB,K","file":"static/js/main.3fea8d70.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport notation from \"./notation\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  }\n}));\n\nfunction camelToReadable(s)\n{\n  const spacedString = s.replace(/([A-Z])/g, ' $1');\n  return spacedString[0].toUpperCase() + spacedString.slice(1);\n}\n\nfunction FormatSettings(props) {\n  const classes = useStyles(props);\n  // todo: change to multiple useState calls?\n\n  function tokenStateToItem(value)\n  {\n    return value === \" \" ? \"space\" : value;\n  }\n\n  function tokenItemToState(value)\n  {\n    return value === \"space\" ? \" \" : value;\n  }\n\n  // currently the only options which are pattern-local\n  // are supported by handleOptionChange\n\n  const handleOptionChange = (name, value, local) => {\n    // const updatedState = {...props.settings, [name]: value};\n    props.onChange({key: name, value: value, local: local});\n  };\n\n  const handleCheckedChange = (event) => {\n    // const updatedState = {...props.settings, [event.target.name]: event.target.checked};\n    props.onChange({key: event.target.name, value: event.target.checked, local: false});\n  };\n\n  function createOptionMenu(\n    name,\n    options,\n    itemToState = tokenItemToState,\n    stateToItem = tokenStateToItem,\n    localSetting = false\n  )\n  {\n    const idString = \"form-control-\" + name + \"-id\";\n    return (\n      <ListItem variant=\"filled\" className={classes.formControl} key={idString} id={idString} style={{width:\"75%\"}}>\n        <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"settings-option-{name}\">{name}</InputLabel>\n          <Select\n            labelId={\"settings-option-\" + name + \"-labelID\"}\n            id={\"settings-option-\" + name + \"-id\"}\n            value={stateToItem(props.settings[name])}\n            name={name}\n            onChange={(e) => handleOptionChange( e.target.name, itemToState(e.target.value), localSetting)}\n            style={{width:\"75%\", textAlign: \"center\"}}\n          >\n            {options.map((op) => <MenuItem key={\"settings-menu-item-\" + name + \"-\" + op} value={stateToItem(op)} style={{textAlign: \"center\"}}>{stateToItem(op)}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </ListItem>\n    );\n  };\n\n  function createBoolControl(name)\n  {\n    return (\n      <ListItem key={\"form-control-\" + name}>\n        <FormControlLabel\n          control={<Switch checked={props.settings[name]} onChange={handleCheckedChange} name={name} />}\n          label={camelToReadable(name)}\n          key={\"switch-\"+name}\n        />\n      </ListItem>\n    );\n  };\n\n  const resolutionToBeatString = (r) => ( r / props.settings.beatResolution ).toString();\n  const beatStringToResolution = (b) => props.settings.beatResolution * parseInt(b);\n\n  const candidateLineLengths = [ 2, 3, 4, 5, 6, 7, 8, 14, 16, 32 ];\n  let lineLengths = [];\n  for( const c of candidateLineLengths )\n  {\n    const resolution = c * 48;\n    if( (resolution % props.settings.beatResolution) === 0\n      && (resolution <= props.pattern.length)\n     )\n    {\n      lineLengths.push( resolution );\n    }\n  }\n\n  if( !lineLengths.includes( props.pattern.length ) )\n  {\n    lineLengths.push( props.pattern.length );\n    lineLengths.sort((a, b)=>{return a-b});\n  }\n\n  const candidateBeatResolutions = [24, 36, 48, 72, 96];\n  let beatResolutions = [];\n  for( const c of candidateBeatResolutions )\n  {\n    if( (c % props.pattern.resolution) === 0 && ( props.settings.lineResolution % c ) === 0)\n    {\n      beatResolutions.push( c );\n    }\n  }\n  return (\n    <FormGroup className={classes.root}>\n      <List>\n        {notation.FORMAT_CONFIG_STRINGS.map( op => createOptionMenu( op[0], op[1] ) ).reduce((prev, curr) => [prev, curr])}\n        {notation.FORMAT_CONFIG_BOOLS.map( op => createBoolControl( op )).reduce((prev, curr) => [prev, curr]) }\n          <ListSubheader>{\"Pattern \" + props.pattern.name + \" Options\"} </ListSubheader>\n          {\n            createOptionMenu(\n              \"beatResolution\",\n              beatResolutions,\n              (v) => v.toString(), // stateToItem\n              (v) => parseInt(v), // itemToState\n              true\n            )\n          }\n          {createOptionMenu(\n            \"lineResolution\",\n            lineLengths,\n            beatStringToResolution,\n            resolutionToBeatString,\n            true // localSetting\n          )}\n        </List>\n      </FormGroup>\n  );\n}\n\nconst DefaultSettings = notation.DEFAULT_FORMAT_CONFIG;\n\n\nexport { FormatSettings, DefaultSettings }\nexport default FormatSettings;\n","import React from \"react\";\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TabitBar from \"./TabitBar\";\nimport { isMobile } from \"./Mobile\";\n\nfunction PatternDrawer(props)\n{\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const mobile = isMobile();\n\n  // SwipableDawer has undesirable behaviour,\n  // (a) persistent isn't handled properly\n  // (b) onOpen of swipable drawer, is only called on swipe events\n  // I can't find convenient callbacks to hook into that are called \"when the component exists\"\n  // (components are deleted when the swipable drawer is closed)\n  // I think my approach would have to involve modifying the content in the swipeable drawer in\n  // a somewhat complex way sadly - not yet\n\n  return (\n    <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n    variant={mobile ? undefined : \"persistent\"}\n    open={props.open}\n    onOpen={props.onOpen}\n    onClose={props.onClose}\n    >\n      {!mobile ? <TabitBar placeholder /> : null }\n      <div\n        style={{overflow: \"auto\"}}\n      >\n        <List>\n          {(props.patterns ?? []).map( (pattern, index) => (\n            <ListItem\n              button\n              key={\"drawer-pattern\" + index.toString()}\n              onClick={() => { if(props.selectPattern){props.selectPattern(index);} }}\n            >\n              <ListItemText primary={pattern.name} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </SwipeableDrawer>\n  );\n};\n\n// open, onOpen, onClose, patterns, selectPattern\n\nexport default React.memo(PatternDrawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport notation from \"./notation\"\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport Divider from \"@material-ui/core/Divider\";\nimport {FormatSettings} from \"./formatSettings\";\nimport { isMobile } from \"./Mobile\";\nimport TabitBar from \"./TabitBar\";\n\nfunction SettingsDrawer(props)\n{\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const mobile = isMobile();\n\n  const patternDetails = props.pattern ? {\n    name : props.pattern.name,\n    resolution : props.pattern.resolution,\n    length: notation.getPatternLength(props.pattern)\n  } : null;\n\n  const noop = () => {};\n  return (\n    <SwipeableDrawer disableBackdropTransition={!iOS} disableDiscovery={iOS}\n      className={props.className}\n      variant={ mobile ? undefined : \"persistent\" }\n      anchor={props.anchor}\n      open={props.open}\n      onOpen={props.onOpen}\n      onClose={props.onClose}\n      style={{overflow: \"hidden\"}}\n    >\n      {!mobile ? <TabitBar placeholder /> : null }\n      {patternDetails &&\n        <FormatSettings\n          onChange={props.onChange ??  noop}\n          settings={props.settings}\n          pattern={patternDetails}\n          />\n      }\n      {patternDetails && props.onSave &&\n        <React.Fragment>\n          <Button\n            onClick={(e) => { props.onSave(); } }\n          >Download</Button>\n          <Divider />\n        </React.Fragment>\n      }\n      {patternDetails && props.onShare &&\n        <Button\n          onClick={(e) => { props.onShare(); } }\n        >Share</Button>\n      }\n    </SwipeableDrawer>\n  );\n}\n\nSettingsDrawer.propTypes = {\n  onSave: PropTypes.func,\n  onShare: PropTypes.func,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  anchor: PropTypes.oneOf(['left', 'right']).isRequired,\n  settings: PropTypes.object,\n  className: PropTypes.string\n}\n\nexport default React.memo(SettingsDrawer);\n","\nclass notation\n{\n\n  static DEFAULT_FORMAT_CONFIG = {\n    \"restMark\" : \"-\",\n    \"beatMark\" : \"|\",\n    \"lineMark\" : \"|\",\n    \"numberRestMark\" : \"-\",\n    \"beatResolution\" : 48,\n    \"showBeatMark\" : true,\n    \"showBeatNumbers\" : true,\n    // lineResolution is typically determined on a per-pattern basis\n    // however it used to be in here, and some tests still rely on this\n    \"lineResolution\" : 48 * 8\n  };\n\n  static FORMAT_CONFIG_STRINGS = [\n    [\"restMark\",[\"-\", \".\", \" \"]],\n    [\"numberRestMark\",[\"-\", \".\", \" \"]]\n  ];\n\n  static FORMAT_CONFIG_BOOLS = [\n    \"showBeatMark\",\n    \"showBeatNumbers\"\n  ];\n\n  static validateConfig(config, patternResolution) {\n    if( patternResolution != null && ( config.beatResolution % patternResolution ) !== 0 )\n    {\n      throw new Error(\"patternResolution doesn't divide beatResolution\");\n    }\n    if( config.lineResolution <= 0 )\n    {\n      throw new Error(\"config.lineResolution must be greater than zero\");\n    }\n  }\n\n  static resolveConfig(formatConfig)\n  {\n    for( const propName of Object.keys(formatConfig))\n    {\n      if(!notation.DEFAULT_FORMAT_CONFIG.hasOwnProperty(propName))\n      {\n        throw new Error(\"passed unrecognised property \" + propName);\n      }\n    }\n\n    return Object.assign( Object.assign({}, notation.DEFAULT_FORMAT_CONFIG), formatConfig );\n  }\n\n  static chunkString(str, chunkSize) {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    return str.match(new RegExp('.{1,' + chunkSize + '}', 'g'));\n  }\n\n  static chunkArray(a, chunkSize)\n  {\n    if( chunkSize <= 0 )\n    {\n      throw new Error(\"chunkSize must be > 0\")\n    }\n    let chunks = [];\n    for( let i = 0; i < a.length; i += chunkSize )\n    {\n      chunks.push( a.slice(i, Math.min( i + chunkSize, a.length) ) );\n    }\n    return chunks;\n  }\n\n  static createNumberMarker(numberRestMark, beatResolution, patternResolution, lineLength)\n  {\n    if( lineLength <= 0 )\n    {\n      throw new Error(\"lineLength <= 0\");\n    }\n\n    if( ( beatResolution % patternResolution ) !== 0)\n    {\n      throw new Error(\"patternResolution \" + patternResolution.toString() + \" does not divide beatResolution \" + beatResolution.toString());\n    }\n\n    let beatCount = Math.ceil(lineLength / beatResolution);\n    let numberMarkerArray = Array.from( Array(lineLength / patternResolution), e => numberRestMark );\n\n    for( let beat = 0; beat < beatCount; beat++ )\n    {\n      numberMarkerArray[ beat * ( beatResolution / patternResolution ) ] = ( (beat+1) % 10 ).toString();\n    }\n    return numberMarkerArray;\n  }\n\n  static formatLineWithMarkers(config, line, patternResolution, asHTML)\n  {\n    notation.validateConfig(config);\n\n    const beatChunkSize = config.beatResolution / patternResolution;\n\n    const padZero = (n, width) => {\n      n = n + '';\n      return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n    };\n    const formatSymbolAsSpans = (symbol, numericPosition) => {\n      return \"<span class='note-\" + padZero(numericPosition, 4) + \"'>\" +  symbol + \"</span>\";\n    };\n\n    const formatSymbol = asHTML ? formatSymbolAsSpans : (symbol, numericPosition) => symbol;\n\n    let formattedLine = \"\";\n    for( let index = 0; index < line.length; ++ index )\n    {\n      const numericPosition = patternResolution * index;\n      formattedLine += formatSymbol(line.charAt(index), numericPosition);\n    }\n\n\n    const lineWithBeats = config.showBeatMark ? notation.chunkString(formattedLine, beatChunkSize * formatSymbol(\"X\", 0).length).join(config.beatMark) : formattedLine;\n    // note: we choose to always show the lineMarker even if it doesn't match the line resolution\n    return config.lineMark + lineWithBeats + config.lineMark;\n  }\n\n  static defaultLineResolution(\n    trackDict,\n    beatResolution\n  )\n  {\n    const instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return 48 * 8;\n    }\n    const trackLength = instrumentTracks[0].length();\n    const beatCount = trackLength / beatResolution;\n    if( beatCount <= 12 )\n    {\n      return trackLength;\n    }\n    else if( beatCount > 32 )\n    {\n      return 48 * 16; // let's just be laazeee\n    }\n    else\n    {\n      // let's just apply a simple mapping, rather than think through logics\n      const mapping = [\n        trackLength, // 13\n        trackLength / 2, // 14\n        trackLength / 3, // 15\n        trackLength / 2, // 16\n        trackLength, // 17\n        trackLength / 3, // 18\n        trackLength, // 19\n        trackLength / 4, // 20\n        trackLength / 3, // 21\n        trackLength / 2, // 22\n        trackLength, // 23\n        trackLength / 3, // 24\n        trackLength / 5, // 25\n        trackLength, // 26\n        trackLength / 3, // 27\n        trackLength / 4, // 28\n        trackLength, // 29\n        trackLength / 6, // 30\n        trackLength, // 31\n        trackLength / 4, // 32\n      ];\n      return mapping[ beatCount - 13 ];\n    }\n  }\n\n  static guessPerPatternSettings(\n    trackDict\n  )\n  {\n    return {\n      \"lineResolution\" : notation.defaultLineResolution(trackDict, 48), // beatResolution (default)\n      \"beatResolution\" : 48 // should cover all the cases hopefully\n    };\n  }\n\n  static formatPatternString(\n    instrument,\n    trackDict,\n    restMark\n  )\n  {\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    const patternSize = instrumentTracks[0].length();\n    const patternResolution = instrumentTracks[0].resolution;\n    const notationLength = patternSize / patternResolution;\n\n    let patternArray = Array(notationLength).fill(restMark);\n    for( let charIndex = 0; charIndex < patternArray.length; ++charIndex)\n    {\n      // todo: handle collisions\n      for( const [trackID, trackSymbol] of Object.entries(instrument) )\n      {\n        const trackInstance = trackDict[trackID];\n        if( trackInstance != null && trackInstance.rep[charIndex] === 1 )\n        {\n          patternArray[charIndex] = trackSymbol;\n        }\n      }\n    }\n    return patternArray;\n  }\n\n  static fromInstrumentAndTrack(\n    instrument,\n    trackDict,\n    asHTML,\n    formatConfig = {}\n  )\n  {\n    const config = notation.resolveConfig(formatConfig);\n\n    let instrumentTracks = Object.values(trackDict);\n    if(instrumentTracks.length === 0)\n    {\n      return \"\";\n    }\n\n    // turn the tracks, into one char string\n    const patternArray = notation.formatPatternString( instrument, trackDict, config.restMark );\n    const patternString = patternArray.join(\"\");\n    const patternResolution = instrumentTracks[0].resolution;\n    const patternSize = instrumentTracks[0].length();\n\n    // handle lines and beatMarkers\n    let lineArray = notation.chunkString( patternString, config.lineResolution / patternResolution );\n\n    let formattedLineArray = [];\n    // add numbers on the first line\n    if( config.showBeatNumbers )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers(\n        config,\n        notation.createNumberMarker(config.numberRestMark, config.beatResolution, patternResolution, Math.min(config.lineResolution, patternSize)).join(\"\"),\n        patternResolution,\n        asHTML\n      ) );\n    }\n    for( let i = 0; i < lineArray.length; ++i )\n    {\n      formattedLineArray.push( notation.formatLineWithMarkers( config, lineArray[i], patternResolution, asHTML ) );\n    }\n\n    return formattedLineArray.join(\"\\n\");\n  }\n\n  static getPatternLength(pattern)\n  {\n    let trackLength = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        trackLength = Math.max( trackLength, t.length() );\n    }\n    return trackLength;\n  }\n\n  static getPatternResolution(pattern)\n  {\n    let resolution = 48;\n    for(const [,t] of Object.entries(pattern.instrumentTracks))\n    {\n        resolution = Math.min( resolution, t.resolution );\n    }\n    return resolution;\n  }\n\n};\n\nexport default notation;\n","// FileUpload.react.js\n\n// inspired by https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n// and https://stackoverflow.com/questions/55830414/how-to-read-text-file-in-react\n\nimport React from 'react'\nimport Button from '@material-ui/core/Button';\n\nclass FileImport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.hiddenFileInput = React.createRef();\n  }\n\n  onChange(e) {\n    const fileObject = e.target.files[0]\n    const reader = new FileReader()\n    reader.onload = loadEvent => {\n      if( this.props.onImport )\n      {\n        this.props.onImport(\n          { file: fileObject, content : loadEvent.target.result}\n        );\n      }\n    }\n    reader.readAsText(fileObject);\n  }\n\n  render() {\n    const clickFile = (e) => {\n      this.hiddenFileInput.current.click();\n    }\n\n    const {onImport, accept, ...buttonProps} = {...this.props};\n    return (\n      <React.Fragment>\n        <Button onClick={clickFile} {...buttonProps}>Import File</Button>\n        <input\n          type=\"file\"\n          hidden\n          accept={accept}\n          onChange={(e) => this.onChange(e)} ref={this.hiddenFileInput}\n          />\n      </React.Fragment>\n   )\n  }\n}\n\nexport default FileImport;\n","// History.js\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => {return {\n  root: {\n    width: '100%',\n    height: 400,\n    minWidth: 200,\n    maxWidth: 300,\n    maxHeight: 200,\n    overflow: 'auto'\n  }\n}});\n\nfunction renderRow(props) {\n  return (\n    <ListItem button style={props.style} key={props.index} onClick={props.onClick}>\n      <ListItemText primary={props.name} secondary={new Date(props.date).toLocaleDateString()}/>\n    </ListItem>\n  );\n}\n\nfunction History(props)\n{\n  const classes = useStyles();\n  const items = props.data;\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Typography>Recently viewed</Typography>\n        <Divider />\n        <List>\n              {[...items.keys()].map ( x => renderRow({\n                index : x,\n                name: items[x].name,\n                id: items[x].id,\n                date: items[x].date,\n                onClick: ()=>{if(props.onClick){props.onClick(items[x]);}}\n              }))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n\nexport default History;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\n\nfunction TitledDialog(props) {\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle id=\"text-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose} variant=\"contained\">\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nTitledDialog.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func\n};\n\nexport default TitledDialog;\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport FileImport from \"./FileImport\";\nimport Button from '@material-ui/core/Button';\nimport History from \"./History\";\nimport TitledDialog from \"./TitledDialog\"\nimport './App.css';\n\nconst styles = (theme)=>{\n  return {\n    licenseBanner: {\n      position:\"absolute\",\n      bottom:0,\n      \"width\": \"95%\",\n      \"textAlign\": \"center\",\n      \"backgroundColor\" : \"#212121\", // same background color as app\n      \"zIndex\" : theme.zIndex.drawer\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    }\n  };\n};\n\nclass TitleScreen extends React.Component\n{\n  state = {\n    error: this.props.error\n  }\n\n  render()\n  {\n    let history = this.props.history;\n    const songHistory = this.props.songHistory;\n    // if a load of a song is in flight don't show file open buttons\n    const handleFileImport = (e) =>\n    {\n      history.push({\n        pathname: '/import',\n        filename: e.file.name,\n        content: e.content\n      });\n    };\n\n    const navigateRecent = (song) => {\n      console.log(song);\n      history.push('/recent/' + song.id + \"/\");\n    };\n\n    const controls = (\n      <React.Fragment>\n        <Button variant=\"contained\" onClick={()=>{history.push(\"/example\")}} style={{margin: \"1em\"}}>Load example</Button>\n        <FileImport\n          style={{margin: \"1em\"}}\n          variant=\"contained\"\n          onImport={handleFileImport}\n          accept=\".tabit,.h2song\"\n          />\n      </React.Fragment>\n    );\n    const { classes } = this.props;\n    return (\n      <div className=\"App\">\n        <div>\n          <h2>tabit</h2>\n          <p>I read .h2songs and write tab</p>\n          {controls}\n        </div>\n        <div style={{\"marginLeft\" : \"auto\", \"marginRight\": \"auto\"}}>\n        { songHistory.length > 0 &&\n          <History data={songHistory} onClick={navigateRecent}/>\n        }\n        </div>\n        { !!this.state.error &&\n          <TitledDialog\n            title=\"Something went wrong.\"\n            open={!!this.state.error}\n            onClose={()=>{this.setState({error: null})}}\n          >\n            {this.state.error}\n          </TitledDialog>\n        }\n        <div className={classes.licenseBanner} >\n          <p>tabit relies on publicly available sound libraries listed at <a href=\"https://github.com/andrew-murray/tabit\">https://github.com/andrew-murray/tabit</a></p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(TitleScreen);\n","const DEFAULT_INSTRUMENT_SYMBOLS = {\n  \"Djembe Slap\" : \"S\",\n  \"Djembe Tone\" : \"t\",\n  \"Djembe Bass\" : \"O\",\n  \"Snare Ghost\" : \"x\",\n  \"Snare Accent\" : \"X\",\n  \"Shaker Ghost\" : \"x\",\n  \"Shaker Accent\" : \"X\",\n  \"Click\" : \"X\",\n  \"Bass\" : \"O\",\n  \"Tom\" : \"O\",\n  \"Default\" : \"X\"\n};\n\nfunction normalizeInstrumentsForFiguring(instruments)\n{\n  let n = [];\n  for(const inst of instruments)\n  {\n    let nInst = Object.assign({}, inst);\n    // for some reason these instruments are one-size arrays, and one id ... the track id from hydrogen\n    // this should be fixed, this doesn't make sense\n    nInst.name = nInst.name.toLowerCase();\n    n.push( nInst );\n  }\n  return n;\n}\n\nfunction figureDjembes(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const djembeTracks = instruments.filter( (inst) => inst.name.includes(\"djembe\") );\n  if(djembeTracks.length === 0)\n  {\n    return [];\n  }\n  else if(djembeTracks.length <= 3)\n  {\n    // let's lazily assume we have a slap, tone, bass\n    const slapArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"slap\") );\n    const toneArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"tone\") );\n    const bassArray = Array.from( djembeTracks, (inst) => inst.name.includes(\"bass\") );\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      let parityCheck = slapArray[i] + toneArray[i] + bassArray[i];\n      // failed to figure out how djembes work return empty array\n      if(parityCheck !== 1)\n      {\n        return [];\n      }\n    }\n    let djembeMapping = {};\n    for( let i = 0; i < djembeTracks.length; ++i )\n    {\n      if( slapArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Slap\"];\n      }\n      else if( toneArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Tone\"];\n      }\n      else if( bassArray[i] )\n      {\n        djembeMapping[ djembeTracks[i].id.toString() ] = symbolConfig[\"Djembe Bass\"];\n      }\n    }\n    return [ [ \"Djembe\", djembeMapping ] ];\n  }\n  else\n  {\n    // TODO: support more than one djembe\n    return []\n  }\n}\n\n// used by snare/shaker\nfunction manageAccentOrGhost(instrumentTracks, instrumentName, accentSymbol, ghostSymbol)\n{\n  let outputInstruments = [];\n  if(instrumentTracks.length === 2)\n  {\n    const t0 = instrumentTracks[0];\n    const t1 = instrumentTracks[1];\n    // attempt to determine ghost/accent\n    const zeroLouder = t0.volume > t1.volume || (t0.volume === t1.volume && t0.gain > t1.gain);\n    let mapping = {};\n    mapping[ t0.id.toString() ] = zeroLouder ? accentSymbol : ghostSymbol;\n    mapping[ t1.id.toString() ] = zeroLouder ? ghostSymbol : accentSymbol;\n    outputInstruments.push([instrumentName, mapping] );\n  }\n  else // if 1 it must be an accent, if >= 3 ... I don't want to try and assign ghosts/accents\n  {\n    // I don't want to support ghost/accent here right now\n    for( const track of instrumentTracks )\n    {\n      let mapping = {};\n      mapping[ track.id.toString() ] = accentSymbol;\n      outputInstruments.push([instrumentName, mapping] );\n    }\n  }\n  return outputInstruments;\n\n}\n\nfunction figureShakers(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  // todo: support common alternative shakers? Tambourine?\n  const shakerTracks = instruments.filter( (inst) => ( inst.name.includes(\"shaker\") ) );\n  return manageAccentOrGhost(\n    shakerTracks,\n    \"Shaker\",\n    symbolConfig[\"Shaker Accent\"],\n    symbolConfig[\"Shaker Ghost\"]\n  );\n}\n\nfunction figureSnares(instrumentsRaw, symbolConfig)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const snareTracks = instruments.filter( (inst) => ( inst.name.includes(\"snare\") ) );\n  // todo: we currently assume 2 snares is accent/ghost ... but I think it's relatively\n  // common to be 2 snare parts too, I think the algorithm here is check patterns to\n  // see if they overlap ... if the \"ghosts\" overlap the \"hits\" sometimes, assume 2 parts\n  return manageAccentOrGhost(\n    snareTracks,\n    \"Snare\",\n    symbolConfig[\"Snare Accent\"],\n    symbolConfig[\"Snare Ghost\"]\n  );\n}\n\n\nfunction activeInstruments(patterns)\n{\n  let nonTrivialInstruments = new Set();\n  for( const p of patterns )\n  {\n    for(const [instrumentID, part] of Object.entries(p.instrumentTracks))\n    {\n      if( !part.empty() )\n      {\n        nonTrivialInstruments.add(parseInt(instrumentID));\n      }\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction activeInstrumentation(instrumentIndex, patterns)\n{\n  const active = activeInstruments(patterns);\n  let nonTrivialInstruments = [];\n  for( const inst of instrumentIndex)\n  {\n    if( active.has(inst.id) )\n    {\n      nonTrivialInstruments.push( inst );\n    }\n  }\n  return nonTrivialInstruments;\n}\n\nfunction figureClickyInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  const instruments = normalizeInstrumentsForFiguring(instrumentsRaw);\n  const worthwhileInstruments = activeInstruments(patterns);\n  const relevantTracks = instruments.filter( (inst) => ( worthwhileInstruments.has(inst.id) &&\n    !inst.name.includes(\"djembe\") &&\n    ( inst.name.includes(\"click\") ||\n    inst.name.includes(\"stick\") ||\n    inst.name.includes(\"tom\") ||\n    inst.name.includes(\"bass\") ||\n    inst.name.includes(\"kick\") )\n  ) );\n\n  const trackIsClick = Array.from(\n    relevantTracks,\n    (t) => t.name.includes(\"click\") || t.name.includes(\"stick\")\n  );\n  // we prioritise the early tracks\n  // and hope for the best\n\n  let tomIndex = 1;\n  let bassIndex = 1;\n  let collated = [];\n  for( let candidate = 0; candidate < Math.floor(relevantTracks.length/2); ++candidate )\n  {\n    if( trackIsClick[candidate*2] !== trackIsClick[candidate*2+1] )\n    {\n      const clickTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2] : relevantTracks[candidate*2+1];\n      const hitTrack = trackIsClick[candidate*2] ? relevantTracks[candidate*2+1] : relevantTracks[candidate*2];\n      const instrumentIsTom = hitTrack.name.includes(\"tom\");\n      let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n      let instrumentName = \"\"\n      if( instrumentIsTom )\n      {\n        instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n        tomIndex = tomIndex + 1;\n      }\n      else\n      {\n        instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n        bassIndex = bassIndex + 1;\n      }\n      let mapping = {};\n      mapping[hitTrack.id.toString()] = symbolConfig[rawInstrumentName];\n      mapping[clickTrack.id.toString()] = symbolConfig[\"Click\"];\n      collated.push([instrumentName, mapping] );\n    }\n  }\n\n  // If there's a remainder instrument and there's no click\n  if( ((relevantTracks.length % 2 ) !== 0) && !trackIsClick[ relevantTracks.length - 1 ] )\n  {\n    const lastTrack = relevantTracks[relevantTracks.length - 1];\n    const instrumentIsTom = lastTrack.name.includes(\"tom\");\n    let rawInstrumentName = instrumentIsTom ? \"Tom\" : \"Bass\";\n    let instrumentName = \"\"\n    if( instrumentIsTom )\n    {\n      instrumentName = rawInstrumentName + ( (tomIndex >= 2) ? \" \" + tomIndex.toString() : \"\" );\n      tomIndex = tomIndex + 1;\n    }\n    else\n    {\n      instrumentName = rawInstrumentName + ( (bassIndex >= 2) ? \" \" + bassIndex.toString() : \"\" );\n      bassIndex = bassIndex + 1;\n    }\n    let mapping = {};\n    mapping[lastTrack.id.toString()] = symbolConfig[rawInstrumentName];\n    collated.push([instrumentName, mapping] );\n  }\n  return collated;\n}\n\nfunction defaultSymbolForSingleInstrument(symbolConfig, name)\n{\n  // we expect these keys\n  /*\n    \"Djembe Slap\" : \"S\",\n    \"Djembe Tone\" : \"t\",\n    \"Djembe Bass\" : \"O\",\n    \"Snare Ghost\" : \"-\",\n    \"Snare Accent\" : \"X\",\n    \"Shaker Ghost\" : \"x\",\n    \"Shaker Accent\" : \"X\",\n    \"Click\" : \"X\",\n    \"Bass\" : \"O\",\n    \"Tom\" : \"O\",\n    \"Default\" : \"X\"\n  */\n  const lowerName = name.toLowerCase();\n  if( lowerName.includes(\"click\") || lowerName.includes(\"stick\") )\n  {\n    return symbolConfig[\"Click\"];\n  }\n  else if( lowerName.includes(\"bass\") || lowerName.includes(\"kick\") )\n  {\n    return symbolConfig[\"Bass\"]\n  }\n  else if( lowerName.includes(\"snare\") )\n  {\n    return symbolConfig[\"Snare Accent\"];\n  }\n  else if( lowerName.includes(\"shaker\") )\n  {\n    return symbolConfig[\"Shaker\"];\n  }\n  else if( lowerName.includes(\"tom\") )\n  {\n    return symbolConfig[\"Tom\"];\n  }\n  else if( lowerName.includes(\"djembe\") )\n  {\n    if( lowerName.includes(\"slap\") )\n    {\n      return symbolConfig[\"Djembe Slap\"];\n    }\n    else if( lowerName.includes(\"tone\") )\n    {\n      return symbolConfig[\"Djembe Tone\"];\n    }\n    else\n    {\n      return symbolConfig[\"Djembe Bass\"];\n    }\n  }\n  return symbolConfig[\"Default\"];\n}\n\nfunction figureInstruments(instrumentsRaw, symbolConfig, patterns)\n{\n  let output = [];\n  output = output.concat( figureClickyInstruments( instrumentsRaw, symbolConfig, patterns ) );\n  output = output.concat( figureDjembes( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureSnares( instrumentsRaw, symbolConfig ) );\n  output = output.concat( figureShakers( instrumentsRaw, symbolConfig ) );\n\n  // we ignore track used by multiple instruments\n\n  // but attempt to cover \"instrument not recognised anywhere\"\n\n  const worthwhileInstruments = activeInstruments(patterns);\n\n  for(const inst of instrumentsRaw)\n  {\n    if( !worthwhileInstruments.has(inst.id) )\n    {\n      continue;\n    }\n    let instrumentUsed = false;\n    for( const op of output)\n    {\n      if( inst.id.toString() in op[1] )\n      {\n        instrumentUsed = true;\n      }\n    }\n    if(instrumentUsed === false)\n    {\n      let mapping = {};\n      mapping[ inst.id.toString() ] = defaultSymbolForSingleInstrument( symbolConfig, inst.name );\n      output.push( [inst.name, mapping] );\n    }\n  }\n\n  return output;\n}\n\nfunction createInstrumentMask(instrumentIndex, instruments)\n{\n  let instrumentMask = Array(instrumentIndex.length);\n  for( let baseInstrumentIndex = 0; baseInstrumentIndex < instrumentIndex.length; ++baseInstrumentIndex )\n  {\n    const baseInstrumentId = instrumentIndex[baseInstrumentIndex].id;\n    for( let targetInstrumentIndex = 0; targetInstrumentIndex < instruments.length; ++targetInstrumentIndex)\n    {\n      const target = instruments[targetInstrumentIndex];\n      if(baseInstrumentId.toString() in target[1])\n      {\n        instrumentMask[baseInstrumentIndex] = targetInstrumentIndex;\n      }\n    }\n  }\n  return instrumentMask;\n}\n\nexport {\n  activeInstrumentation,\n  createInstrumentMask,\n  DEFAULT_INSTRUMENT_SYMBOLS,\n  figureClickyInstruments,\n  figureDjembes,\n  figureShakers,\n  figureSnares,\n  figureInstruments\n};\n","// utilities.js\n\nfunction calculateResolution(positions, size)\n{\n  // hydrogen treats 48 as a beat\n  const basesToTry = [\n    48, // beat\n    24, // 1/2 beat\n    16, // 1/3 beat\n    12, // 1/4\n    8, // 1/6\n    6, // 1/8\n    4, // 1/12\n    3, // 1/16\n    2, // 1/24\n    1 // 1/48\n  ];\n\n  // note that, fundamentally the size of the pattern is a \"keypoint\"\n  // that needs to be properly recorded by the resolution\n  const implicitPositions = positions.concat( [size] );\n\n  for( const b of basesToTry )\n  {\n    let allNotesPass = true;\n    for( const p of implicitPositions )\n    {\n      if( (p % b) !== 0 )\n      {\n        allNotesPass = false;\n        break;\n      }\n    }\n    if(allNotesPass)\n    {\n      return b;\n    }\n  }\n  throw new Error(\"Failed to predict base\");\n}\n\nexport { calculateResolution };","import { calculateResolution } from \"./utilities\"\n\n// stolen from https://studymaths.co.uk/topics/findingHCFWithJavaScript.php\nfunction findHCF(x, y) {\n\n   // If the input numbers are less than 1 return an error message.\n   if (x < 1 || y < 1) {\n    throw new Error(\"x<1 || y<1\");\n      // return \"Please enter values greater than zero.\";\n   }\n\n   // Now apply Euclid's algorithm to the two numbers.\n   while (Math.max(x, y) % Math.min(x, y) !== 0) {\n      if (x > y) {\n         x %= y;\n      }\n      else {\n         y %= x;\n      }\n   }\n\n   // When the while loop finishes the minimum of x and y is the HCF.\n   return Math.min(x, y);\n}\n\nclass track\n{\n\n  constructor(patternArray, resolution)\n  {\n    if(patternArray.length === 0)\n    {\n      throw new Error(\"patternArray must not be zero length\");\n    }\n    this.rep = patternArray;\n    this.resolution = resolution;\n  }\n\n  length()\n  {\n    return this.rep.length * this.resolution;\n  }\n\n  empty()\n  {\n    return this.rep.reduce( (a,b) => ( a + b ) ) === 0;\n  }\n\n  _sumOverlapsOfArrays(a,b)\n  {\n    let count = 0;\n    for( let i = 0; i < a.length; ++i)\n    {\n      if(a[i] && b[i])\n      {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  countOverlaps(other)\n  {\n    if( this.resolution === other.resolution )\n    {\n      return this._sumOverlapsOfArrays( this.rep, other.rep );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return this._sumOverlapsOfArrays( a.rep, b.rep );\n    }\n  }\n\n  aggregate(other)\n  {\n\n    if( this.resolution === other.resolution )\n    {\n      // when we aggregate, we specifically\n      const length = Math.max( this.rep.length, other.rep.length );\n      const pat = new Array(length).fill(0);\n      for(let index = 0; index < pat.length; ++index)\n      {\n        pat[index] = ( ( index < this.rep.length ) ? this.rep[index] : 0 )\n                  || ( ( index < other.rep.length ) ? other.rep[index] : 0 );\n      }\n      return new track( pat, this.resolution );\n    }\n    else\n    {\n      const hcf = findHCF(this.resolution, other.resolution);\n      const a = this.formatResolution( hcf );\n      const b = other.formatResolution( hcf );\n      return a.aggregate(b);\n    }\n  }\n\n  static representPoints(points, resolution, size)\n  {\n    if( size <= 0 )\n    {\n      throw new Error(\"size must be greater than zero\");\n    }\n    if( size < resolution || (size % resolution) !== 0)\n    {\n      throw new Error(\"resolution must be less than size and divide it evenly\");\n    }\n    let s = new Array(size / resolution).fill(0);\n    for( const p of points )\n    {\n      if( (p % resolution) !== 0)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" at resolution \" + resolution.toString());\n      }\n      if (p >= size)\n      {\n        throw new Error(\"Failed to represent point \" + p.toString() + \" for invalid specified size \" + size.toString());\n      }\n      const arrayIndex = p / resolution;\n      s[arrayIndex] = 1;\n    }\n    return s;\n  }\n\n  format(formatResolution)\n  {\n    // formatResolution must cleanly divide for every hit & the length of the pattern\n\n    const totalLength = (this.resolution * this.rep.length);\n    const points = this.toPoints();\n    const rep = track.representPoints(points, formatResolution, totalLength);\n    if(!rep)\n    {\n      return null;\n    }\n    return new track(\n      rep,\n      formatResolution\n    );\n  }\n\n  toPoints()\n  {\n    let points = [];\n    for( const arrayIndex of Array(this.rep.length).keys() )\n    {\n      const indicator = this.rep[arrayIndex];\n      if(indicator)\n      {\n        points.push( this.resolution * arrayIndex )\n      }\n    }\n    return points;\n  }\n\n  static fromPositions(positions, size, resolution = null)\n  {\n    const resolutionToUse = resolution ?? calculateResolution( positions, size );\n    return new track(\n      track.representPoints(positions, resolutionToUse, size),\n      resolutionToUse\n    );\n  }\n}\n\nexport default track;","import kuva from \"./kuva.json\";\nimport {\n  activeInstrumentation,\n  createInstrumentMask,\n  DEFAULT_INSTRUMENT_SYMBOLS,\n  figureInstruments\n} from \"./instrumentation\";\nimport track from \"./track\";\n\n// note that a Pattern contains\n// {\n//    size, name, notes\n//    resolution, instrumentTracks (instrumentTracks are a class)\n// }\n\nclass SongData {\n  constructor(\n    title,\n    sourceFile,\n    instruments,\n    instrumentIndex,\n    instrumentMask,\n    patterns\n  )\n  {\n    this.title = title;\n    this.sourceFile = sourceFile;\n    this.instruments = instruments;\n    this.instrumentIndex = instrumentIndex;\n    this.instrumentMask = instrumentMask;\n    this.patterns = patterns;\n  }\n};\n\nfunction createPatternsFromData(patternData)\n{\n  // the instruments currently work as simple objects\n  // we need to create tracks!\n  let patterns = [];\n  for( let pattern of patternData )\n  {\n    let replacedTracks = {};\n    // todo: find a more compact way of doing this\n    for( const [id, trackData] of Object.entries(pattern.instrumentTracks) )\n    {\n      replacedTracks[id] = new track( trackData.rep, trackData.resolution );\n    }\n    let patternWithTracks = Object.assign({}, pattern);\n    patternWithTracks.instrumentTracks = replacedTracks;\n    patterns.push(patternWithTracks);\n  }\n  return patterns;\n}\n\nfunction prepHydrogenVolumes(instrumentIndex)\n{\n  // fixme: convert hydrogen volume/gain to normal values, somewhere\n  for( let instrument of instrumentIndex )\n  {\n    instrument.volume = 0.5;\n  }\n  return instrumentIndex;\n}\n\nfunction LoadJSON(jsonData, title, filename, fromHydrogen)\n{\n  return new Promise((resolve) =>\n    {\n      const patterns = createPatternsFromData(jsonData.patterns);\n      const instruments = !fromHydrogen? jsonData.instruments : figureInstruments(\n        jsonData.instruments,\n        DEFAULT_INSTRUMENT_SYMBOLS,\n        patterns\n      );\n      const instrumentIndex = jsonData.instrumentIndex ? jsonData.instrumentIndex\n        : prepHydrogenVolumes( activeInstrumentation(jsonData.instruments, patterns) );\n      const instrumentMask = createInstrumentMask(instrumentIndex, instruments);\n      resolve( new SongData(\n        title,\n        filename,\n        instruments,\n        instrumentIndex,\n        instrumentMask,\n        patterns\n      ) );\n    }\n  );\n\n}\n\nfunction LoadExample()\n{\n  return LoadJSON(\n    kuva,\n    \"kuva\",\n    \"kuva.example\",\n    true // fromHydrogen\n  );\n}\n\n\nconst moduleExports = {\n  LoadExample,\n  LoadJSON\n};\n\nexport default moduleExports;\n","import React from 'react';\nimport notation from \"./notation\"\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme)=>({\n  root: {\n    whiteSpace: \"pre\",\n    fontFamily: \"Roboto Mono\",\n    fontSize: '0.8rem',\n    '@media (min-width:800px)': {\n      fontSize: '1rem',\n    },\n  }\n});\nconst PreTypography = withStyles(styles)(Typography);\n\nclass Part extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const tracks = Object.values(this.props.tracks);\n    if(tracks.length === 0 )\n    {\n      return <React.Fragment />\n    }\n    const patternArray = notation.formatPatternString(\n      this.props.instrument,\n      this.props.tracks,\n      this.props.config.restMark\n    );\n    // don't support a multi-line pattern, that doesn't divide the beatResolution\n    // because it's a nightmare!\n    const patternResolution = tracks[0].resolution;\n    if( (this.props.config.lineResolution % this.props.config.beatResolution) !== 0\n        && ( patternArray.length * patternResolution > this.props.config.lineResolution ) )\n    {\n      throw new Error(\"This code only supports a beatResolution that divides the lineResolution\");\n    }\n    // this code has got very convoluted\n    const patternLines = notation.chunkArray(patternArray, this.props.config.lineResolution / patternResolution, 0);\n    const beatsPerLine = this.props.config.lineResolution / this.props.config.beatResolution;\n    const beatChunkSize = this.props.config.beatResolution / patternResolution;\n    const linesWithBeats = patternLines.map(\n      line => notation.chunkArray( line, beatChunkSize )\n    );\n    const lineIndices = [...patternLines.keys()];\n    const formatLine = (key, line, startBeat)=>{\n      const beats = [...line.keys()];\n      return (\n        <PreTypography key={\"pattern-line-\" + key}>\n          <PreTypography variant=\"subtitle1\" component=\"span\" key={\"line-start-\" + key}>{this.props.config.lineMark}</PreTypography>\n          {\n            beats.map( beat => <React.Fragment key={\"fragment-beat-\"+ (beat + startBeat).toString()}>\n              <PreTypography variant=\"subtitle1\" component=\"span\" key={\"span-beat-\" + (beat + startBeat).toString()} className={\"partNote\"+ (beat + startBeat).toString()}>{line[beat].join(\"\")}</PreTypography>\n              <PreTypography variant=\"subtitle1\" component=\"span\" key={\"span-beat-marker-\" + (beat + startBeat).toString()}>{(this.props.config.showBeatMark && beat !== beats[beats.length-1]) ? this.props.config.beatMark : \"\"}</PreTypography>\n            </React.Fragment>\n            )\n          }\n          <PreTypography variant=\"subtitle1\" component=\"span\" key={\"line-end-\" + key}>{this.props.config.lineMark}</PreTypography>\n        </PreTypography>\n      );\n    };\n\n    const numberLine = notation.createNumberMarker(\n      this.props.config.numberRestMark,\n      this.props.config.beatResolution,\n      patternResolution,\n      Math.min( this.props.config.lineResolution, patternLines[0].length * patternResolution )\n    );\n    const beatChunks = notation.chunkArray(\n      numberLine,\n      this.props.config.beatResolution / patternResolution\n    );\n    return (\n      <React.Fragment>\n        {this.props.config.showBeatNumbers ? formatLine(\"beat\", beatChunks, 0) : \"\" }\n        {lineIndices.map(lineIndex=>formatLine(lineIndex.toString(), linesWithBeats[lineIndex], beatsPerLine * lineIndex))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(Part);\n","import React from 'react';\nimport Part from \"./Part\";\n\nfunction getTitleType(headingLevel, defaultLevel)\n{\n    const validHeadingLevels = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    const safeHeading = headingLevel ? headingLevel.toLowerCase() : '';\n    const Title = validHeadingLevels.includes(safeHeading) ? safeHeading : defaultLevel;\n    return Title;\n}\n\nclass PartWithTitle extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const Title = getTitleType(this.props.headingLevel, \"h4\");\n    return (\n      <article>\n        <Title>{this.props.instrumentName}</Title>\n        <Part\n          instrument={this.props.instrument}\n          tracks={this.props.tracks}\n          config={this.props.config}\n        />\n      </article>\n    );\n  }\n}\n\nexport default PartWithTitle;\n","import React from 'react';\nimport PartWithTitle from \"./PartWithTitle\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n  root: {\n    \"margin-bottom\": theme.spacing(2),\n    fontFamily: \"Roboto Mono\",\n    textAlign: \"left\",\n    whiteSpace:\"pre\",\n    \"margin\": \"auto\",\n    \"& .activeNote\": {\n      color: theme.palette.secondary.main\n    }\n  },\n});\n\nconst Pattern = React.memo((props)=>\n{\n  const instrumentIndices = [...props.instruments.keys()];\n  return (\n    <div style={{\"margin\": \"auto\"}}>\n      { instrumentIndices.map(\n          (instrumentIndex) => ( <PartWithTitle\n            key={\"part-\" + instrumentIndex.toString()}\n            instrumentName={props.instruments[instrumentIndex][0]}\n            instrument={props.instruments[instrumentIndex][1]}\n            tracks={props.tracks}\n            config={props.config}\n          /> )\n        )\n      }\n    </div>\n  );\n});\n\nclass ActivePattern extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  calculateBeat(config, patternTime)\n  {\n    const prevBeat = (patternTime !== undefined && patternTime !== null)\n      ? Math.floor(patternTime / config.beatResolution)\n      : null;\n    return prevBeat;\n  }\n\n  changePatternTime(prevBeat, beat, force)\n  {\n    if(beat !== prevBeat || force)\n    {\n      if(prevBeat !== null)\n      {\n        const prevElements = this.ref.current.getElementsByClassName(\"partNote\" + prevBeat.toString());\n        for( const e of prevElements )\n        {\n          e.classList.remove(\"activeNote\");\n        }\n      }\n      if(beat !== null)\n      {\n        const elements = this.ref.current.getElementsByClassName(\"partNote\" + beat.toString());\n        for( const e of elements )\n        {\n          e.classList.add(\"activeNote\");\n        }\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot)\n  {\n    if(prevProps.instruments !== this.props.instruments\n      || prevProps.tracks !== this.props.tracks\n      || prevProps.config !== this.props.config\n      || prevProps.classes !== this.props.classes)\n    {\n      this.changePatternTime(\n        // I don't quite understand why this removal is necessary\n        // it seems that react smartly preserves the previous element,\n        // so we need to fix its smarts or we change beatResolution partNoteX \"stays highlighted\"\n        this.calculateBeat( prevProps.config, prevProps.patternTime),\n        this.calculateBeat( this.props.config, this.props.patternTime),\n        true\n      );\n      return true;\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState)\n  {\n    // we don't trigger a react-rerender on patternTime changes\n    // we handle that in-browser for performance reasons\n    if(nextProps.instruments !== this.props.instruments\n      || nextProps.tracks !== this.props.tracks\n      || nextProps.config !== this.props.config\n      || nextProps.classes !== this.props.classes)\n    {\n      return true;\n    }\n    else if( nextProps.patternTime !== this.props.patternTime)\n    {\n      this.changePatternTime(\n        this.calculateBeat( this.props.config, this.props.patternTime),\n        this.calculateBeat( nextProps.config, nextProps.patternTime),\n        true\n      );\n      return false;\n    }\n    else\n    {\n      return false;\n    }\n  }\n\n  render()\n  {\n    return (\n      <div className={this.props.classes.root} ref={this.ref}>\n        <Pattern\n          instruments={this.props.instruments}\n          tracks={this.props.tracks}\n          config={this.props.config}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(ActivePattern);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\n\nfunction PlaybackControls(props)\n{\n  const tempoControlColumns = 4;\n\n  const onPlay = ()=>{ if(props.onPlay){ props.onPlay(); }; };\n  const onStop = ()=>{ if(props.onStop){ props.onStop(); }; };\n  const onSetTempo = (event, tempo)=>{ if(props.onTempoChange){ props.onTempoChange(tempo); } };\n\n  return (\n      <React.Fragment>\n        <div>\n          <IconButton\n            aria-label=\"play\"\n            onClick={onPlay}\n          >\n            <PlayArrowIcon style={{color: \"#4cbb17\"}}/>\n          </IconButton>\n          <IconButton\n            aria-label=\"stop\"\n            onClick={onStop}\n          >\n            <StopIcon style={{color: '#ff0800'}}/>\n          </IconButton>\n        </div>\n\n        <Grid container>\n        <Grid item xs={(12 - tempoControlColumns) / 2} />\n        <Grid item xs={tempoControlColumns}>\n        <Slider\n          defaultValue={100}\n          min={60}\n          step={1}\n          max={180}\n          onChange={onSetTempo}\n          valueLabelDisplay=\"auto\"\n        />\n        </Grid>\n        <Grid item xs={(12 - tempoControlColumns ) / 2} />\n        </Grid>\n\n      </React.Fragment>\n   );\n};\n\nexport default React.memo(PlaybackControls);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport ClickNHold from 'react-click-n-hold';\nimport Slider from '@material-ui/core/Slider';\n\nimport {isMobile} from \"./Mobile\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nconst ThinFormControlLabel = withStyles({\n  root: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n})(FormControlLabel);\n\nconst InlinableIconButton = withStyles({\n  root: {\n    padding: 2\n  }\n})(IconButton);\n\nconst NoDividerCenterTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: \"none\",\n    textAlign: \"center\",\n    paddingBottom: theme.spacing(0) // make instrument titles bunch up with their controls a little more\n  }\n}))(TableCell);\n\nconst CenterTableCell = withStyles((theme) => ({\n  root: {\n    textAlign: \"center\"\n  }\n}))(TableCell);\n\nfunction VolumeWidget(props)\n{\n  const [active, setActive] = React.useState(false);\n  const [sliderValue, setSliderValue] = React.useState(100);\n  const [muted, setMuted] = React.useState(props.muted);\n  const sliderRef = React.useRef(null);\n  const height = props.height ? props.height / 3 : 24;\n  const FixedHeightStylings = {\n    height: 3*height,\n    position: \"absolute\",\n    top: -height\n  };\n  const SliderStyles = Object.assign(active? {} : {\"visibility\": \"hidden\", paddingLeft: \"0px\"}, FixedHeightStylings);\n  const IconStyles = active ?  {\"visibility\":\"hidden\"} : {};\n\n  // currently: updating based on the normal volume event isn't nearly performant enough\n  // (because the app's state update is really sluggish)\n  // potential fixes - seperate the audio and the visual state and/or create smaller state objects\n  const setVolume = (event, value) =>\n  {\n    setSliderValue(value);\n    if( props.onChange )\n    {\n      props.onChange( value );\n    }\n  };\n\n  // for mobile\n  // we click'n'hold which opens the volume slider, but don't propagate focus\n\n  // for desktop/tablet\n  // we click'n'hold and propagate focus to the slider, so that our drag\n  // will pull the slider up and down\n  const mobile = isMobile();\n\n  const holdDesktop = (start, event)=>{\n    if(!active){ setActive(true); }\n    if(sliderRef){ sliderRef.current.dispatchEvent(event.nativeEvent);}\n  };\n\n  const holdMobile= (start, event)=>{\n    if(!active){ setActive(true); }\n  };\n\n  const holdEndDesktop = (e)=>{\n    setActive(false);\n  };\n\n  const commitVolume = (event,value)=>\n  {\n    if( mobile ){ setActive(false); }\n    setVolume(event,value);\n  };\n\n  const onMuteChange = () =>\n  {\n    setMuted(!muted);\n    props.onMuteEvent(!muted);\n  };\n\n  return (\n    <ClickNHold\n      time={0.5} // Time to keep pressing. Default is 2\n      onClickNHold={mobile ? holdMobile : holdDesktop}\n      onEnd={mobile ? null : holdEndDesktop} >\n      <InlinableIconButton disableRipple disableFocusRipple onClick={onMuteChange} >\n        <div style={SliderStyles}>\n          <Slider\n            defaultValue={100}\n            orientation=\"vertical\"\n            aria-labelledby=\"vertical-slider\"\n            onChange={commitVolume}\n            ref={sliderRef}\n          />\n        </div>\n        <div style={IconStyles}>\n          { muted ?  <VolumeOffIcon fontSize=\"small\" />\n          : sliderValue < 10 ? <VolumeMuteIcon fontSize=\"small\" />\n          : sliderValue < 50 ? <VolumeDownIcon fontSize=\"small\" />\n                             : <VolumeUpIcon fontSize=\"small\"/> }\n        </div>\n      </InlinableIconButton>\n    </ClickNHold>\n  );\n}\n\nclass RawInstrumentEditDialog extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSymbol : null\n    };\n  }\n\n  render() {\n\n    const cancel = (e) => {\n      this.setState({currentSymbol : null});\n      if(this.props.onCancel){\n        this.props.onCancel();\n      }\n    };\n\n    const confirm = (e) => {\n      if(this.state.currentSymbol !== null && this.state.currentSymbol.length === 1)\n      {\n        if(this.props.onChange){\n          this.props.onChange(this.state.currentSymbol);\n          this.setState({currentSymbol: null});\n        }\n      }\n      else\n      {\n        // todo: prettier error communication?\n        alert(\n          \"You selected an invalid symbol \\\"\" + this.state.currentSymbol + \"\\\".\\n\" +\n          \"Symbols must be precisely 1 character.\"\n        );\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter notation symbol\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentSymbol ?? this.props.value}\n            onChange={(e)=>{this.setState({currentSymbol: e.target.value});}}\n            onKeyDown={handleEnter}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nclass InstrumentRenameDialog extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      currentName : null\n    };\n  }\n\n  render()\n  {\n\n    const cancel = () => {\n      if(this.props.onCancel)\n      {\n        this.props.onCancel();\n      }\n      this.setState({currentName: null});\n    };\n\n    const confirm = () => {\n      if(this.state.currentName !== null)\n      {\n        const instrumentName = this.state.currentName.trim();\n        if( instrumentName.length > 0 )\n        {\n          if(this.props.onChange)\n          {\n            this.props.onChange(this.state.currentName);\n          }\n          this.setState({currentName: null});\n        }\n        else\n        {\n          // todo: prettier error communication?\n          alert(\n            \"You selected an invalid instrument name \\\"\" + this.state.currentName + \"\\\".\\n\" +\n            \"Must be non-empty.\"\n          );\n        }\n      }\n      else\n      {\n        cancel();\n      }\n    };\n\n    const handleEnter = (e) =>\n    {\n      if(e.keyCode === 13)\n      {\n        e.preventDefault();\n        confirm();\n      }\n    };\n\n    return (\n      <Dialog open={this.props.open} onClose={cancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter instrument name\n          </DialogContentText>\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={this.state.currentName ?? this.props.value}\n            onChange={(e)=>{this.setState({currentName: e.target.value});}}\n            onKeyDown={handleEnter}\n            autoFocus\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={confirm} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n};\n\nfunction InstrumentTable(props)\n{\n  const classes = useStyles();\n\n  const editRow = (y)=>{ if( props.onEditRow ){ props.onEditRow(y); }};\n  const editColumn = (x)=>{ if( props.onEditColumn ){ props.onEditColumn(x); }};\n  const addRow = ()=>{ if( props.onAddRow ){ props.onAddRow(); }};\n  const removeRow = (y)=>{ if( props.onRemoveRow ){ props.onRemoveRow(y); }};\n\n  const handleChange = (x,y, event) => {\n    const instrumentID = props.instrumentIndex[x].id;\n    const oldInstrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    const dstInstrumentIndex = y;\n    if( oldInstrumentIndex === dstInstrumentIndex )\n    {\n      return;\n    }\n    const oldInstrument = props.instruments[oldInstrumentIndex];\n    let replacedSrcInstrument = [\n      \"\",\n      {}\n    ];\n    if( oldInstrument != null )\n    {\n      replacedSrcInstrument[0] = oldInstrument[0];\n      for( const key of Object.keys(oldInstrument[1]) )\n      {\n        if( key !== instrumentID.toString() )\n        {\n          replacedSrcInstrument[1][key] = oldInstrument[1][key];\n        }\n      }\n    }\n    let dstInstrument = [\n      props.instruments[dstInstrumentIndex][0],\n      Object.assign({}, props.instruments[dstInstrumentIndex][1] )\n    ];\n    if(oldInstrument != null )\n    {\n      dstInstrument[1][instrumentID.toString()] = oldInstrument[1][instrumentID];\n    }\n    else\n    {\n      dstInstrument[1][instrumentID.toString()] = \"X\";\n    }\n\n    let replacedInstruments = [];\n\n    for(let instrumentIndex = 0; instrumentIndex < props.instruments.length; ++instrumentIndex)\n    {\n      if( instrumentIndex === oldInstrumentIndex )\n      {\n        replacedInstruments.push( replacedSrcInstrument );\n      }\n      else if( instrumentIndex === dstInstrumentIndex )\n      {\n        replacedInstruments.push( dstInstrument )\n      }\n      else\n      {\n        replacedInstruments.push( props.instruments[instrumentIndex] );\n      }\n    }\n    props.onChange(replacedInstruments);\n  };\n\n  let [open, setOpen] = React.useState( false );\n\n  const createCell = (x,y) =>\n  {\n      return (\n        <TableCell\n          align=\"center\"\n          key={\"instrumentPanel-cell-\" + y.toString() + \"-\" + x.toString()}\n        >\n          <ThinFormControlLabel\n            control={<Checkbox checked={props.instrumentMask[x] === y} onChange={(e) =>{handleChange(x,y,e);}} name={x + \",\" + y.toString()} />}\n          />\n        </TableCell>\n      );\n  }\n\n  const createMatchingRow = (y) =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-\" + y.toString()}>\n          <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-\" + y.toString() + \"-name\"}>\n            <Typography>{props.instruments[y][0]}</Typography>\n            <InlinableIconButton onClick={(e)=>{editRow(y);}}><EditIcon fontSize=\"small\"/></InlinableIconButton>\n            <InlinableIconButton onClick={(e)=>{removeRow(y);}}><ClearIcon fontSize=\"small\"/></InlinableIconButton>\n          </TableCell>\n          {[...Array(props.instrumentMask.length).keys()].map(x=>createCell(x,y))}\n      </TableRow>\n    );\n  };\n\n  const createEditRow = () =>\n  {\n    return (\n      <TableRow key={\"instrumentPanel-row-edit\"}>\n        <TableCell component=\"th\" scope=\"row\" key={\"instrumentPanel-row-edit-cell\"}>\n          <IconButton onClick={(e)=>{addRow();}} aria-label=\"add\">\n            <AddBoxIcon/>\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  return (\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow key={\"instrumentPanel-row-header\"}>\n          <NoDividerCenterTableCell key={\"instrumentPanel-row-instrument\"}> Instrument </NoDividerCenterTableCell>\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <NoDividerCenterTableCell key={\"instrumentPanel-row-header-cell-\" + x.toString()}>\n                <Typography>{props.instrumentIndex[x].name}</Typography>\n              </NoDividerCenterTableCell>)}\n        </TableRow>\n        <TableRow key={\"instrumentPanel-row-controls\"}>\n          <CenterTableCell key={\"instrumentPanel-row-instrument\"}>\n            <IconButton aria-label=\"Show Instrument Matcher\" size=\"small\" onClick={() => setOpen(!open)}>\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          </CenterTableCell>\n          {[...Array(props.instrumentIndex.length).keys()].map(x=>\n              <CenterTableCell key={\"instrumentPanel-row-controls-cell-\" + x.toString()}>\n                <Grid container>\n                <Grid item xs={6}>\n                <InlinableIconButton onClick={(e)=>{editColumn(x);}}>\n                  <EditIcon fontSize=\"small\"/>\n                </InlinableIconButton>\n                </Grid>\n                <Grid item xs={6}>\n                  <VolumeWidget\n                    muted={props.instrumentIndex[x].muted}\n                    onChange={(value)=>{props.onVolumeEvent( {instrument: x, volume: value / 100.0}); }}\n                    onMuteEvent={(muted)=>{props.onVolumeEvent( {instrument: x, muted: muted})}}\n                    />\n                </Grid>\n                </Grid>\n              </CenterTableCell>)}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {open && [...Array(props.instruments.length).keys()].map(y=>createMatchingRow(y))}\n        {open && createEditRow()}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction InstrumentConfig(props) {\n  const theme = useTheme();\n  const [editingSymbol, setEditingSymbol] = React.useState(null);\n  const [renamingInstrument, setRenamingInstrument] = React.useState(null);\n\n  const removeInstrument = (y) =>\n  {\n    let replacedInstruments = props.instruments.slice(0,y).concat(props.instruments.slice(y+1));\n    props.onChange(replacedInstruments);\n  };\n\n  const getSymbol = (x) => {\n    const instrumentID = props.instrumentIndex[editingSymbol].id;\n    const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n    return props.instruments[instrumentIndex][1][instrumentID];\n  };\n\n  const endEditingSymbol = (resolvedSymbol) =>\n  {\n    if(resolvedSymbol !== null)\n    {\n      const instrumentID = props.instrumentIndex[editingSymbol].id;\n      const instrumentIndex = props.instruments.findIndex( instrument => instrumentID in instrument[1]);\n      let replacedInstruments = Array.from(props.instruments);\n      replacedInstruments[instrumentIndex][1][instrumentID] = resolvedSymbol;\n      props.onChange(replacedInstruments);\n    }\n    setEditingSymbol( null );\n  };\n\n  const getName = (y) => {\n    return y < props.instruments.length ? props.instruments[y][0] : \"\";\n  };\n\n  const renameInstrument = (instrumentName)  =>\n  {\n    // this function also deals with the addition of new instruments\n    if( renamingInstrument === props.instruments.length )\n    {\n      const extraInstrument = [ instrumentName, {} ];\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments.push(extraInstrument);\n      props.onChange(replacedInstruments);\n    }\n    else\n    {\n      let replacedInstruments = Array.from( props.instruments );\n      replacedInstruments[renamingInstrument][0] = instrumentName;\n      props.onChange(replacedInstruments);\n    }\n    setRenamingInstrument(null);\n  };\n\n  const containerStyle = {\n    \"border\": \"2px solid rgba(255, 255, 255, 0.5)\",\n    \"outline\": \"none\",\n    \"borderRadius\": \"8px\"\n  };\n  return (\n    <div style={{\"paddingBottom\" : theme.spacing(1)}}>\n      <InstrumentRenameDialog\n        open={renamingInstrument !== null}\n        onCancel={()=>{setRenamingInstrument(null);}}\n        onChange={(s)=>{renameInstrument(s);}}\n        value={renamingInstrument !== null ? getName(renamingInstrument) : \"\"}\n      />\n      <RawInstrumentEditDialog\n        open={editingSymbol !== null}\n        onCancel={()=>{endEditingSymbol(null);}}\n        onChange={(s)=>{endEditingSymbol(s);}}\n        value={editingSymbol !== null ? getSymbol(editingSymbol) : \"\"}\n        />\n      <TableContainer component={Paper} style={containerStyle}>\n        <InstrumentTable\n          instrumentIndex={props.instrumentIndex}\n          instrumentMask={props.instrumentMask}\n          instruments={props.instruments}\n          onEditColumn={(x)=>{setEditingSymbol(x);}}\n          onEditRow={(y)=>{setRenamingInstrument(y);}}\n          onAddRow={()=>{setRenamingInstrument(props.instruments.length)}}\n          onRemoveRow={(y)=>{removeInstrument(y);}}\n          onVolumeEvent={props.onVolumeEvent}\n          onChange={props.onChange}\n        />\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default React.memo( InstrumentConfig );\n","class Audio\n{\n\n  // todo: we replace a valid audioContext with a blank object, so that we can run tests in node\n  //       this should probably be replaced by https://github.com/audiojs/web-audio-api\n  //       and a test-suite written\n  static createWebContext()\n  {\n    return new (window.AudioContext || window.webkitAudioContext || Object)();\n  }\n\n  static determineMinResolution(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let minResolution = 48;\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && !t.empty()\n        )\n        {\n          minResolution = Math.min( minResolution, t.resolution );\n        }\n      }\n      return minResolution;\n  }\n\n  static determineTrackLength(\n    instrumentIndex,\n    tracks\n  )\n  {\n      let trackLength = 48;\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && !t.empty()\n        )\n        {\n          trackLength = Math.max( trackLength, t.length() );\n        }\n      }\n      return trackLength;\n  }\n\n  static peakAmplitude(\n    combined\n  )\n  {\n    let peakValue = 0.0;\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for( let sample = 0; sample < combinedChannel.length; ++sample)\n      {\n        peakValue = Math.max( Math.abs(combinedChannel[sample]), peakValue );\n      }\n    }\n    return peakValue;\n  }\n\n  static normalizeAudioBuffer(\n    combined\n  )\n  {\n    const peakValue = Audio.peakAmplitude( combined );\n    if( peakValue > 1.0 )\n    {\n      for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n        let combinedChannel = combined.getChannelData(channel);\n        for( let sample = 0; sample < combinedChannel.length; ++sample)\n        {\n          combinedChannel[sample] = combinedChannel[sample] / peakValue;\n        }\n      }\n    }\n    return combined;\n  }\n\n  static createMasterTrack(\n    context,\n    tracks,\n    instrumentIndex,\n    sounds,\n    tempo\n  )\n  {\n    const trackLength = Audio.determineTrackLength( instrumentIndex, tracks );\n\n\n    const beatTime =  (60.0 / tempo) * 1000;\n    const timePerHydrogen = beatTime / 48.0;\n\n\n    // let's assume we can do some simple things\n\n    const sampleRate = 44100;\n    const channels = 2;\n    const trackLengthMs = trackLength * timePerHydrogen;\n    const trackLengthSamples = trackLengthMs * sampleRate / 1000.0;\n    const totalSamples = Math.floor(trackLengthSamples);\n    const samplesPerHydrogen = Math.floor( totalSamples / trackLength );\n    const combined = context.createBuffer(channels, totalSamples, sampleRate);\n\n    // populate blank buffer with sounds\n    for (let channel = 0; channel < combined.numberOfChannels; channel++) {\n      let combinedChannel = combined.getChannelData(channel);\n      for(const [id,t] of Object.entries(tracks))\n      {\n        // the lookup and iteration shouldn't look like this\n        const selected =  instrumentIndex.filter(inst => inst.id.toString() === id);\n        if(\n          selected.length > 0\n          && selected[0].id in sounds\n          && !t.empty()\n        )\n        {\n          const audioBuffer = sounds[selected[0].id];\n          // fallback to copying the mono buffer across both channels\n          const audioChannel = audioBuffer.numberOfChannels === 2 ? audioBuffer.getChannelData(channel) : audioBuffer.getChannelData(0);\n          const trackPoints = t.toPoints();\n          for( const noteStart of trackPoints )\n          {\n            const sampleStart = noteStart * samplesPerHydrogen;\n            for( let sample = 0; sample < audioBuffer.length; ++sample )\n            {\n              // add sample to mega track\n              combinedChannel[sampleStart + sample] = combinedChannel[sampleStart + sample] + audioChannel[sample];\n            }\n          }\n        }\n      }\n    }\n\n    return Audio.normalizeAudioBuffer( combined );\n  }\n\n  static createAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=true;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n  static createOneShotAudioSource(context, buffer, tempo)\n  {\n    var source = context.createBufferSource();\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = buffer;\n    source.loop=false;\n    if( tempo !== null )\n    {\n      source.playbackRate.value = tempo / 100.0;\n    }\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    source.connect(context.destination);\n    return source;\n  }\n}\n\nexport default Audio;","\nimport Audio from \"./Audio\"\nimport * as Tone from \"tone\";\n\n// we schedule for a delay of 120ms to allow the audio context to catch up\nlet AUDIO_DELAY = 0.12;\n\nconst setAudioDelay = (value) => {\n  AUDIO_DELAY = value;\n};\n// these are the hydrogen drumkits available by GPL/CC\n\nconst DRUMKITS = [\n  \"circAfrique v4\",\n  \"DeathMetal\",\n  \"The Black Pearl 1.0\",\n  \"GMRockKit\",\n  \"TR808EmulationKit\"\n];\n\nconst convertNormalToAudible = (value) => {\n  // add an intuitive feel to gain values, perception of sound is non-linear\n  // https://www.dr-lex.be/info-stuff/volumecontrols.html\n  // note: I tried x^4 and I tried using tone's DB directly but neither felt very good.\n  return Math.pow(value, 2.5);\n};\n\nconst chooseAppropriateUrlForInstrument = (drumkitName, instrumentName) =>\n{\n  const name = instrumentName.toLowerCase();\n  // this is currently very basic\n  if(name.includes(\"kick\"))\n  {\n      return \"The Black Pearl 1.0/PearlKick-Hard.wav\";\n  }\n  else if(name.includes(\"stick\"))\n  {\n      return \"DeathMetal/16297_ltibbits_sticks_low_pitch.wav\";\n  }\n  else if(name.includes(\"tom\"))\n  {\n      return \"TR808EmulationKit/808_Tom_Mid.wav\"\n  }\n  else if(name.includes(\"clap\"))\n  {\n      return \"TR808EmulationKit/808_Clap.wav\";\n  }\n  else if(name.includes(\"snare\"))\n  {\n    return \"GMRockKit/Snare-Soft.wav\";\n  }\n  else if(name.includes(\"cowbell\"))\n  {\n    return \"GMRockKit/Cowbell-Softest.wav\";\n  }\n  else\n  {\n    // todo: snare, cymbals\n    return null;\n  }\n}\n\nconst createSequenceCallback = (pattern, sampleSource) =>\n{\n  let samplesReady = sampleSource.samplesReady();\n  const sequenceCallback = (time, indexFromStart) =>\n  {\n    // if we don't know samples are ready,\n    if(!samplesReady)\n    {\n      // update our knowledge, and early out if needed\n      samplesReady = sampleSource.samplesReady();\n      if(!samplesReady){ return; }\n    }\n    const trackLengthRes = ( pattern.length / pattern.resolution );\n    const index = indexFromStart % trackLengthRes;\n    for(const [id,t] of Object.entries(pattern.tracks))\n    {\n        if( t.rep[index] )\n        {\n          const sampleData = sampleSource.samples[id];\n          if( sampleData !== undefined )\n          {\n            sampleData.player.stop(time + AUDIO_DELAY);\n            sampleData.player.start(time + AUDIO_DELAY);\n          }\n        }\n    }\n    if(sampleSource.onPatternTimeChange)\n    {\n      Tone.getDraw().schedule(\n        ()=>{\n          if(Tone.getTransport().state === \"started\")\n          {\n            const notePosition = (index * pattern.resolution) % pattern.length;\n            sampleSource.onPatternTimeChange(notePosition);\n          }\n        },\n        time + AUDIO_DELAY\n      );\n    }\n  };\n  return sequenceCallback;\n};\n\nconst createSortedUnique = (failures) =>\n{\n  let sortedFailures = [];\n  for( const [drumkit, name] of failures )\n  {\n    let noMatch = true;\n    for( const [otherDrumkit, otherName] of sortedFailures )\n    {\n      if( drumkit === otherDrumkit && name === otherName )\n      {\n        noMatch = false;\n        break;\n      }\n    }\n    if( noMatch )\n    {\n      sortedFailures.push( [drumkit, name] );\n    }\n  }\n  sortedFailures.sort();\n  return sortedFailures;\n}\n\nclass ToneController\n{\n  constructor(\n    instrumentIndex,\n    patterns,\n    tempo,\n    onTimeChange,\n    latencyHint,\n    onLoadError\n  )\n  {\n\n    if(latencyHint && Tone.context.latencyHint !== latencyHint)\n    {\n      let context = new Tone.Context({latencyHint: latencyHint});\n      Tone.setContext(context);\n    }\n\n    // also configure a larger audio delay, if we're being requested to\n    // prioritise playback over latency\n    if(latencyHint === \"playback\")\n    {\n      // value in seconds (relatively arbitrary)\n      setAudioDelay(0.35)\n    }\n    else\n    {\n      setAudioDelay(0.12);\n    }\n\n    // this thing has a lot of state, eh?\n    // would love if this state was a bit more structured\n    this.samples = {};\n    this.currentPattern = null;\n    this.gain = new Tone.Gain();\n    this.gain.toDestination();\n    this.onPatternTimeChange = onTimeChange;\n    Tone.getTransport().bpm.value = tempo;\n    Tone.getTransport().loop = true;\n\n    this.sampleCount = 0;\n    this.expectedSampleCount = 0;\n    this.patternDetails = {};\n    let failures = []\n    for( let p of patterns )\n    {\n      this.patternDetails[p.name] = {\n        resolution: Audio.determineMinResolution(instrumentIndex, p.instrumentTracks ),\n        length : Audio.determineTrackLength(instrumentIndex, p.instrumentTracks ),\n        name: p.name,\n        tracks: p.instrumentTracks,\n        pattern: p\n      };\n      this.populateSamples(instrumentIndex, p.instrumentTracks, failures);\n    }\n    this.currentPatternName = null;\n    this.instrumentIndex = instrumentIndex;\n\n    if(failures.length > 0)\n    {\n      const sortedFailures = createSortedUnique(failures);\n      const plural = sortedFailures.length > 1 ;\n      const s = plural ? \"s\" : \"\";\n      let message = \"Failed to load sample\" + s + \" for instrument\" + s + \": \" + (plural ? \"{\" : \"\");\n      for( let failureIndex = 0; failureIndex < sortedFailures.length; ++failureIndex )\n      {\n        const [drumkit, name] = sortedFailures[failureIndex];\n        message += name;\n        if( drumkit !== \"\" ){ message += \" (\" + drumkit + \")\"; }\n        if(failureIndex !== sortedFailures.length - 1){ message += \", \"; }\n        else{ message += (plural ? \"}\" : \"\") + \".\" }\n      }\n      message += \"\\n\" +\n       \"tabit's supported drumkits are \" + DRUMKITS.join( \", \" ) + \".\";\n\n      if(onLoadError)\n      {\n        onLoadError(message);\n      }\n    }\n  }\n\n  teardown()\n  {\n    this.stop();\n    // cancel all future events\n    // note: it's unclear if this will appropriately dispose of all sequences & samples\n    // so this may be a performance problem in the long term\n    Tone.getTransport().cancel();\n  }\n\n  samplesReady()\n  {\n    return this.sampleCount === this.expectedSampleCount;\n  }\n\n  populateSamples(instrumentIndex, tracks, failures)\n  {\n    this.sampleCount = 0;\n    for(const [id,] of Object.entries(tracks))\n    {\n      const selected = instrumentIndex.filter(inst => inst.id.toString() === id);\n      if( selected.length > 0)\n      {\n        const selectedInstrument = selected[0];\n        const clampedVolume = convertNormalToAudible( Math.min( Math.max( 0.0 , selectedInstrument.volume ), 1.0 ) );\n        if( selectedInstrument.id in this.samples )\n        {\n          continue;\n        }\n        if(\n          \"drumkit\" in selectedInstrument &&\n          \"filename\" in selectedInstrument &&\n          DRUMKITS.includes(selectedInstrument.drumkit) )\n        {\n          const filename = selectedInstrument.filename.replace(\".flac\", \".wav\");\n          let player = new Tone.Player(\n            process.env.PUBLIC_URL + \"/wav/\" + selectedInstrument.drumkit + \"/\" + filename,\n            () => { this.sampleCount++; }\n          );\n          player.mute = selectedInstrument.muted;\n          player.name = selectedInstrument.name;\n          const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n          player.connect(gain)\n          gain.connect(this.gain);\n          this.samples[selectedInstrument.id] = { player : player, gain : gain }\n          this.expectedSampleCount++;\n        }\n        else if( \"drumkit\" in selectedInstrument )\n        {\n          const relativeUrl = chooseAppropriateUrlForInstrument( selectedInstrument.drumkit, selectedInstrument.name );\n          if(relativeUrl !== null)\n          {\n            let player = new Tone.Player(\n              process.env.PUBLIC_URL + \"/wav/\" + relativeUrl,\n              () => { this.sampleCount++; }\n            );\n            player.mute = selectedInstrument.muted;\n            player.name = selectedInstrument.name;\n            const gain = new Tone.Gain(clampedVolume, \"normalRange\");\n            player.connect(gain);\n            gain.connect(this.gain);\n            this.samples[selectedInstrument.id] = { player : player, gain : gain }\n            this.expectedSampleCount++;\n          }\n          else\n          {\n            failures.push( [selectedInstrument.drumkit, selectedInstrument.name] );\n          }\n        }\n        else\n        {\n            failures.push( [\"\", selectedInstrument.name] );\n        }\n      }\n    }\n  }\n\n  createSequenceForPattern(instrumentIndex, pattern)\n  {\n      const patternResolution = this.patternDetails[pattern.name].resolution;\n      const patternLength = this.patternDetails[pattern.name].length;\n      const callback = createSequenceCallback(\n        this.patternDetails[pattern.name],\n        this\n      );\n      let seq = new Tone.Sequence(\n        callback,\n        [...Array(patternLength / patternResolution).keys()],\n        Tone.Time(\"4n\") * ( patternResolution / 48.0 )\n      );\n      // start the sequence, but the ticks won't be triggered when muted\n      // note: setting mute on the sequence directly seems to have no effect\n      seq._part.mute = true;\n      seq.start(0);\n      return seq;\n  }\n\n  createSequences(instrumentIndex, patterns)\n  {\n    let sequences = {};\n    for( let p of patterns )\n    {\n      sequences[p.name] = this.createSequenceForPattern(instrumentIndex, p);\n    }\n    return sequences;\n  }\n\n  setActivePattern( patternName )\n  {\n    const oldPatternName = this.currentPatternName !== null ? this.currentPatternName : null;\n    const length = this.patternDetails[patternName].length;\n    const oldLength = oldPatternName !== null ? this.patternDetails[oldPatternName] : null\n\n    // TODO: Since introducing a scheduling delay, this fudge factor is less reliable\n    // Particularly, the transition gets queued but the first beat is a little sloppy\n    // it's possible the whole transition functor needs to be faster\n\n    // we have a little fudge in here... if we're transitioning from a 4 beat loop\n    // to an 8 beat pattern ... we probably really wanted to hit the start of that pattern,\n    // not to transition at 3.75 beats and play the latter half\n    const timeFromBarEnd = Tone.getTransport().loopEnd - ( Tone.getTransport().toSeconds(Tone.getTransport().position) - AUDIO_DELAY );\n\n    const queueTransition = oldPatternName !== null\n    && Tone.getTransport().state === \"started\"\n    && ( timeFromBarEnd > 0 && timeFromBarEnd < Tone.getTransport().toSeconds(Tone.Time(\"8n\")));\n\n    // create this before starting the \"transaction\"\n    const nextSequence = this.createSequenceForPattern(this.instrumentIndex, this.patternDetails[patternName].pattern);\n\n    const enableNewTrack = (time) => {\n      if(oldPatternName !== null)\n      {\n        // note: setting mute on the sequence directly seems to have no effect\n        this.sequence._part.mute = true;\n      }\n      if(oldPatternName === null || oldLength !== length )\n      {\n\n        Tone.getTransport().setLoopPoints(0, Tone.Time(\"4n\") * (length / 48.0));\n      }\n      this.sequence = nextSequence;\n      this.sequence._part.mute = false;\n      this.currentPatternName = patternName;\n    };\n\n    if( queueTransition ) {\n      Tone.getTransport().scheduleOnce(\n        enableNewTrack,\n        Tone.Time(\"0\")\n      );\n    }\n    else\n    {\n      enableNewTrack();\n    }\n  }\n\n  play()\n  {\n    // Tone.start is needed to be triggered from a user interaction\n    // (web-audio-context policy of not playing until a user interaction)\n    Tone.start().then(()=>{Tone.getTransport().start();});\n  }\n\n  stop()\n  {\n    // it's slightly unclear what the synchronisation semantics of this Tone.getTransport().stop() call are.\n    // If a tick is currently in flight on Tone.getTransport() we have to ensure that\n    // the reset of patternTime occurs *afterwards*.\n    // The below calls seem to work for this, but I couldn't tell you why.\n    if( Tone.getTransport().state === \"started\")\n    {\n      Tone.getTransport().stop();\n      if( this.onPatternTimeChange )\n      {\n        Tone.getDraw().schedule(\n          ()=>{\n            this.onPatternTimeChange( null );\n          },\n          Tone.getTransport().now()\n        );\n      }\n    }\n  }\n\n  setMutedForInstrument(instrumentID, muted)\n  {\n    this.samples[instrumentID].player.mute = muted;\n  }\n\n  setVolumeForInstrument(instrumentID, volume)\n  {\n    this.samples[instrumentID].gain.set( {gain : convertNormalToAudible(volume) } );\n  }\n\n  setTempo(tempo)\n  {\n    Tone.getTransport().bpm.value = tempo;\n  }\n};\n\n\n\nexport default ToneController;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport copy from \"copy-to-clipboard\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n\nfunction SharingDialog(props)\n{\n  return <Dialog\n    open={props.open}\n    onClose={props.onClose}\n    aria-labelledby=\"sharing-dialog\"\n    aria-describedby=\"sharing-dialog\"\n  >\n    <DialogContent>\n      <DialogContentText>\n      Your song is available at\n      </DialogContentText>\n      <DialogContentText>\n      {props.url}\n      <IconButton onClick={(e)=>{ copy(props.url); }}>\n        <FileCopyIcon />\n      </IconButton>\n      </DialogContentText>\n      <DialogActions>\n        <Button onClick={props.onClose}>\n          Close\n        </Button>\n      </DialogActions>\n    </DialogContent>\n  </Dialog>\n}\n\nSharingDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  url: PropTypes.string\n}\n\nexport default React.memo(SharingDialog);\n","import React from 'react';\nimport Pattern from \"./Pattern\";\nimport PlaybackControls from \"./PlaybackControls\";\nimport {DefaultSettings} from \"./formatSettings\";\nimport notation from \"./notation\";\nimport InstrumentConfig from \"./instrumentConfig\";\nimport { createInstrumentMask } from \"./instrumentation\";\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TabitBar from \"./TabitBar\";\nimport PatternDrawer from \"./PatternDrawer\"\nimport ToneController from \"./ToneController\"\nimport SettingsDrawer from \"./SettingsDrawer\"\nimport { isMobile } from \"./Mobile\";\nimport SharingDialog from \"./SharingDialog\";\nimport Toolbar from '@material-ui/core/Toolbar';\n// todo: pass the needed .put function via a prop?\nimport * as SongStorage from \"./SongStorage\";\nimport memoizeOne from 'memoize-one';\n\nconst figurePatternSettings = (patterns)=>{\n  return Array.from(\n    patterns,\n    (p) => notation.guessPerPatternSettings( p.instrumentTracks )\n  );\n};\n\nconst makeResolvedSettings = memoizeOne( (globalSettings, patternSettings) => {\n  let resolvedSettings = Object.assign({}, globalSettings);\n  if(patternSettings)\n  {\n    resolvedSettings = Object.assign(resolvedSettings, patternSettings);\n  }\n  return resolvedSettings;\n});\n\nclass SongView extends React.Component\n{\n  state = {\n    selectedPattern: 0,\n    patternSettings: this.props.songData ? figurePatternSettings(this.props.songData.patterns) : null,\n    formatSettings: Object.assign({}, DefaultSettings),\n    songData: Object.assign({},this.props.songData),\n    settingsOpen: false,\n    patternsOpen: true,\n    sharingDialogOpen: false,\n    patternTime: null,\n    errorAlert: null\n  }\n\n  componentDidMount()\n  {\n    const latencyHint = isMobile() ? \"playback\" : null;\n    const animateCallback = (time)=>{\n      const nullCheck = (this.state.patternTime === null) !== (time === null);\n      const currentBeatResolution = this.state.patternSettings[this.state.selectedPattern].beatResolution;\n      const currentBeat = Math.floor(this.state.patternTime / currentBeatResolution);\n      const nextBeat =  Math.floor(time / currentBeatResolution);\n      if( nullCheck || currentBeat !== nextBeat )\n      {\n        this.setState( {patternTime: time} )\n      }\n    };\n    // always default tempo to 100bpm for now\n    this.audio = new ToneController(\n      this.state.songData.instrumentIndex,\n      this.state.songData.patterns,\n      100.0,\n      animateCallback,\n      latencyHint,\n      (errorMessage)=>{this.setState({errorAlert: errorMessage})}\n    );\n    this.audio.setActivePattern( this.state.songData.patterns[this.state.selectedPattern].name );\n    // save our work when we navigate away via tab-close\n    window.addEventListener('beforeunload', this.onSave);\n  }\n\n  componentWillUnmount()\n  {\n    // save our work, as we may be about to navigate away somewhere else in tabit\n    this.onSave();\n    window.removeEventListener('beforeunload', this.onSave);\n    if( this.audio )\n    {\n      this.audio.teardown();\n      delete this.audio;\n    }\n  }\n\n  getExportState()\n  {\n    return {\n      instruments : this.state.songData.instruments,\n      instrumentIndex : this.state.songData.instrumentIndex,\n      patterns : this.state.songData.patterns,\n      songName: this.state.songData.title,\n      formatSettings: this.state.formatSettings,\n      patternSettings : this.state.patternSettings,\n      version: \"1.1.0\"\n    };\n  }\n\n  // note these functions could cleanly be locally defined\n  // but react gives better performance by not doing this, sadly\n  changeInstruments = (instruments) =>\n  {\n    let songData = Object.assign({}, this.state.songData);\n    songData.instruments = instruments;\n    songData.instrumentMask = createInstrumentMask(this.state.songData.instrumentIndex, instruments);\n    this.setState( {\n      songData: songData\n    } );\n  }\n\n  sendVolumeEvent = (event) =>\n  {\n    if(\"volume\" in event)\n    {\n      const instrumentID = this.state.songData.instrumentIndex[ event.instrument ].id;\n      if(this.audio){ this.audio.setVolumeForInstrument( instrumentID, event.volume ); }\n    }\n    else if(\"muted\" in event)\n    {\n      const instrumentID = this.state.songData.instrumentIndex[ event.instrument ].id;\n      if(this.audio){ this.audio.setMutedForInstrument( instrumentID, event.muted ); }\n    }\n  }\n\n  handleSettingsChange = (change) =>\n  {\n    // change returns an object with .key, .value and .local\n    if(change.local)\n    {\n      const updateState = (state) => {\n        const modifiedSettings = state.patternSettings.map( (settings, index) => {\n          if(index !== state.selectedPattern){ return settings; }\n          else {\n            return Object.assign(\n              {},\n              state.patternSettings[state.selectedPattern],\n              {[change.key]: change.value}\n            );\n          }\n        });\n        return {patternSettings: modifiedSettings};\n      };\n      this.setState(updateState);\n    }\n    else\n    {\n      const updatedSettings = Object.assign(\n        {},\n        this.state.formatSettings,\n        {[change.key]: change.value}\n      );\n      this.setState(\n        {formatSettings: updatedSettings}\n      )\n    }\n  };\n\n  handlePatternsToggle = (e) => {\n    this.setState( { patternsOpen : !this.state.patternsOpen } );\n  };\n\n  handleSettingsToggle = (e) => {\n    this.setState( { settingsOpen : !this.state.settingsOpen } );\n  };\n\n  selectPattern = (patternIndex) =>\n  {\n    // it's important to do this before we re-render components\n    if(this.audio)\n    {\n      this.audio.setActivePattern(\n        this.state.songData.patterns[patternIndex].name\n      );\n    }\n\n    this.setState(\n      { selectedPattern: patternIndex }\n    );\n  };\n\n  onShare = () => {\n    SongStorage.put(this.getExportState())\n      .then(songID =>{\n        const permanentUrl = window.origin + process.env.PUBLIC_URL + \"/song/\" + songID;\n        this.setState({permanentUrl: permanentUrl, sharingDialogOpen: true});\n      })\n      .catch((err)=>{alert(\"Couldn't contact external server at this time.\")});\n  };\n\n  onDownload = () => {\n    SongStorage.download(this.getExportState())\n  }\n\n  onSave = () => {\n    SongStorage.saveToLocalHistory(this.getExportState());\n  }\n\n  handleSettingsToggle = (e)=>{\n    this.setState({settingsOpen: !this.state.settingsOpen});\n  }\n\n  handlePatternsToggle = (e)=>{\n    this.setState({patternsOpen: !this.state.patternsOpen})\n  }\n\n  closeSharingDialog = ()=>{\n    this.setState({sharingDialogOpen:false});\n  }\n\n  onPlay = () => {\n    if(this.audio){ this.audio.play(); }\n  }\n\n  onStop = () => {\n    if(this.audio){ this.audio.stop(); }\n  }\n\n  onSetTempo = (tempo) => {\n    if(this.audio){ this.audio.setTempo(tempo); }\n  }\n\n  render()\n  {\n    const pattern = this.state.songData.patterns[\n      this.state.selectedPattern\n    ];\n    const patternSpecifics = ( this.state.songData && this.state.patternSettings) ? this.state.patternSettings[this.state.selectedPattern] : null;\n    const resolvedSettings = makeResolvedSettings( this.state.formatSettings, patternSpecifics );\n    const mobile = isMobile();\n    const instrumentConfigColumns = mobile ? 12 : 8;\n    // todo: make this Toolbar unnecessary, it ensures pattern renders in the right place right now\n\n    return (\n      <div className=\"App\">\n        <Toolbar variant=\"dense\"/>\n        <TabitBar\n          title={this.state.songData.title}\n          settingsToggle={this.handleSettingsToggle}\n          patternsToggle={this.handlePatternsToggle}\n          onDownload={this.onDownload}\n          onShare={this.onShare}\n        />\n        {this.state.errorAlert &&\n        <Snackbar severity=\"error\" open={true} autoHideDuration={5000} onClose={() => {this.setState({errorAlert: null})}}>\n          <Alert severity=\"error\"  onClose={() => {this.setState({errorAlert: null})}}>\n            <AlertTitle>Error Loading Samples</AlertTitle>\n            <Box>\n            {this.state.errorAlert.split(\"\\n\").map(line=><Box>{line}</Box>)}\n            </Box>\n          </Alert>\n        </Snackbar>\n        }\n        <div style={{display: \"flex\", flexGrow : 1}} />\n        <Pattern\n          instruments={this.state.songData.instruments}\n          tracks={pattern.instrumentTracks}\n          config={resolvedSettings}\n          patternTime={this.state.patternTime}\n        />\n        <div style={{display: \"flex\", flexGrow : 1}} />\n        <PlaybackControls\n          onPlay={this.onPlay}\n          onStop={this.onStop}\n          onTempoChange={this.onSetTempo}\n        />\n        <Grid container>\n        {instrumentConfigColumns < 12 ? <Grid item xs={(12 - instrumentConfigColumns) / 2} /> : null}\n        <Grid item xs={instrumentConfigColumns}>\n        <InstrumentConfig\n            instruments={this.state.songData.instruments}\n            instrumentIndex={this.state.songData.instrumentIndex}\n            instrumentMask={this.state.songData.instrumentMask}\n            onChange={this.changeInstruments}\n            onVolumeEvent={this.sendVolumeEvent}\n          />\n        </Grid>\n        {instrumentConfigColumns < 12 ? <Grid item xs={(12 - instrumentConfigColumns) / 2} /> : null}\n        </Grid>\n        <PatternDrawer\n          open={this.state.patternsOpen}\n          onOpen={this.handlePatternsToggle}\n          onClose={this.handlePatternsToggle}\n          patterns={this.state.songData.patterns}\n          selectPattern={this.selectPattern}\n        />\n        <SettingsDrawer\n          open={this.state.settingsOpen}\n          onOpen={this.handleSettingsToggle}\n          onClose={this.handleSettingsToggle}\n          anchor=\"right\"\n          pattern={pattern}\n          settings={resolvedSettings}\n          onChange={this.handleSettingsChange}\n         />\n         <SharingDialog\n          open={this.state.sharingDialogOpen}\n          onClose={this.closeSharingDialog}\n          url={this.state.permanentUrl}\n          />\n      </div>\n    );\n  }\n};\n\nexport default SongView;\n","// h2.js\n\nimport track from \"./track\";\nimport xml2js from \"xml2js\";\nimport { calculateResolution } from \"./utilities\";\n\n// TODO: This file was written with the hope that using xml2js would make things cleaner\n// it didn't, purely because xml2js is an okay library doing a difficult task\n// it ensures to produce a good json file but in doing so muddles the data a bit.\n// Should replace this with dom-parser and window.DOMParser\n\n// let's think about the data representation needed\n\nfunction calculatePatternResolution(pattern, size)\n{\n  const positions = Array.from(pattern.notes, note => note.position)\n  return calculateResolution(positions, size);\n}\n\nfunction parseHydrogenJs(result)\n{\n    // fixme:\n    // this parsing often assumes there's >=2 elements\n\n    // this \"zero\" here is presumably an artefact of xml --> json representation\n    const instrumentElements = result.song.instrumentList[0].instrument;\n\n    // instruments\n    // [  { id, name } ]\n    const instrumentArray = Array.from(\n      instrumentElements,\n      function(element){\n        const instrumentComponent = element.instrumentComponent[0];\n        let inst = {\n          \"id\" : parseInt(element.id),\n          \"name\" : element.name[0],\n           \"volume\" : parseFloat(element.volume),\n           \"muted\" : element.isMuted[0] === \"true\",\n           \"gain\" : parseFloat(element.gain),\n           \"drumkit\" : element.drumkit[0]\n        };\n        if( \"layer\" in instrumentComponent )\n        {\n          inst[\"filename\"] = instrumentComponent.layer[0].filename[0];\n        }\n        return inst;\n      }\n    );\n\n    const patternElements = result.song.patternList[0].pattern;\n    // patterns\n    // [  { name, size, notes } ]\n    const patternArray = Array.from(\n      patternElements,\n      function(element){\n        const noteElements = element.noteList[0].note;\n        const patternSize = parseInt(element.size);\n        let notes = [];\n        if( noteElements )\n        {\n          // notes\n          // [ {position, instrument(id}]\n          notes = Array.from(\n            noteElements,\n            function(noteElement){\n              return {\"position\" : parseInt(noteElement.position), \"instrument\" : parseInt(noteElement.instrument)};\n            }\n          );\n\n          // hydrogen permits you to have notes that reach past the pattern size,\n          // they then get revealed when you extend the pattern,\n          // here's an easy point to get rid of them, we don't want them to factor into any calculations\n          notes = notes.filter( n => n.position < patternSize );\n        }\n        return {\n          \"size\" : patternSize,\n          \"name\" : element.name[0],\n          \"notes\" : notes\n        };\n      }\n    );\n\n    // transform pattern to a managable data\n    const patternsWithTracks = Array.from(\n      patternArray,\n      function(pattern)\n      {\n        const resolution = calculatePatternResolution(pattern, pattern.size);\n        let instrumentTracks = {};\n        for( const instrument of instrumentArray )\n        {\n          const relevantNotes = pattern.notes.filter(\n            note => (note.instrument === instrument.id)\n          );\n          const relevantHits = Array.from(\n            relevantNotes,\n            note => note.position\n          );\n          instrumentTracks[ instrument.id.toString() ] = track.fromPositions( relevantHits, pattern.size, resolution);\n        }\n        pattern.resolution = resolution;\n        pattern.instrumentTracks = instrumentTracks;\n        return pattern;\n      }\n    );\n\n    // todo: refactor into (at least one) separate function\n    if(result.song.virtualPatternList)\n    {\n      // so unfortunately, virtualPatternGroup represents a directional graph and we have to build\n      // the tree of dependencies for each node, we implement this in a very simplistic way\n      // let's build a mapping( name -> [ names ] ) and continue to resolve it\n      // until we're done\n      const virtualPatternGroups = result.song.virtualPatternList[0].pattern;\n      if( virtualPatternGroups )\n      {\n        // each element looks like\n        //\n        // <pattern>\n        // <name>p2-a-djembe</name>\n        // <virtual>p2-a-bass</virtual>\n        // <virtual>p2-snare</virtual>\n        // </pattern>\n\n        let patternToRelated = {};\n\n        // record initial relations\n        for( const virtualGroup of Array.from(virtualPatternGroups) )\n        {\n          const rootPatternName = virtualGroup.name[0];\n          const relatedPatterns = Array.from(virtualGroup.virtual);\n          patternToRelated[rootPatternName] = new Set(relatedPatterns);\n        }\n\n        // expand connections until our object stops changing, brute-force\n        // this is a relatively large limit but is better than the potential of an infinite loop\n        // I think 3 layers would be pushing this feature\n        const MAX_ITERATIONS = 20;\n        for(let iteration = 0; iteration < MAX_ITERATIONS; ++iteration)\n        {\n          let expandedObject = {};\n          // we could do a check at the end of each loop, but it's easier to track object equality this way\n          let objectHasExpanded = false;\n          for(const [root, related] of Object.entries(patternToRelated))\n          {\n            let expandedNodeSet = new Set(related);\n            for( const node of expandedNodeSet )\n            {\n              if( node in patternToRelated )\n              {\n                // set union\n                expandedNodeSet = new Set([...expandedNodeSet, ...patternToRelated[node]]);\n              }\n            }\n            objectHasExpanded = objectHasExpanded || ( expandedNodeSet.size !== related.size );\n            expandedObject[ root ] = expandedNodeSet;\n\n          }\n          // exit if no change\n          if(!objectHasExpanded)\n          {\n            break;\n          }\n          // throw if we've failed to resolve all the connections by now, morelikely something has gone wrong\n          if( iteration === MAX_ITERATIONS )\n          {\n            throw new Error(\"Reached max virtual_pattern recursion depth.\");\n          }\n          // otherwise update mapping and continue\n          patternToRelated = expandedObject;\n        }\n\n        for( const [rootPatternName, relatedPatternSet] of Object.entries(patternToRelated) )\n        {\n          // could do filter, and assert on length?\n          let rootPattern = patternsWithTracks.find(p => p.name === rootPatternName);\n          for( const patternToMergeName of relatedPatternSet )\n          {\n            const patternToMerge = patternsWithTracks.find(p => p.name === patternToMergeName );\n            for( const [id, t] of Object.entries(patternToMerge.instrumentTracks) )\n            {\n              if( id in rootPattern.instrumentTracks )\n              {\n                const merged = rootPattern.instrumentTracks[ id ].aggregate( t );\n                // we match hydrogen's implementation here and discard values past the length of the original track\n                merged.rep.length = rootPattern.size  / merged.resolution;\n                rootPattern.instrumentTracks[ id ] = merged;\n              }\n              else\n              {\n                // ensure track is the appropriate length & res\n                let copiedTrack = t.format(rootPattern.resolution);\n                copiedTrack.length = rootPattern.size  / rootPattern.resolution;\n                rootPattern.instrumentTracks[id] = copiedTrack;\n              }\n            }\n          }\n          // reassess resolution and apply to all tracks\n          // this may not be necessary but it's probably nice\n          const resolution = calculatePatternResolution(rootPattern, rootPattern.size);\n          rootPattern.resolution = resolution;\n          for( const [id, track] of Object.entries(rootPattern.instrumentTracks) )\n          {\n            // ensure that\n            rootPattern[id] = track.format( resolution );\n          }\n        }\n\n      }\n    }\n\n    return {\n      \"instruments\" : instrumentArray,\n      \"patterns\" : patternsWithTracks\n    }\n}\n\nasync function parseHydrogenPromise(xmlString)\n{\n  let parser = new xml2js.Parser();\n\n  return parser.parseStringPromise(xmlString).then(parseHydrogenJs);\n}\n\nconst moduleExports = { parseHydrogenPromise };\n\nexport default moduleExports;\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport SongLoaders from \"./SongLoaders\"\nimport * as SongStorage from \"./SongStorage\";\nimport SongView from \"./SongView\"\nimport {decodeState} from \"./SongStorage\";\nimport hash from \"object-hash\";\nimport h2 from \"./h2\"\n\nfunction WaitingMessage(props)\n{\n  return (\n    <div className=\"App\">\n      <div>\n        <CircularProgress color=\"secondary\"/>\n        <Typography> Loading song... </Typography>\n      </div>\n    </div>\n  );\n}\n\nclass ExampleSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load example data. \" +\n        \"This likely represents a bug - please raise an issue in github!\"\n      });\n    };\n    SongLoaders.LoadExample().then(\n      (songData) => {\n        this.setState(\n          { songData : songData }\n        );\n      }\n    ).catch(navigateHomeWithError);\n  }\n\n  render()\n  {\n    return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\nfunction SongNameFromFile(filename)\n{\n  if(filename === null || filename === undefined)\n  {\n    return null;\n  }\n  if( filename.includes(\".\") )\n  {\n    const songTitle = filename.split('.').slice(0, -1).join('.');\n    return songTitle;\n  }\n  else\n  {\n    return filename;\n  }\n}\n\nclass FileImportSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n    if(!this.props.filename)\n    {\n      // silently navigate home\n      let history = this.props.history;\n      history.push({pathname: '/'});\n      return;\n    }\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load \" + this.props.filename + \". \" +\n        \"If you're sure this is a Hydrogen file, please consider raising an issue in github!\"\n      });\n    };\n    if(this.props.filename.includes(\"h2song\"))\n    {\n      // assume it's a tabit file!\n        h2.parseHydrogenPromise(this.props.content)\n          .then(h => {\n            return SongLoaders.LoadJSON(\n              h,\n              SongNameFromFile(this.props.filename),\n              this.props.filename,\n              true // fromHydrogen\n            );\n          })\n          .then(setState)\n          .catch(navigateHomeWithError);\n    }\n    else\n    {\n      Promise.resolve(this.props.content)\n        .then((content)=>{\n          // in the case of localStorage API content will be an object already\n          return typeof(content) === \"string\" ? JSON.parse(content) : content;\n        })\n        .then( data => {\n          return SongLoaders.LoadJSON(\n            data,\n            data.songName ? data.songName : SongNameFromFile(this.props.filename),\n            this.props.filename,\n            false // fromHydrogen\n          );\n        } )\n        .then(setState)\n        .catch(navigateHomeWithError);\n    }\n  }\n\n  render()\n  {\n    return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\n\nclass SongStorageSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load song \" + this.props.songID + \" from database. \" +\n        \"This could represent a corrupted entry/a bug in our software. Please consider raising an issue in github!\"\n      });\n    };\n    SongStorage.get(this.props.songID)\n      .then( data => {\n        return SongLoaders.LoadJSON(\n          data,\n          data.songName,\n          data.loadedFile,\n          false // fromHydrogen\n        );\n      } )\n      .then(setState)\n      .catch(navigateHomeWithError);\n  }\n\n  render()\n  {\n    return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                               : <WaitingMessage />;\n  }\n};\n\nclass LocalStorageSongView extends React.Component\n{\n  state = {\n    songData: null\n  }\n\n  componentDidMount()\n  {\n    const navigateHomeWithError = (err) => {\n      let history = this.props.history;\n      history.push({\n        pathname: '/',\n        error: \"Failed to load recently viewed song \" + this.props.name + \". \"\n      });\n    };\n    const setState = (songData) => {\n      this.setState(\n        { songData : songData }\n      );\n    };\n\n    const history = SongStorage.getLocalHistory();\n    const matches = history.filter( song => ( song.id === this.props.songID ) );\n    if(matches.length < 1)\n    {\n      // provide no error message, its not currently logged\n      navigateHomeWithError();\n    }\n\n    Promise.resolve(matches[0])\n      .then( (song)=>{\n        const stateHash = hash(song.content);\n        if( stateHash !== this.props.songID )\n        {\n          throw new Error(\"Hash did not match\");\n        }\n        const decodedState = decodeState(song.content);\n        return decodedState;\n      }).then( data => {\n        return SongLoaders.LoadJSON(\n          data,\n          data.songName,\n          data.songName,\n          false // fromHydrogen\n        );\n      }).then(setState)\n      .catch(navigateHomeWithError);\n    }\n\n    render()\n    {\n      return this.state.songData ? <SongView songData={this.state.songData} key={this.state.songData}/>\n                                 : <WaitingMessage />;\n    }\n}\n\nexport {\n  ExampleSongView,\n  FileImportSongView,\n  SongStorageSongView,\n  LocalStorageSongView\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport TitleScreen from \"./TitleScreen\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport * as SongStorage from \"./SongStorage\";\nimport {\n  ExampleSongView,\n  FileImportSongView,\n  SongStorageSongView,\n  LocalStorageSongView\n} from \"./LazySongViews\";\n\nexport default function Routes(props) {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = responsiveFontSizes( React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: '#d7ccc8'\n          },\n          secondary: {\n            main: '#00acc1'\n          }\n        },\n      }),\n    [prefersDarkMode]\n  ) );\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props)=>{\n              return <TitleScreen\n                history={props.history}\n                location={props.location}\n                songHistory={SongStorage.getLocalHistory()}\n                error={props.location.error}\n              />\n            }}\n          />\n          <Route\n            exact\n            path=\"/example\"\n            render={(props)=>{\n              return <ExampleSongView\n                history={props.history}\n                location={props.location}\n              />\n            }}\n          />\n          <Route\n            path=\"/song/:songID\"\n            render={(props)=>{\n              return <SongStorageSongView\n                history={props.history}\n                location={props.location}\n                songID={props.match.params.songID}\n              />\n            }}\n          />\n          <Route\n            path=\"/import\"\n            render={(props)=>{\n              return <FileImportSongView\n                history={props.history}\n                location={props.location}\n                filename={props.location.filename}\n                content={props.location.content}\n              />\n            }}\n          />\n          <Route\n            path=\"/recent/:songID\"\n            render={(props)=>{\n              return <LocalStorageSongView\n                history={props.history}\n                location={props.location}\n                songID={props.match.params.songID}\n              />\n            }}\n          />\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  )\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import hash from \"object-hash\";\nimport zlib from \"zlib\";\nimport { saveAs } from 'file-saver';\n\nconst storageAvailable = (type) => {\n    // this is code copied from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage;\n    try {\n        storage = window[type];\n        let x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch(e) {\n    // accept certain types of exceptions as legitimate consequences of the feature working\n        return e instanceof DOMException && (\n            // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n};\n\nconst encodeState = (songData) =>\n{\n  // json\n  const js = JSON.stringify(songData);\n  // compress\n  const compressedState = zlib.deflateSync(js).toString(\"base64\");\n  return { state : compressedState };\n}\n\nconst decodeState = (state) =>\n{\n  const binaryBuffer = new Buffer(state.state, \"base64\");\n  const decompressedString = zlib.inflateSync(binaryBuffer);\n  return JSON.parse(decompressedString);\n};\n\nconst JSON_BIN_API = \"https://api.jsonbin.io\";\nconst JSON_BIN_API_BINS = JSON_BIN_API + \"/b\";\nconst JSON_BIN_API_SECRET = \"$2b$10$Z2eAUT2PfRKn5RB55/Y30ujW8aUB1CCgRuUua3Jo9JX2WTetZRfIG\";\nconst TABIT_SONG_COLLECTION_ID = \"60218fa606934b65f53046ad\";\n\nconst put = (exportState, name) =>\n{\n  const binName = name ? name : exportState.songName;\n  // names are limited to 128 characters, let's be safe\n  const binShort = binName.slice(0, 64);\n  const stateToShare = encodeState(exportState);\n  const metadata = {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      \"secret-key\": JSON_BIN_API_SECRET,\n      \"collection-id\": TABIT_SONG_COLLECTION_ID,\n      private: false,\n      name: binShort\n    },\n    body: JSON.stringify(stateToShare)\n  };\n  return fetch( JSON_BIN_API_BINS, metadata )\n    .then(response => {\n      if(!response.ok)\n      {\n        throw new Error(\"Failed to upload song\");\n      }\n      else\n      {\n        return response.json();\n      }\n    }).then(data => {\n      return data.id;\n    });\n}\n\nconst get = (binID) =>\n{\n  const metadata = {\n    headers: { 'Content-Type': 'application/json' },\n  };\n  return fetch( JSON_BIN_API_BINS + \"/\" + binID, metadata )\n    .then( response => {\n      if(!response.ok)\n      {\n        throw new Error(\"Failed to upload song\");\n      }\n      else\n      {\n        return response.json();\n      }\n    } )\n    .then( js => {\n      return decodeState(js);\n    });\n};\n\nconst getLocalHistory = () => {\n  if(!storageAvailable('localStorage'))\n  {\n    return [];\n  }\n  const jsonHistory = localStorage.getItem(\"tabit-history\");\n  const songHistory = jsonHistory ? JSON.parse(jsonHistory).sort( (a,b) =>(b.date - a.date) ) : [];\n  return songHistory;\n};\n\nconst saveToLocalHistory = (exportState) => {\n    const stateToShare = encodeState(exportState);\n    const stateHash = hash(stateToShare);\n    let history = getLocalHistory();\n    const relevantHistory = history.filter( song => ( song.id === stateHash && song.name === exportState.songName ) );\n    if( relevantHistory.length !== 0 )\n    {\n      // found at least one history entry identical to this one ...\n      // update one, so it's the most recent entry\n      relevantHistory[0].date = Date.now();\n    }\n    else\n    {\n      // add history entry\n      const historyEntry = {\n        name: exportState.songName,\n        id: stateHash,\n        date: Date.now(),\n        content: stateToShare\n      };\n      history.push(historyEntry);\n    }\n\n    // resort & cap how many files we remember\n    const restrictedHistory = history.sort( (a,b) =>(b.date - a.date)  ).slice(0, 10);\n    localStorage.setItem(\"tabit-history\", JSON.stringify(restrictedHistory));\n};\n\nconst download = (exportState) => {\n  const destFilename = exportState.songName + \".tabit\";\n  const js = JSON.stringify(exportState, null, 4);\n  const blob = new Blob([js], {type: \"application/json\"});\n  saveAs(blob, destFilename);\n};\n\nexport {\n  decodeState,\n  get,\n  put,\n  download,\n  getLocalHistory,\n  saveToLocalHistory\n};\n","// Mobile.js\n\nfunction  isMobile()\n{\n  // the simple version from\n  // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n  const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n  const toMatch = [\n      /Android/i,\n      /webOS/i,\n      /iPhone/i,\n      /iPad/i,\n      /iPod/i,\n      /BlackBerry/i,\n      /Windows Phone/i\n  ];\n\n  return toMatch.some((toMatchItem) => {\n      return userAgent.match(toMatchItem);\n  });\n}\n\nexport { isMobile };","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: theme.palette.secondary\n  }\n}));\n\nfunction TabitBar(props) {\n  const classes = useStyles(props);\n  // we need to render \"null\" appbars for spacing purposes\n  // support them here, so that we can maintain layout parity in one place\n  if(props.placeholder)\n  {\n\n    return (\n\n      // <AppBar position=\"fixed\" // todo: I'd like to include the AppBar,\n      // className={classes.root}> // but it doesn't have the correct effect#\n        <Toolbar variant=\"dense\">\n        </Toolbar>\n      // </AppBar>\n    );\n  }\n\n  return (\n    <AppBar position=\"fixed\"\n      className={classes.root}\n    >\n\n      <Toolbar variant=\"dense\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open pattern list\"\n          edge=\"start\"\n          onClick={props.patternsToggle}\n          >\n          <MenuIcon />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"home\"\n          edge=\"start\"\n          component={Link}\n          to='/'\n          >\n          <HomeIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap style={{\"flexGrow\": 1, \"textOverflow\": \"ellipsis\"}}>\n          {props.title}\n        </Typography>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"download\"\n          edge=\"start\"\n          onClick={props.onDownload}\n          >\n          <SaveAltIcon />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"download\"\n          edge=\"start\"\n          onClick={props.onShare}\n          >\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open settings\"\n          edge=\"end\"\n          onClick={props.settingsToggle}\n        >\n          <SettingsIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default React.memo(TabitBar);\n"],"sourceRoot":""}